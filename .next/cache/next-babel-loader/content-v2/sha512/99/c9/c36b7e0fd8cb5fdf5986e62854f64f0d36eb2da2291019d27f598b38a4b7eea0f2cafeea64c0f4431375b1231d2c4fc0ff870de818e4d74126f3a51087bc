{"ast":null,"code":"import contract from \"../Ethereum/contract2\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nexport default async function getBuyEvents() {\n  let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n  let abi = [\"event BuyData(address recipient, uint transferValue, address indexed addressFrom, uint indexed dataID, string indexed timestamp)\"];\n  let ens = new ethers.Contract(contract._address, abi, provider);\n  var filter = ens.filters.BuyData(address = \"0x575390C554ecb761c31fA2D9A01Ce56186Fe4f48\");\n  filter.fromBlock = 0;\n  filter.toBlock = \"latest\";\n  const blockNumber = await provider.getBlockNumber();\n  const events = (await provider.getLogs(filter)).reverse();\n  console.log(events);\n  return {\n    blockNumber: blockNumber,\n    events: events\n  };\n}\n;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/components/getBuyEvents.js"],"names":["contract","web3","ethers","getBuyEvents","provider","providers","Web3Provider","currentProvider","abi","ens","Contract","_address","filter","filters","BuyData","address","fromBlock","toBlock","blockNumber","getBlockNumber","events","getLogs","reverse","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,eAAe,eAAeC,YAAf,GAA8B;AACzC,MAAIC,QAAQ,GAAG,IAAIF,MAAM,CAACG,SAAP,CAAiBC,YAArB,CAAkCL,IAAI,CAACM,eAAvC,CAAf;AAEA,MAAIC,GAAG,GAAG,CACR,kIADQ,CAAV;AAIA,MAAIC,GAAG,GAAG,IAAIP,MAAM,CAACQ,QAAX,CAAoBV,QAAQ,CAACW,QAA7B,EAAuCH,GAAvC,EAA4CJ,QAA5C,CAAV;AAEA,MAAIQ,MAAM,GAAGH,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoBC,OAAO,GAAG,4CAA9B,CAAb;AACAH,EAAAA,MAAM,CAACI,SAAP,GAAmB,CAAnB;AACAJ,EAAAA,MAAM,CAACK,OAAP,GAAiB,QAAjB;AAEA,QAAMC,WAAW,GAAG,MAAMd,QAAQ,CAACe,cAAT,EAA1B;AAEA,QAAMC,MAAM,GAAG,CAAC,MAAMhB,QAAQ,CAACiB,OAAT,CAAiBT,MAAjB,CAAP,EAAiCU,OAAjC,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,SAAO;AACHF,IAAAA,WAAW,EAAEA,WADV;AAEHE,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH;AAAA","sourcesContent":["import contract from \"../Ethereum/contract2\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nexport default async function getBuyEvents() {\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n\n    let abi = [\n      \"event BuyData(address recipient, uint transferValue, address indexed addressFrom, uint indexed dataID, string indexed timestamp)\",\n    ];\n\n    let ens = new ethers.Contract(contract._address, abi, provider);\n\n    var filter = ens.filters.BuyData(address = \"0x575390C554ecb761c31fA2D9A01Ce56186Fe4f48\");\n    filter.fromBlock = 0;\n    filter.toBlock = \"latest\";\n\n    const blockNumber = await provider.getBlockNumber();\n    \n    const events = (await provider.getLogs(filter)).reverse();\n\n    console.log(events);\n\n    return {\n        blockNumber: blockNumber,\n        events: events\n    };\n};"]},"metadata":{},"sourceType":"module"}