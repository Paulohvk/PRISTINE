{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/data/submit.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport contract from \"../../Ethereum/contract\";\nimport web3 from \"../../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nimport Common from \"ethereumjs-common\";\nimport { bufferToHex, privateToAddress } from \"ethereumjs-util\";\nimport Layout from \"../../components/Layout\";\n\nvar Tx = require(\"ethereumjs-tx\");\n\nvar Submit = /*#__PURE__*/function (_Component) {\n  _inherits(Submit, _Component);\n\n  var _super = _createSuper(Submit);\n\n  function Submit() {\n    var _this;\n\n    _classCallCheck(this, Submit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      type: \"\",\n      minPay: \"\",\n      id: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var timestamp, tag, addressFrom, privateKey, nonceNumber, customCommon, myData, rawTx, tx, serializedTx;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: \"\"\n                });\n\n                timestamp = +new Date();\n                console.log(timestamp);\n                _context.t0 = _this.state.type.toLowerCase();\n                _context.next = _context.t0 === \"temp\" ? 7 : _context.t0 === \"hum\" ? 9 : _context.t0 === \"both\" ? 11 : _context.t0 === \"pressure\" ? 13 : 15;\n                break;\n\n              case 7:\n                tag = 1;\n                return _context.abrupt(\"break\", 17);\n\n              case 9:\n                tag = 2;\n                return _context.abrupt(\"break\", 17);\n\n              case 11:\n                tag = 3;\n                return _context.abrupt(\"break\", 17);\n\n              case 13:\n                tag = 4;\n                return _context.abrupt(\"break\", 17);\n\n              case 15:\n                tag = 0;\n                return _context.abrupt(\"break\", 17);\n\n              case 17:\n                console.log(tag);\n                addressFrom = \"0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9\";\n                privateKey = new Buffer.from(\"e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec\", \"hex\");\n                _context.t1 = web3.utils;\n                _context.next = 23;\n                return web3.eth.getTransactionCount(addressFrom, \"pending\");\n\n              case 23:\n                _context.t2 = _context.sent;\n                nonceNumber = _context.t1.toHex.call(_context.t1, _context.t2);\n                console.log(nonceNumber);\n                customCommon = Common.forCustomChain(\"mainnet\", {\n                  name: \"TestNetwork\",\n                  networkId: 7777,\n                  chainId: 7777\n                }, \"petersburg\");\n                myData = contract.methods.EmitEvent(_this.state.type, timestamp.toString(), _this.state.minPay, _this.state.id, tag).encodeABI();\n                rawTx = {\n                  nonce: nonceNumber,\n                  from: addressFrom,\n                  gasLimit: web3.utils.toHex(100000),\n                  gasPrice: web3.utils.toHex(10e9),\n                  to: contract._address,\n                  data: myData\n                };\n                console.log(rawTx);\n                tx = new Tx.Transaction(rawTx, {\n                  common: customCommon\n                });\n                console.log(tx);\n                tx.sign(privateKey);\n                serializedTx = tx.serialize();\n                _context.next = 36;\n                return web3.eth.sendSignedTransaction(\"0x\" + serializedTx.toString(\"hex\")).on(\"receipt\", console.log);\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Submit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to the Events Contract!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Fill the form below to send an event to the blockchain: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.onSubmit,\n            error: !!this.state.errorMessage,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              label: \"Data Type:\",\n              placeholder: \"Temp / Humidity / Both\",\n              id: \"datatype\",\n              value: this.state.type,\n              onChange: function onChange(event) {\n                return _this2.setState({\n                  type: event.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              label: \"Minimum Payment (in Ether): \",\n              placeholder: \"Min. Payment\",\n              value: this.state.minPay,\n              onChange: function onChange(event) {\n                return _this2.setState({\n                  minPay: event.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              label: \"Serial number: \",\n              placeholder: \"Serial Number\",\n              value: this.state.id,\n              onChange: function onChange(event) {\n                return _this2.setState({\n                  id: event.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              loading: this.state.loading,\n              primary: true,\n              children: \"Submit!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context2.sent;\n                console.log(accounts[0]);\n                return _context2.abrupt(\"return\", {\n                  accounts: accounts\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Submit;\n}(Component);\n\nexport default Submit;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/data/submit.js"],"names":["React","Component","Form","Button","Input","Message","contract","web3","ethers","Common","bufferToHex","privateToAddress","Layout","Tx","require","Submit","type","minPay","id","errorMessage","loading","event","preventDefault","setState","timestamp","Date","console","log","state","toLowerCase","tag","addressFrom","privateKey","Buffer","from","utils","eth","getTransactionCount","nonceNumber","toHex","customCommon","forCustomChain","name","networkId","chainId","myData","methods","EmitEvent","toString","encodeABI","rawTx","nonce","gasLimit","gasPrice","to","_address","data","tx","Transaction","common","sign","serializedTx","serialize","sendSignedTransaction","on","onSubmit","target","value","getAccounts","accounts"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport contract from \"../../Ethereum/contract\";\nimport web3 from \"../../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nimport Common from \"ethereumjs-common\";\nimport { bufferToHex, privateToAddress } from \"ethereumjs-util\";\nimport Layout from \"../../components/Layout\";\nvar Tx = require(\"ethereumjs-tx\");\n\nclass Submit extends Component {\n  state = {\n    type: \"\",\n    minPay: \"\",\n    id: \"\",\n    errorMessage: \"\",\n    loading: false,\n  };\n\n  static async getInitialProps() {\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n\n    return { accounts };\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    const timestamp = +new Date();\n    console.log(timestamp);\n\n    switch (this.state.type.toLowerCase()) {\n      case \"temp\":\n        var tag = 1;\n        break;\n      case \"hum\":\n        var tag = 2;\n        break;\n      case \"both\":\n        var tag = 3;\n        break;\n      case \"pressure\":\n        var tag = 4;\n        break;\n      default:\n        var tag = 0;\n        break;\n    }\n\n    console.log(tag);\n\n    const addressFrom = \"0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9\";\n\n    var privateKey = new Buffer.from(\n      \"e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec\",\n      \"hex\"\n    );\n\n    var nonceNumber = web3.utils.toHex(\n      await web3.eth.getTransactionCount(addressFrom, \"pending\")\n    );\n    console.log(nonceNumber);\n\n    const customCommon = Common.forCustomChain(\n      \"mainnet\",\n      {\n        name: \"TestNetwork\",\n        networkId: 7777,\n        chainId: 7777,\n      },\n      \"petersburg\"\n    );\n\n    var myData = contract.methods\n      .EmitEvent(\n        this.state.type,\n        timestamp.toString(),\n        this.state.minPay,\n        this.state.id,\n        tag\n      )\n      .encodeABI();\n\n    var rawTx = {\n      nonce: nonceNumber,\n      from: addressFrom,\n      gasLimit: web3.utils.toHex(100000),\n      gasPrice: web3.utils.toHex(10e9),\n      to: contract._address,\n      data: myData,\n    };\n\n    console.log(rawTx);\n\n    var tx = new Tx.Transaction(rawTx, { common: customCommon });\n    console.log(tx);\n\n    tx.sign(privateKey);\n\n    var serializedTx = tx.serialize();\n\n    await web3.eth\n      .sendSignedTransaction(\"0x\" + serializedTx.toString(\"hex\"))\n      .on(\"receipt\", console.log);\n  };\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h2>Welcome to the Events Contract!</h2>\n          <h3> Fill the form below to send an event to the blockchain: </h3>\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Input\n              fluid\n              label=\"Data Type:\"\n              placeholder=\"Temp / Humidity / Both\"\n              id=\"datatype\"\n              value={this.state.type}\n              onChange={(event) => this.setState({ type: event.target.value })}\n            />\n            <Form.Input\n              fluid\n              label=\"Minimum Payment (in Ether): \"\n              placeholder=\"Min. Payment\"\n              value={this.state.minPay}\n              onChange={(event) =>\n                this.setState({ minPay: event.target.value })\n              }\n            />\n            <Form.Input\n              fluid\n              label=\"Serial number: \"\n              placeholder=\"Serial Number\"\n              value={this.state.id}\n              onChange={(event) => this.setState({ id: event.target.value })}\n            />\n            <h4></h4>\n            <Button loading={this.state.loading} primary>\n              Submit!\n            </Button>\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Submit;\n"]},"metadata":{},"sourceType":"module"}