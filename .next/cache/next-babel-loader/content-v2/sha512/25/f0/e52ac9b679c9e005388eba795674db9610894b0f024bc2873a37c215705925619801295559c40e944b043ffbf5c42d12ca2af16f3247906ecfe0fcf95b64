{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nclass TestIndex extends Component {\n  static async getInitialProps() {\n    // const iface = new ethers.utils.Interface(testContract.interface);\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n    const blockNumber = await provider.getBlockNumber();\n    let abi = [\"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\"];\n    let ens = new ethers.Contract(contract._address, abi, provider);\n    var filter = ens.filters.DataTransfer();\n    filter.fromBlock = 0;\n    filter.toBlock = \"latest\";\n    const decodedEvents = await provider.getLogs(filter);\n    console.log(decodedEvents);\n    return {\n      blockNumber,\n      decodedEvents\n    };\n  }\n\n  renderMarketPlace() {\n    const items = this.props.decodedEvents.map(address => {\n      return {\n        header: address.transactionHash,\n        meta: 'Block: ' + address.blockNumber,\n        description: /*#__PURE__*/_jsxDEV(Link, {\n          route: `/data/${address.transactionHash}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"View Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"There are \", this.props.blockNumber, \" blocks in the blockchain.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Showing all events from \", this.props.decodedEvents.topics[0], \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"There are a total of \", this.props.decodedEvents.length, \" events.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data in the Marketplace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          route: \"/data/submit\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              floated: \"right\",\n              content: \"Submit Data!\",\n              icon: \"add\",\n              primary: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), this.renderMarketPlace()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestIndex;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js"],"names":["React","Component","Button","Card","Layout","Link","testContract","contract","web3","ethers","TestIndex","getInitialProps","provider","providers","Web3Provider","currentProvider","blockNumber","getBlockNumber","abi","ens","Contract","_address","filter","filters","DataTransfer","fromBlock","toBlock","decodedEvents","getLogs","console","log","renderMarketPlace","items","props","map","address","header","transactionHash","meta","description","fluid","topics","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nclass TestIndex extends Component {\n  static async getInitialProps() {\n    // const iface = new ethers.utils.Interface(testContract.interface);\n\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n\n    const blockNumber = await provider.getBlockNumber();\n\n    let abi = [\n      \"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\",\n    ];\n\n    let ens = new ethers.Contract(contract._address, abi, provider);\n\n    var filter = ens.filters.DataTransfer();\n    filter.fromBlock = 0;\n    filter.toBlock = \"latest\";\n\n    const decodedEvents = await provider.getLogs(filter);\n    console.log(decodedEvents);\n\n    return { blockNumber, decodedEvents };\n  }\n\n  renderMarketPlace() {\n    const items = this.props.decodedEvents.map(address => {\n      return {\n          header: address.transactionHash,\n          meta: 'Block: ' + address.blockNumber,\n          description: <Link route = {`/data/${address.transactionHash}`}><a>View Data</a></Link>,\n          fluid: true\n      };\n  });\n\n    return(\n      <div>\n        <h3>There are {this.props.blockNumber} blocks in the blockchain.</h3>\n        <h3>Showing all events from {this.props.decodedEvents.topics[0]}.</h3>\n        <h3>There are a total of {this.props.decodedEvents.length} events.</h3>\n        <Card.Group items={items} />;\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h3>Data in the Marketplace</h3>\n          <Link route=\"/data/submit\">\n            <a>\n              <Button\n                floated=\"right\"\n                content=\"Submit Data!\"\n                icon=\"add\"\n                primary\n              />\n            </a>\n          </Link>\n          {this.renderMarketPlace()}\n          {/* Render Data */}\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default TestIndex;\n"]},"metadata":{},"sourceType":"module"}