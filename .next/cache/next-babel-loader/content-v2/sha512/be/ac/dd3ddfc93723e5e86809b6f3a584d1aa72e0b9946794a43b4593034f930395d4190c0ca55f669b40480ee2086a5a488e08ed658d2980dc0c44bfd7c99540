{"ast":null,"code":"import contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nexport default async function getEvents() {\n  let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n  let abi = [\"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\"];\n  let ens = new ethers.Contract(contract._address, abi, provider);\n  var filter = ens.filters.DataTransfer();\n  filter.fromBlock = 0;\n  filter.toBlock = \"latest\";\n  const blockNumber = await provider.getBlockNumber();\n  const events = (await provider.getLogs(filter)).reverse();\n  return {\n    blockNumber: blockNumber,\n    events: events\n  };\n}\n;","map":null,"metadata":{},"sourceType":"module"}