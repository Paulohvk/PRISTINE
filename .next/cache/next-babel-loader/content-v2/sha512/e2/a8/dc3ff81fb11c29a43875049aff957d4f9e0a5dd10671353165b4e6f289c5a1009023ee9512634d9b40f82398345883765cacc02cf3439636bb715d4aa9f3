{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Message } from \"semantic-ui-react\";\nimport contract from \"../../Ethereum/contract\";\nimport web3 from \"../../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nimport Common from \"ethereumjs-common\";\nimport { bufferToHex, privateToAddress } from \"ethereumjs-util\";\nimport Layout from \"../../components/Layout\";\nimport { Router } from '../../routes';\n\nvar Tx = require(\"ethereumjs-tx\");\n\nvar Submit = /*#__PURE__*/function (_Component) {\n  _inherits(Submit, _Component);\n\n  var _super = _createSuper(Submit);\n\n  function Submit() {\n    var _this;\n\n    _classCallCheck(this, Submit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      type: \"\",\n      minPay: \"\",\n      id: \"\",\n      errorMessage: \"\",\n      successMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var timestamp, tag, addressFrom, privateKey, nonceNumber, customCommon, myData, rawTx, tx, serializedTx, receipt;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: \"\",\n                  successMessage: \"\"\n                });\n\n                timestamp = +new Date();\n                console.log(timestamp);\n                _context.t0 = _this.state.type.toLowerCase();\n                _context.next = _context.t0 === \"temp\" ? 7 : _context.t0 === \"hum\" ? 9 : _context.t0 === \"both\" ? 11 : _context.t0 === \"pressure\" ? 13 : _context.t0 === \"test\" ? 15 : 17;\n                break;\n\n              case 7:\n                tag = 1;\n                return _context.abrupt(\"break\", 19);\n\n              case 9:\n                tag = 2;\n                return _context.abrupt(\"break\", 19);\n\n              case 11:\n                tag = 3;\n                return _context.abrupt(\"break\", 19);\n\n              case 13:\n                tag = 4;\n                return _context.abrupt(\"break\", 19);\n\n              case 15:\n                tag = 5;\n                return _context.abrupt(\"break\", 19);\n\n              case 17:\n                tag = 0;\n                return _context.abrupt(\"break\", 19);\n\n              case 19:\n                _context.prev = 19;\n                addressFrom = \"0x0af773490541a1a32e6bce0ac319975b1f4734ca\"; //\"0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9\";\n\n                privateKey = new Buffer.from(\"6ceeebd2bf996d1998d2778bb86a1c200d4423f1443dc51ee52c92076380e97b\", //\"e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec\",\n                \"hex\");\n                _context.t1 = web3.utils;\n                _context.next = 25;\n                return web3.eth.getTransactionCount(addressFrom, \"pending\");\n\n              case 25:\n                _context.t2 = _context.sent;\n                nonceNumber = _context.t1.toHex.call(_context.t1, _context.t2);\n                //console.log(nonceNumber);\n                customCommon = Common.forCustomChain(\"mainnet\", {\n                  name: \"localchain\",\n                  networkId: 777,\n                  chainId: 777\n                }, \"petersburg\");\n                myData = contract.methods.EmitEvent(_this.state.type, timestamp.toString(), _this.state.minPay, _this.state.id, tag).encodeABI();\n                rawTx = {\n                  nonce: nonceNumber,\n                  from: addressFrom,\n                  gasLimit: web3.utils.toHex(100000),\n                  gasPrice: web3.utils.toHex(10e9),\n                  to: contract._address,\n                  data: myData\n                };\n                tx = new Tx.Transaction(rawTx, {\n                  common: customCommon\n                });\n                tx.sign(privateKey);\n                serializedTx = tx.serialize();\n                _context.next = 35;\n                return web3.eth.sendSignedTransaction(\"0x\" + serializedTx.toString(\"hex\")).on(\"receipt\", console.log);\n\n              case 35:\n                receipt = _context.sent;\n\n                _this.setState({\n                  successMessage: \"Transaction successfull, transaction hash: \" + receipt.transactionHash\n                }); // Router.pushRoute('/');\n\n\n                _context.next = 42;\n                break;\n\n              case 39:\n                _context.prev = 39;\n                _context.t3 = _context[\"catch\"](19);\n\n                _this.setState({\n                  errorMessage: _context.t3.message\n                });\n\n              case 42:\n                _this.setState({\n                  loading: false\n                });\n\n              case 43:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[19, 39]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Submit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsx(Layout, {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"h2\", {\n            children: \"Welcome to the Events Contract!\"\n          }), /*#__PURE__*/_jsxs(\"h3\", {\n            children: [\" \", \"Fill the form below to send data information to the blockchain:\", \" \"]\n          }), /*#__PURE__*/_jsxs(Form, {\n            onSubmit: this.onSubmit,\n            error: !!this.state.errorMessage,\n            success: !!this.state.successMessage,\n            children: [/*#__PURE__*/_jsx(Form.Input, {\n              fluid: true,\n              label: {\n                children: \"Data Type:\",\n                style: {\n                  fontSize: '16px'\n                }\n              },\n              placeholder: \"Temp / Humidity / Both\",\n              id: \"datatype\",\n              value: this.state.type,\n              onChange: function onChange(event) {\n                return _this2.setState({\n                  type: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(Form.Input, {\n              fluid: true,\n              label: {\n                children: \"Minimum Payment (in Tokens): \",\n                style: {\n                  fontSize: '16px'\n                }\n              },\n              placeholder: \"Min. Payment\",\n              value: this.state.minPay,\n              onChange: function onChange(event) {\n                return _this2.setState({\n                  minPay: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(Form.Input, {\n              fluid: true,\n              label: {\n                children: \"Serial number: \",\n                style: {\n                  fontSize: '16px'\n                }\n              },\n              placeholder: \"Serial Number\",\n              value: this.state.id,\n              onChange: function onChange(event) {\n                return _this2.setState({\n                  id: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"h4\", {}), /*#__PURE__*/_jsx(Message, {\n              error: true,\n              header: \"Oops!\",\n              content: this.state.errorMessage\n            }), /*#__PURE__*/_jsx(Message, {\n              success: true,\n              header: \"Completed!\",\n              content: this.state.successMessage\n            }), /*#__PURE__*/_jsx(Button, {\n              loading: this.state.loading,\n              primary: true,\n              children: \"Submit!\"\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Submit;\n}(Component);\n\nexport default Submit;","map":null,"metadata":{},"sourceType":"module"}