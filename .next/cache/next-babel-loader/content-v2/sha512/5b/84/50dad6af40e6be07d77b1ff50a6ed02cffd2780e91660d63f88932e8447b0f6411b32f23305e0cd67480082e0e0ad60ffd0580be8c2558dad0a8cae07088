{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Message, Table, Grid, Modal } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport getEvents from \"../../components/getEvents\";\nimport getTags from \"../../components/getTags\";\nimport decodeData from \"../../components/decodeData\";\nimport web3 from \"../../Ethereum/web3\";\nimport contract2 from \"../../Ethereum/contract2\";\nimport Common from \"ethereumjs-common\";\n\nvar Tx = require(\"ethereumjs-tx\");\n\nvar Show = /*#__PURE__*/function (_Component) {\n  _inherits(Show, _Component);\n\n  var _super = _createSuper(Show);\n\n  function Show() {\n    var _this;\n\n    _classCallCheck(this, Show);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      buyer_add: \"\",\n      errorMessage: \"\",\n      successMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var timestamp, e, decodedData, dataID, addressFrom, transferValue, recipient, privateKey, nonceNumber, customCommon, myData, rawTx, tx, serializedTx, receipt;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: \"\",\n                  successMessage: \"\"\n                });\n\n                timestamp = +new Date(); // console.log(timestamp);\n\n                e = _this.props.event;\n                decodedData = decodeData(e);\n                dataID = parseInt(e.topics[2], 16);\n                addressFrom = _this.state.buyer_add;\n                transferValue = decodedData[2]._hex;\n                recipient = \"0x\" + e.topics[1].substr(26, 64); // const recipient = \"0xa1b9207bff69cc6149c13b820576403631f0b39d\";\n                // console.log('1 ' + dataID);\n                // console.log('2 ' + addressFrom);\n                // console.log('3 ' + transferValue);\n                // console.log('4 ' + recipient);\n\n                privateKey = new Buffer.from(\"51d6a4bb8508c91a3d78de5d4a137c83bb6f602998937e2c034f1c7eb656609c\", //\"e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec\",\n                \"hex\");\n                _context.prev = 10;\n                _context.t0 = web3.utils;\n                _context.next = 14;\n                return web3.eth.getTransactionCount(addressFrom, \"pending\");\n\n              case 14:\n                _context.t1 = _context.sent;\n                nonceNumber = _context.t0.toHex.call(_context.t0, _context.t1);\n                console.log(nonceNumber);\n                customCommon = Common.forCustomChain(\"mainnet\", {\n                  name: \"localchain\",\n                  networkId: 777,\n                  chainId: 777\n                }, \"petersburg\");\n                myData = contract2.methods.EmitEvent(recipient, transferValue, dataID, timestamp.toString()).encodeABI();\n                rawTx = {\n                  nonce: nonceNumber,\n                  from: addressFrom,\n                  gasLimit: web3.utils.toHex(100000),\n                  gasPrice: web3.utils.toHex(10e9),\n                  to: contract2._address,\n                  data: myData,\n                  value: transferValue\n                };\n                tx = new Tx.Transaction(rawTx, {\n                  common: customCommon\n                });\n                tx.sign(privateKey);\n                serializedTx = tx.serialize();\n                _context.next = 25;\n                return web3.eth.sendSignedTransaction(\"0x\" + serializedTx.toString(\"hex\")).on(\"receipt\", console.log);\n\n              case 25:\n                receipt = _context.sent;\n\n                _this.setState({\n                  successMessage: \"Transaction successfull, transaction hash: \" + receipt.transactionHash\n                });\n\n                _context.next = 32;\n                break;\n\n              case 29:\n                _context.prev = 29;\n                _context.t2 = _context[\"catch\"](10);\n\n                _this.setState({\n                  errorMessage: _context.t2.message\n                });\n\n              case 32:\n                _this.setState({\n                  loading: false\n                });\n\n              case 33:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[10, 29]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Show, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var e = this.props.event;\n      var decodedData = decodeData(e);\n      var txHash = e.transactionHash;\n      var blockHash = e.blockHash;\n      var blockNumber = e.blockNumber;\n      var dataOwner = \"0x\" + e.topics[1].substr(26, 64).toUpperCase();\n      var dataType = getTags(e);\n      var dataID = parseInt(e.topics[2], 16);\n      var cost = decodedData[2]._hex;\n      var timestamp = new Date(parseInt(decodedData[1])).toLocaleString();\n      var colour = \"yellow\";\n      return /*#__PURE__*/_jsx(Layout, {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsxs(Table, {\n            color: colour,\n            children: [/*#__PURE__*/_jsx(Table.Header, {\n              children: /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.HeaderCell, {\n                  children: \"Property\"\n                }), /*#__PURE__*/_jsx(Table.HeaderCell, {\n                  children: \"Value\"\n                })]\n              })\n            }), /*#__PURE__*/_jsxs(Table.Body, {\n              children: [/*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Transaction Hash:\"\n                }), /*#__PURE__*/_jsx(Table.Cell, {\n                  children: txHash\n                })]\n              }), /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Block Hash:\"\n                }), /*#__PURE__*/_jsx(Table.Cell, {\n                  children: blockHash\n                })]\n              }), /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Block Number:\"\n                }), /*#__PURE__*/_jsx(Table.Cell, {\n                  children: blockNumber\n                })]\n              }), /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Data Owner:\"\n                }), /*#__PURE__*/_jsx(Table.Cell, {\n                  children: dataOwner\n                })]\n              }), /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Data Tags:\"\n                }), /*#__PURE__*/_jsx(Table.Cell, {\n                  children: dataType\n                })]\n              }), /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Data ID:\"\n                }), /*#__PURE__*/_jsx(Table.Cell, {\n                  children: dataID\n                })]\n              }), /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Data Cost:\"\n                }), /*#__PURE__*/_jsxs(Table.Cell, {\n                  children: [parseInt(cost, 16), \" Tokens\"]\n                })]\n              }), /*#__PURE__*/_jsxs(Table.Row, {\n                children: [/*#__PURE__*/_jsx(Table.Cell, {\n                  children: \"Timestamp:\"\n                }), /*#__PURE__*/_jsx(Table.Cell, {\n                  children: timestamp\n                })]\n              })]\n            })]\n          }, colour), /*#__PURE__*/_jsx(Form, {\n            onSubmit: this.onSubmit,\n            error: !!this.state.errorMessage,\n            success: !!this.state.successMessage,\n            children: /*#__PURE__*/_jsxs(Grid, {\n              children: [/*#__PURE__*/_jsxs(Grid.Row, {\n                children: [/*#__PURE__*/_jsx(Grid.Column, {\n                  width: 8,\n                  children: /*#__PURE__*/_jsx(Form.Input, {\n                    flex: \"true\",\n                    label: {\n                      children: \"Your Address:\",\n                      style: {\n                        fontSize: '16px'\n                      }\n                    },\n                    placeholder: \"0xabcd1234\",\n                    id: \"buyer_add\",\n                    value: this.state.buyer_add,\n                    onChange: function onChange(event) {\n                      return _this2.setState({\n                        buyer_add: event.target.value\n                      });\n                    }\n                  })\n                }), /*#__PURE__*/_jsx(Grid.Column, {\n                  verticalAlign: \"middle\",\n                  width: 5,\n                  children: /*#__PURE__*/_jsxs(Button, {\n                    loading: this.state.loading,\n                    primary: true,\n                    children: [\"Buy for \", parseInt(cost, 16), \" Tokens\"]\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(\"h4\", {}), /*#__PURE__*/_jsx(Message, {\n                error: true,\n                header: \"Oops!\",\n                content: this.state.errorMessage\n              }), /*#__PURE__*/_jsx(Message, {\n                success: true,\n                header: \"Completed!\",\n                content: this.state.successMessage\n              })]\n            })\n          })]\n        })\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props) {\n        var address, results, decodedEvents, aux, index, event;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                address = props.query.address;\n                _context2.next = 3;\n                return getEvents();\n\n              case 3:\n                results = _context2.sent;\n                decodedEvents = results.events;\n\n                aux = function aux(item) {\n                  return item.transactionHash === address;\n                };\n\n                index = decodedEvents.findIndex(aux);\n                event = decodedEvents[index];\n                return _context2.abrupt(\"return\", {\n                  event: event\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Show;\n}(Component);\n\nexport default Show;","map":null,"metadata":{},"sourceType":"module"}