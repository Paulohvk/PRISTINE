{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport contract from '../Ethereum/contract0';\nimport web3 from '../Ethereum/web3';\nimport Common from 'ethereumjs-common';\nimport { bufferToHex, privateToAddress } from 'ethereumjs-util';\n\nvar Tx = require('ethereumjs-tx');\n\nvar TestIndex = /*#__PURE__*/function (_Component) {\n  _inherits(TestIndex, _Component);\n\n  var _super = _createSuper(TestIndex);\n\n  function TestIndex() {\n    var _this;\n\n    _classCallCheck(this, TestIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                account = _this.props.accounts[0];\n                console.log(account);\n                _context.next = 4;\n                return web3.eth.sendTransaction({\n                  from: account,\n                  to: \"0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9\",\n                  value: web3.utils.toWei(\"50\", 'ether')\n                }).on('receipt', console.log);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick2\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var text;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return contract.methods.text().call();\n\n              case 2:\n                text = _context2.sent;\n                window.alert(text);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick3\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                account = _this.props.accounts[0];\n                console.log(account);\n                _context3.next = 4;\n                return contract.methods.setText(\"Test 1234\").send({\n                  from: account,\n                  gas: '100000'\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick4\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var customCommon, privateKey, addressFrom, addressTo, nonceNumber, rawTx, tx, serializedTx;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                customCommon = Common.forCustomChain('mainnet', {\n                  name: 'TestNetwork',\n                  networkId: 7777,\n                  chainId: 7777\n                }, 'petersburg');\n                privateKey = new Buffer('e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec', 'hex');\n                addressFrom = '0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9';\n                addressTo = '0xdf41d535f8c4ddb21270c0e69136a02608ac09ea';\n                _context4.t0 = web3.utils;\n                _context4.next = 7;\n                return web3.eth.getTransactionCount(addressFrom, 'pending');\n\n              case 7:\n                _context4.t1 = _context4.sent;\n                nonceNumber = _context4.t0.toHex.call(_context4.t0, _context4.t1);\n                console.log(nonceNumber);\n                rawTx = {\n                  nonce: nonceNumber,\n                  from: addressFrom,\n                  gasLimit: web3.utils.toHex(25000),\n                  gasPrice: web3.utils.toHex(10e9),\n                  to: addressTo,\n                  value: web3.utils.toHex(web3.utils.toWei('20', 'ether'))\n                };\n                console.log(rawTx);\n                tx = new Tx.Transaction(rawTx, {\n                  common: customCommon\n                });\n                console.log(tx);\n                tx.sign(privateKey);\n\n                if (tx.validate() && bufferToHex(tx.getSenderAddress()) === bufferToHex(privateToAddress(privateKey))) {\n                  console.log('Valid signature');\n                } else {\n                  console.log('Invalid signature');\n                }\n\n                console.log(\"The transaction's chain id is\", tx.getChainId());\n                serializedTx = tx.serialize();\n                _context4.next = 20;\n                return web3.eth.sendSignedTransaction('0x' + serializedTx.toString('hex')).on('receipt', console.log);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(TestIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Welcome to the local Blockchain Network!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Make a transaction: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: this.onClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Check Text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: this.onClick2,\n          children: \"Check Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Set new text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: this.onClick3,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Send Raw transaction: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: this.onClick4,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context5.sent;\n                console.log(accounts[0]);\n                return _context5.abrupt(\"return\", {\n                  accounts: accounts\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return TestIndex;\n}(Component);\n\nexport default TestIndex;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js"],"names":["React","Component","Form","Button","Input","Message","contract","web3","Common","bufferToHex","privateToAddress","Tx","require","TestIndex","event","account","props","accounts","console","log","eth","sendTransaction","from","to","value","utils","toWei","on","methods","text","call","window","alert","setText","send","gas","customCommon","forCustomChain","name","networkId","chainId","privateKey","Buffer","addressFrom","addressTo","getTransactionCount","nonceNumber","toHex","rawTx","nonce","gasLimit","gasPrice","tx","Transaction","common","sign","validate","getSenderAddress","getChainId","serializedTx","serialize","sendSignedTransaction","toString","onClick","onClick2","onClick3","onClick4","getAccounts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\nimport contract from '../Ethereum/contract0';\nimport web3 from '../Ethereum/web3';\nimport Common from 'ethereumjs-common';\nimport { bufferToHex, privateToAddress } from 'ethereumjs-util'\nvar Tx = require('ethereumjs-tx');\n\nclass TestIndex extends Component {\n\n    static async getInitialProps() {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts[0]);\n\n        return {accounts};\n    }\n\n    onClick = async(event) => {\n        const account = this.props.accounts[0];\n        console.log(account);\n        await web3.eth.sendTransaction({from: account,\n            to: \"0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9\",\n            value: web3.utils.toWei(\"50\", 'ether')})\n            .on('receipt', console.log);\n    }\n\n    onClick2 = async(event) => {\n        const text = await contract.methods.text().call();\n        window.alert(text);\n    }\n\n    onClick3 = async(event) => {\n        const account = this.props.accounts[0];\n        console.log(account);\n        await contract.methods.setText(\"Test 1234\")\n        .send({from: account, gas: '100000'});\n    }\n\n    onClick4 = async(event) => {\n        const customCommon = Common.forCustomChain(\n            'mainnet',\n            {\n              name: 'TestNetwork',\n              networkId: 7777,\n              chainId: 7777,\n            },\n            'petersburg',\n          )\n\n        var privateKey = new Buffer('e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec', 'hex')\n\n        const addressFrom = '0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9';\n\n        const addressTo = '0xdf41d535f8c4ddb21270c0e69136a02608ac09ea';\n        \n        var nonceNumber = web3.utils.toHex(await web3.eth.getTransactionCount(addressFrom, 'pending'));\n            console.log(nonceNumber);\n        var rawTx = {\n            nonce: nonceNumber,\n            from: addressFrom,\n            gasLimit: web3.utils.toHex(25000),\n            gasPrice: web3.utils.toHex(10e9),\n            to: addressTo,\n            value: web3.utils.toHex(web3.utils.toWei('20', 'ether')),\n        }\n\n        console.log(rawTx);\n\n        var tx = new Tx.Transaction(rawTx,{common: customCommon});\n\n        console.log(tx);\n\n        tx.sign(privateKey);\n\n        if (\n            tx.validate() &&\n            bufferToHex(tx.getSenderAddress()) === bufferToHex(privateToAddress(privateKey))\n          ) {\n            console.log('Valid signature')\n          } else {\n            console.log('Invalid signature')\n          }\n        \n        console.log(\"The transaction's chain id is\", tx.getChainId())\n\n        var serializedTx = tx.serialize();\n\n        await web3.eth.sendSignedTransaction('0x' + serializedTx.toString('hex'))\n        .on('receipt', console.log);\n    }\n\n    render() {\n        return (<div>\n            <div>Welcome to the local Blockchain Network!</div>\n            <h3> Make a transaction: </h3>\n            <Button type='submit' onClick={this.onClick}>Submit</Button>\n\n            <h3> Check Text: </h3>\n            <Button type='submit' onClick={this.onClick2}>Check Text</Button>\n            <h3> Set new text: </h3>\n            <Button type='submit' onClick={this.onClick3}>Submit</Button>\n            <h3> Send Raw transaction: </h3>\n            <Button type='submit' onClick={this.onClick4}>Submit</Button>\n            </div>\n        );\n    }\n}\n\nexport default TestIndex;"]},"metadata":{},"sourceType":"module"}