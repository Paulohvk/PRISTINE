{"ast":null,"code":"import _regeneratorRuntime from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport contract from \"../Ethereum/contract2\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nexport default function getBuyEvents() {\n  return _getBuyEvents.apply(this, arguments);\n}\n\nfunction _getBuyEvents() {\n  _getBuyEvents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var provider, abi, ens, filter, blockNumber, events, filter2, events2;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = new ethers.providers.Web3Provider(web3.currentProvider);\n            abi = [\"event BuyData(address recipient, uint transferValue, address indexed addressFrom, uint indexed dataID, string indexed timestamp)\"];\n            ens = new ethers.Contract(contract._address, abi, provider);\n            filter = ens.filters.BuyData();\n            filter.fromBlock = 0;\n            filter.toBlock = \"latest\";\n            _context.next = 8;\n            return provider.getBlockNumber();\n\n          case 8:\n            blockNumber = _context.sent;\n            _context.next = 11;\n            return provider.getLogs(filter);\n\n          case 11:\n            events = _context.sent.reverse();\n            filter2 = {\n              address: \"0x575390C554ecb761c31fA2D9A01Ce56186Fe4f48\"\n            };\n            _context.next = 15;\n            return provider.getLogs(filter2);\n\n          case 15:\n            events2 = _context.sent.reverse();\n            console.log(events2);\n            return _context.abrupt(\"return\", {\n              blockNumber: blockNumber,\n              events: events\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getBuyEvents.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/components/getBuyEvents.js"],"names":["contract","web3","ethers","getBuyEvents","provider","providers","Web3Provider","currentProvider","abi","ens","Contract","_address","filter","filters","BuyData","fromBlock","toBlock","getBlockNumber","blockNumber","getLogs","events","reverse","filter2","address","events2","console","log"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,wBAA8BC,YAA9B;AAAA;AAAA;;;2EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,QADO,GACI,IAAIF,MAAM,CAACG,SAAP,CAAiBC,YAArB,CAAkCL,IAAI,CAACM,eAAvC,CADJ;AAGPC,YAAAA,GAHO,GAGD,CACR,kIADQ,CAHC;AAOPC,YAAAA,GAPO,GAOD,IAAIP,MAAM,CAACQ,QAAX,CAAoBV,QAAQ,CAACW,QAA7B,EAAuCH,GAAvC,EAA4CJ,QAA5C,CAPC;AASPQ,YAAAA,MATO,GASEH,GAAG,CAACI,OAAJ,CAAYC,OAAZ,EATF;AAUXF,YAAAA,MAAM,CAACG,SAAP,GAAmB,CAAnB;AACAH,YAAAA,MAAM,CAACI,OAAP,GAAiB,QAAjB;AAXW;AAAA,mBAaeZ,QAAQ,CAACa,cAAT,EAbf;;AAAA;AAaLC,YAAAA,WAbK;AAAA;AAAA,mBAeWd,QAAQ,CAACe,OAAT,CAAiBP,MAAjB,CAfX;;AAAA;AAeLQ,YAAAA,MAfK,iBAeqCC,OAfrC;AAiBPC,YAAAA,OAjBO,GAiBG;AACZC,cAAAA,OAAO,EAAE;AADG,aAjBH;AAAA;AAAA,mBAoBYnB,QAAQ,CAACe,OAAT,CAAiBG,OAAjB,CApBZ;;AAAA;AAoBLE,YAAAA,OApBK,iBAoBuCH,OApBvC;AAsBXI,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAtBW,6CAwBJ;AACHN,cAAAA,WAAW,EAAEA,WADV;AAEHE,cAAAA,MAAM,EAAEA;AAFL,aAxBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA4Bd","sourcesContent":["import contract from \"../Ethereum/contract2\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nexport default async function getBuyEvents() {\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n\n    let abi = [\n      \"event BuyData(address recipient, uint transferValue, address indexed addressFrom, uint indexed dataID, string indexed timestamp)\",\n    ];\n\n    let ens = new ethers.Contract(contract._address, abi, provider);\n\n    var filter = ens.filters.BuyData();\n    filter.fromBlock = 0;\n    filter.toBlock = \"latest\";\n\n    const blockNumber = await provider.getBlockNumber();\n    \n    const events = (await provider.getLogs(filter)).reverse();\n\n    var filter2 = {\n      address: \"0x575390C554ecb761c31fA2D9A01Ce56186Fe4f48\"\n    }\n    const events2 = (await provider.getLogs(filter2)).reverse();\n\n    console.log(events2);\n\n    return {\n        blockNumber: blockNumber,\n        events: events\n    };\n};"]},"metadata":{},"sourceType":"module"}