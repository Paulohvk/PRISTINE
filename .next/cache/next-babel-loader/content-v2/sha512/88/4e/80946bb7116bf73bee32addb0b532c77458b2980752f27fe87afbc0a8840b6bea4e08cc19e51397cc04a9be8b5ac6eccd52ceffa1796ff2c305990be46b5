{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Message } from \"semantic-ui-react\";\nimport contract from \"../../Ethereum/contract\";\nimport web3 from \"../../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nimport Common from \"ethereumjs-common\";\nimport { bufferToHex, privateToAddress } from \"ethereumjs-util\";\nimport Layout from \"../../components/Layout\";\nimport { Router } from '../../routes';\n\nvar Tx = require(\"ethereumjs-tx\");\n\nclass Submit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      type: \"\",\n      minPay: \"\",\n      id: \"\",\n      errorMessage: \"\",\n      successMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: \"\",\n        successMessage: \"\"\n      });\n      const timestamp = +new Date();\n      console.log(timestamp);\n\n      switch (this.state.type.toLowerCase()) {\n        case \"temp\":\n          var tag = 1;\n          break;\n\n        case \"hum\":\n          var tag = 2;\n          break;\n\n        case \"both\":\n          var tag = 3;\n          break;\n\n        case \"pressure\":\n          var tag = 4;\n          break;\n\n        case \"test\":\n          var tag = 5;\n          break;\n\n        default:\n          var tag = 0;\n          break;\n      } // console.log(tag);\n\n\n      try {\n        const addressFrom = \"0x0af773490541a1a32e6bce0ac319975b1f4734ca\"; //\"0x1206D8C3c73e40c8AfD0D878bbaa28609F9A72a9\";\n\n        var privateKey = new Buffer.from(\"6ceeebd2bf996d1998d2778bb86a1c200d4423f1443dc51ee52c92076380e97b\", //\"e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec\",\n        \"hex\");\n        var nonceNumber = web3.utils.toHex(await web3.eth.getTransactionCount(addressFrom, \"pending\")); //console.log(nonceNumber);\n\n        const customCommon = Common.forCustomChain(\"mainnet\", {\n          name: \"localchain\",\n          networkId: 777,\n          chainId: 777\n        }, \"petersburg\");\n        var myData = contract.methods.EmitEvent(this.state.type, timestamp.toString(), this.state.minPay, this.state.id, tag).encodeABI();\n        var rawTx = {\n          nonce: nonceNumber,\n          from: addressFrom,\n          gasLimit: web3.utils.toHex(100000),\n          gasPrice: web3.utils.toHex(10e9),\n          to: contract._address,\n          data: myData\n        };\n        var tx = new Tx.Transaction(rawTx, {\n          common: customCommon\n        });\n        tx.sign(privateKey);\n        var serializedTx = tx.serialize();\n        var receipt = await web3.eth.sendSignedTransaction(\"0x\" + serializedTx.toString(\"hex\")).on(\"receipt\", console.log);\n        this.setState({\n          successMessage: \"Transaction successfull, transaction hash: \" + receipt.transactionHash\n        }); // Router.pushRoute('/');\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          children: \"Welcome to the Events Contract!\"\n        }), /*#__PURE__*/_jsxs(\"h3\", {\n          children: [\" \", \"Fill the form below to send data information to the blockchain:\", \" \"]\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: this.onSubmit,\n          error: !!this.state.errorMessage,\n          success: !!this.state.successMessage,\n          children: [/*#__PURE__*/_jsx(Form.Input, {\n            fluid: true,\n            label: {\n              children: \"Data Type:\",\n              style: {\n                fontSize: '16px'\n              }\n            },\n            placeholder: \"Temp / Humidity / Both\",\n            id: \"datatype\",\n            value: this.state.type,\n            onChange: event => this.setState({\n              type: event.target.value\n            })\n          }), /*#__PURE__*/_jsx(Form.Input, {\n            fluid: true,\n            label: {\n              children: \"Minimum Payment (in Tokens): \",\n              style: {\n                fontSize: '16px'\n              }\n            },\n            placeholder: \"Min. Payment\",\n            value: this.state.minPay,\n            onChange: event => this.setState({\n              minPay: event.target.value\n            })\n          }), /*#__PURE__*/_jsx(Form.Input, {\n            fluid: true,\n            label: {\n              children: \"Serial number: \",\n              style: {\n                fontSize: '16px'\n              }\n            },\n            placeholder: \"Serial Number\",\n            value: this.state.id,\n            onChange: event => this.setState({\n              id: event.target.value\n            })\n          }), /*#__PURE__*/_jsx(\"h4\", {}), /*#__PURE__*/_jsx(Message, {\n            error: true,\n            header: \"Oops!\",\n            content: this.state.errorMessage\n          }), /*#__PURE__*/_jsx(Message, {\n            success: true,\n            header: \"Completed!\",\n            content: this.state.successMessage\n          }), /*#__PURE__*/_jsx(Button, {\n            loading: this.state.loading,\n            primary: true,\n            children: \"Submit!\"\n          })]\n        })]\n      })\n    });\n  }\n\n}\n\nexport default Submit;","map":null,"metadata":{},"sourceType":"module"}