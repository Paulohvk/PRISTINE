{"ast":null,"code":"import _regeneratorRuntime from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport contract from \"../Ethereum/contract2\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nexport default function getBuyEvents() {\n  return _getBuyEvents.apply(this, arguments);\n}\n\nfunction _getBuyEvents() {\n  _getBuyEvents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var provider, abi, ens, filter, blockNumber, events;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = new ethers.providers.Web3Provider(web3.currentProvider);\n            abi = [\"event BuyData(address recipient, uint transferValue, address indexed addressFrom, uint indexed dataID, string indexed timestamp)\"];\n            ens = new ethers.Contract(contract._address, abi, provider);\n            filter = ens.filters.BuyData();\n            filter.fromBlock = 0;\n            filter.toBlock = \"latest\";\n            _context.next = 8;\n            return provider.getBlockNumber();\n\n          case 8:\n            blockNumber = _context.sent;\n            _context.next = 11;\n            return provider.getLogs(filter);\n\n          case 11:\n            events = _context.sent.reverse();\n            return _context.abrupt(\"return\", {\n              blockNumber: blockNumber,\n              events: events\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getBuyEvents.apply(this, arguments);\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}