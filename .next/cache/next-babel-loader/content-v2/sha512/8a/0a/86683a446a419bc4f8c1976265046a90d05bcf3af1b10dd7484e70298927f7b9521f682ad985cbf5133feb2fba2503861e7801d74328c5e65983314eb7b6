{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Grid, Segment } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nclass TestIndex extends Component {\n  static async getInitialProps() {\n    // const iface = new ethers.utils.Interface(testContract.interface);\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n    const blockNumber = await provider.getBlockNumber();\n    let abi = [\"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\"];\n    let ens = new ethers.Contract(contract._address, abi, provider);\n    var filter = ens.filters.DataTransfer();\n    filter.fromBlock = 0;\n    filter.toBlock = \"latest\";\n    const decodedEvents = (await provider.getLogs(filter)).reverse();\n    console.log(decodedEvents);\n    return {\n      abi,\n      blockNumber,\n      decodedEvents\n    };\n  }\n\n  renderMarketPlace() {\n    const items = this.props.decodedEvents.map(address => {\n      var dataType = \"\";\n\n      switch (address.topics[3].slice(-1)) {\n        case \"1\":\n          dataType = \"Temperature\";\n          break;\n\n        case \"2\":\n          dataType = \"Humidity\";\n          break;\n\n        case \"3\":\n          dataType = \"Temp and Humidity\";\n          break;\n\n        case \"4\":\n          dataType = \"Pressure\";\n          break;\n\n        case \"5\":\n          dataType = \"Test Data\";\n          break;\n\n        default:\n          dataType = \"Any\";\n          break;\n      }\n\n      const decoder = new ethers.utils.AbiCoder();\n      const decodedData = decoder.decode([\"string\", \"string\", \"uint\"], address.data);\n      const timestamp = new Date(parseInt(decodedData[1])).toLocaleString();\n      console.log(decodedData[1]);\n      const cost = decodedData[2]._hex;\n      return {\n        header: address.transactionHash,\n        meta: \"Block: \" + address.blockNumber,\n        description: /*#__PURE__*/_jsxDEV(Grid, {\n          verticalAlign: \"middle\",\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              floated: \"left\",\n              width: 12,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"From: 0x\", address.topics[1].substr(26, 64).toUpperCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Tags: \", dataType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"ID: \", parseInt(address.topics[2], 16)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Cost: \", parseInt(cost, 16), \" Ether\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Timestamp: \", timestamp]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              floated: \"right\",\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                children: \"Buy this data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this),\n        //'Data: ' + dataType + 'ID: ' + parseInt(address.topics[2],16),\n        //extra  // <Link route={`/data/${address.transactionHash}`}>\n        //   <a>View Data</a>\n        // </Link>\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"There are \", this.props.blockNumber, \" blocks in the blockchain.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Smart contract at \", this.props.decodedEvents[0].address, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Event signature \", this.props.decodedEvents[0].topics[0], \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"There are a total of \", this.props.decodedEvents.length, \" events.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data in the Marketplace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          route: \"/data/submit\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              floated: \"right\",\n              content: \"Submit Data!\",\n              icon: \"add\",\n              primary: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), this.renderMarketPlace()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestIndex;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js"],"names":["React","Component","Button","Card","Grid","Segment","Layout","Link","testContract","contract","web3","ethers","TestIndex","getInitialProps","provider","providers","Web3Provider","currentProvider","blockNumber","getBlockNumber","abi","ens","Contract","_address","filter","filters","DataTransfer","fromBlock","toBlock","decodedEvents","getLogs","reverse","console","log","renderMarketPlace","items","props","map","address","dataType","topics","slice","decoder","utils","AbiCoder","decodedData","decode","data","timestamp","Date","parseInt","toLocaleString","cost","_hex","header","transactionHash","meta","description","substr","toUpperCase","fluid","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card, Grid, Segment } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nclass TestIndex extends Component {\n  static async getInitialProps() {\n    // const iface = new ethers.utils.Interface(testContract.interface);\n\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n\n    const blockNumber = await provider.getBlockNumber();\n\n    let abi = [\n      \"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\",\n    ];\n\n    let ens = new ethers.Contract(contract._address, abi, provider);\n\n    var filter = ens.filters.DataTransfer();\n    filter.fromBlock = 0;\n    filter.toBlock = \"latest\";\n\n    const decodedEvents = (await provider.getLogs(filter)).reverse();\n    console.log(decodedEvents);\n\n    return { abi, blockNumber, decodedEvents };\n  }\n\n  renderMarketPlace() {\n    const items = this.props.decodedEvents.map((address) => {\n      var dataType = \"\";\n      switch (address.topics[3].slice(-1)) {\n        case \"1\":\n          dataType = \"Temperature\";\n          break;\n        case \"2\":\n          dataType = \"Humidity\";\n          break;\n        case \"3\":\n          dataType = \"Temp and Humidity\";\n          break;\n        case \"4\":\n          dataType = \"Pressure\";\n          break;\n        case \"5\":\n          dataType = \"Test Data\";\n          break;\n        default:\n          dataType = \"Any\";\n          break;\n      }\n      const decoder = new ethers.utils.AbiCoder();\n      const decodedData = decoder.decode(\n        [\"string\", \"string\", \"uint\"],\n        address.data\n      );\n      const timestamp = new Date(parseInt(decodedData[1])).toLocaleString();\n      console.log(decodedData[1]);\n      const cost = decodedData[2]._hex;\n\n      return {\n        header: address.transactionHash,\n        meta: \"Block: \" + address.blockNumber,\n        description: (\n          <Grid verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column floated='left' width={12}>\n              <div>\n                From: 0x{address.topics[1].substr(26, 64).toUpperCase()}\n              </div>\n              <div>Tags: {dataType}</div>\n              <div>ID: {parseInt(address.topics[2], 16)}</div>\n              <div>Cost: {parseInt(cost, 16)} Ether</div>\n              <div>Timestamp: {timestamp}</div>\n            </Grid.Column>\n            <Grid.Column floated='right' width={3}>\n              <Button primary>Buy this data</Button>\n            </Grid.Column>\n          </Grid.Row>\n          </Grid>\n        ), //'Data: ' + dataType + 'ID: ' + parseInt(address.topics[2],16),\n        //extra  // <Link route={`/data/${address.transactionHash}`}>\n        //   <a>View Data</a>\n        // </Link>\n        fluid: true,\n      };\n    });\n\n    return (\n      <div>\n        <h3>There are {this.props.blockNumber} blocks in the blockchain.</h3>\n        <h3>Smart contract at {this.props.decodedEvents[0].address}.</h3>\n        <h3>Event signature {this.props.decodedEvents[0].topics[0]}.</h3>\n        <h3>There are a total of {this.props.decodedEvents.length} events.</h3>\n        <Card.Group items={items} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h3>Data in the Marketplace</h3>\n          <Link route=\"/data/submit\">\n            <a>\n              <Button\n                floated=\"right\"\n                content=\"Submit Data!\"\n                icon=\"add\"\n                primary\n              />\n            </a>\n          </Link>\n          {this.renderMarketPlace()}\n          {/* Render Data */}\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default TestIndex;\n"]},"metadata":{},"sourceType":"module"}