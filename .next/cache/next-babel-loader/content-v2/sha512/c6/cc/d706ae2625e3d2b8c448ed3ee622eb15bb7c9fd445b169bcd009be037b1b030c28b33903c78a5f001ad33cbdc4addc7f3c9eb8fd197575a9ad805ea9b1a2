{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/data/show.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Message, Table, Grid, Modal } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport getEvents from \"../../components/getEvents\";\nimport getTags from \"../../components/getTags\";\nimport decodeData from \"../../components/decodeData\";\nimport web3 from \"../../Ethereum/web3\";\nimport contract2 from \"../../Ethereum/contract2\";\nimport Common from \"ethereumjs-common\";\n\nvar Tx = require(\"ethereumjs-tx\");\n\nclass Show extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      buyer_add: \"\",\n      errorMessage: \"\",\n      successMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: \"\",\n        successMessage: \"\"\n      });\n      const timestamp = +new Date(); // console.log(timestamp);\n\n      const e = this.props.event;\n      const decodedData = decodeData(e);\n      const dataID = parseInt(e.topics[2], 16);\n      const addressFrom = this.state.buyer_add;\n      const transferValue = decodedData[2]._hex;\n      const recipient = \"0x\" + e.topics[1].substr(26, 64); // const recipient = \"0xa1b9207bff69cc6149c13b820576403631f0b39d\";\n      // console.log('1 ' + dataID);\n      // console.log('2 ' + addressFrom);\n      // console.log('3 ' + transferValue);\n      // console.log('4 ' + recipient);\n\n      var privateKey = new Buffer.from(\"51d6a4bb8508c91a3d78de5d4a137c83bb6f602998937e2c034f1c7eb656609c\", //\"e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec\",\n      \"hex\");\n\n      try {\n        var nonceNumber = web3.utils.toHex(await web3.eth.getTransactionCount(addressFrom, \"pending\"));\n        console.log(nonceNumber);\n        const customCommon = Common.forCustomChain(\"mainnet\", {\n          name: \"localchain\",\n          networkId: 777,\n          chainId: 777\n        }, \"petersburg\");\n        var myData = contract2.methods.EmitEvent(recipient, transferValue, dataID, timestamp.toString()).encodeABI();\n        var rawTx = {\n          nonce: nonceNumber,\n          from: addressFrom,\n          gasLimit: web3.utils.toHex(100000),\n          gasPrice: web3.utils.toHex(10e9),\n          to: contract2._address,\n          data: myData,\n          value: transferValue\n        };\n        var tx = new Tx.Transaction(rawTx, {\n          common: customCommon\n        });\n        tx.sign(privateKey);\n        var serializedTx = tx.serialize();\n        var receipt = await web3.eth.sendSignedTransaction(\"0x\" + serializedTx.toString(\"hex\")).on(\"receipt\", console.log);\n        this.setState({\n          successMessage: \"Transaction successfull, transaction hash: \" + receipt.transactionHash\n        });\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const address = props.query.address;\n    const results = await getEvents();\n    const decodedEvents = results.events;\n\n    const aux = item => item.transactionHash === address;\n\n    const index = decodedEvents.findIndex(aux);\n    const event = decodedEvents[index];\n    return {\n      event\n    };\n  }\n\n  render() {\n    const e = this.props.event;\n    const decodedData = decodeData(e);\n    const txHash = e.transactionHash;\n    const blockHash = e.blockHash;\n    const blockNumber = e.blockNumber;\n    const dataOwner = \"0x\" + e.topics[1].substr(26, 64).toUpperCase();\n    const dataType = getTags(e);\n    const dataID = parseInt(e.topics[2], 16);\n    const cost = decodedData[2]._hex;\n    const timestamp = new Date(parseInt(decodedData[1])).toLocaleString();\n    const colour = \"yellow\";\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          color: colour,\n          children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n            children: /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Property\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Transaction Hash:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: txHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Block Hash:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: blockHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Block Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: blockNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Data Owner:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: dataOwner\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Data Tags:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: dataType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Data ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: dataID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Data Cost:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: [parseInt(cost, 16), \" Tokens\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, colour, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          error: !!this.state.errorMessage,\n          success: !!this.state.successMessage,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 8,\n                children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                  flex: \"true\",\n                  label: {\n                    children: \"Your Address:\",\n                    style: {\n                      fontSize: '16px'\n                    }\n                  },\n                  placeholder: \"0xabcd1234\",\n                  id: \"buyer_add\",\n                  value: this.state.buyer_add,\n                  onChange: event => this.setState({\n                    buyer_add: event.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                verticalAlign: \"middle\",\n                width: 5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  loading: this.state.loading,\n                  primary: true,\n                  children: [\"Buy for \", parseInt(cost, 16), \" ETH\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              error: true,\n              header: \"Oops!\",\n              content: this.state.errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              success: true,\n              header: \"Completed!\",\n              content: this.state.successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Show;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/data/show.js"],"names":["React","Component","Form","Button","Message","Table","Grid","Modal","Layout","getEvents","getTags","decodeData","web3","contract2","Common","Tx","require","Show","buyer_add","errorMessage","successMessage","loading","event","preventDefault","setState","timestamp","Date","e","props","decodedData","dataID","parseInt","topics","addressFrom","state","transferValue","_hex","recipient","substr","privateKey","Buffer","from","nonceNumber","utils","toHex","eth","getTransactionCount","console","log","customCommon","forCustomChain","name","networkId","chainId","myData","methods","EmitEvent","toString","encodeABI","rawTx","nonce","gasLimit","gasPrice","to","_address","data","value","tx","Transaction","common","sign","serializedTx","serialize","receipt","sendSignedTransaction","on","transactionHash","error","message","getInitialProps","address","query","results","decodedEvents","events","aux","item","index","findIndex","render","txHash","blockHash","blockNumber","dataOwner","toUpperCase","dataType","cost","toLocaleString","colour","onSubmit","children","style","fontSize","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Message, Table, Grid, Modal } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport getEvents from \"../../components/getEvents\";\nimport getTags from \"../../components/getTags\";\nimport decodeData from \"../../components/decodeData\";\nimport web3 from \"../../Ethereum/web3\";\nimport contract2 from \"../../Ethereum/contract2\";\nimport Common from \"ethereumjs-common\";\nvar Tx = require(\"ethereumjs-tx\");\n\nclass Show extends Component {\n\n  state = {\n    buyer_add: \"\",\n    errorMessage: \"\",\n    successMessage: \"\",\n    loading: false,\n  };\n\n  static async getInitialProps(props) {\n    const address = props.query.address;\n    const results = await getEvents();\n    const decodedEvents = results.events;\n    const aux = (item) => item.transactionHash === address;\n    const index = decodedEvents.findIndex(aux);\n    const event = decodedEvents[index];\n    return { event };\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ loading: true, errorMessage: \"\", successMessage: \"\" });\n\n    const timestamp = +new Date();\n    // console.log(timestamp);\n\n    const e = this.props.event;\n    const decodedData = decodeData(e);\n\n    const dataID = parseInt(e.topics[2], 16);\n    const addressFrom = this.state.buyer_add;\n    const transferValue = decodedData[2]._hex;\n    const recipient = \"0x\" + e.topics[1].substr(26, 64);\n\n    // const recipient = \"0xa1b9207bff69cc6149c13b820576403631f0b39d\";\n    // console.log('1 ' + dataID);\n    // console.log('2 ' + addressFrom);\n    // console.log('3 ' + transferValue);\n    // console.log('4 ' + recipient);\n\n    var privateKey = new Buffer.from(\n      \"51d6a4bb8508c91a3d78de5d4a137c83bb6f602998937e2c034f1c7eb656609c\",\n      //\"e8d1574304a68b5f794d33a842389350d93e49d46b6871571f9b64eaa53131ec\",\n      \"hex\"\n    );\n\n    try {\n    var nonceNumber = web3.utils.toHex(\n      await web3.eth.getTransactionCount(addressFrom, \"pending\")\n    );\n    console.log(nonceNumber);\n    const customCommon = Common.forCustomChain(\n      \"mainnet\",\n      {\n        name: \"localchain\",\n        networkId: 777,\n        chainId: 777,\n      },\n      \"petersburg\"\n    );\n\n    var myData = contract2.methods\n      .EmitEvent(\n        recipient,\n        transferValue,\n        dataID,\n        timestamp.toString(),\n      )\n      .encodeABI();\n\n    var rawTx = {\n      nonce: nonceNumber,\n      from: addressFrom,\n      gasLimit: web3.utils.toHex(100000),\n      gasPrice: web3.utils.toHex(10e9),\n      to: contract2._address,\n      data: myData,\n      value: transferValue\n    };\n\n    var tx = new Tx.Transaction(rawTx, { common: customCommon });\n    tx.sign(privateKey);\n    var serializedTx = tx.serialize();\n\n    var receipt = await web3.eth\n      .sendSignedTransaction(\"0x\" + serializedTx.toString(\"hex\"))\n      .on(\"receipt\", console.log);\n\n      this.setState({successMessage: \"Transaction successfull, transaction hash: \" + receipt.transactionHash});\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n    this.setState({loading: false})\n  };\n\n  render() {\n    const e = this.props.event;\n    const decodedData = decodeData(e);\n    const txHash = e.transactionHash;\n    const blockHash = e.blockHash;\n    const blockNumber = e.blockNumber;\n    const dataOwner = \"0x\" + e.topics[1].substr(26, 64).toUpperCase();\n    const dataType = getTags(e);\n    const dataID = parseInt(e.topics[2], 16);\n    const cost = decodedData[2]._hex;\n    const timestamp = new Date(parseInt(decodedData[1])).toLocaleString();\n\n    const colour = \"yellow\";\n\n    return (\n      <Layout>\n        <div>\n          <Table color={colour} key={colour}>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Property</Table.HeaderCell>\n                <Table.HeaderCell>Value</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>Transaction Hash:</Table.Cell>\n                <Table.Cell>{txHash}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Block Hash:</Table.Cell>\n                <Table.Cell>{blockHash}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Block Number:</Table.Cell>\n                <Table.Cell>{blockNumber}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Data Owner:</Table.Cell>\n                <Table.Cell>{dataOwner}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Data Tags:</Table.Cell>\n                <Table.Cell>{dataType}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Data ID:</Table.Cell>\n                <Table.Cell>{dataID}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Data Cost:</Table.Cell>\n                <Table.Cell>{parseInt(cost, 16)} Tokens</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Timestamp:</Table.Cell>\n                <Table.Cell>{timestamp}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage} success={!!this.state.successMessage}>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                    <Form.Input\n                      flex=\"true\"\n                      label={{ children: \"Your Address:\", style:{ fontSize: '16px' } }}\n                      placeholder=\"0xabcd1234\"\n                      id=\"buyer_add\"\n                      value={this.state.buyer_add}\n                      onChange={(event) => this.setState({ buyer_add: event.target.value })}\n                    />\n              </Grid.Column>\n              <Grid.Column verticalAlign='middle' width={5}>\n                <Button loading={this.state.loading} primary>Buy for {parseInt(cost, 16)} ETH</Button>\n              </Grid.Column>\n            </Grid.Row>\n            <h4></h4>\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            <Message success header=\"Completed!\" content={this.state.successMessage} />\n          </Grid>\n          </Form>\n          </div>\n      </Layout>\n    );\n  }\n}\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}