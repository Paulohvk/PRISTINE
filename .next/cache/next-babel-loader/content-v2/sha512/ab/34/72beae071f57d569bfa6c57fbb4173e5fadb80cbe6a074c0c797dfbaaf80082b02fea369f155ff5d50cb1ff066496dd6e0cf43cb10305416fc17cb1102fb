{"ast":null,"code":"import _regeneratorRuntime from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Card, Grid, Segment } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nimport getEvents from \"../components/Events\";\n\nvar TestIndex = /*#__PURE__*/function (_Component) {\n  _inherits(TestIndex, _Component);\n\n  var _super = _createSuper(TestIndex);\n\n  function TestIndex() {\n    _classCallCheck(this, TestIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TestIndex, [{\n    key: \"renderMarketPlace\",\n    value: function renderMarketPlace() {\n      var _this = this;\n\n      var items = this.props.decodedEvents.map(function (address) {\n        var dataType = \"\";\n\n        switch (address.topics[3].slice(-1)) {\n          case \"1\":\n            dataType = \"Temperature\";\n            break;\n\n          case \"2\":\n            dataType = \"Humidity\";\n            break;\n\n          case \"3\":\n            dataType = \"Temp and Humidity\";\n            break;\n\n          case \"4\":\n            dataType = \"Pressure\";\n            break;\n\n          case \"5\":\n            dataType = \"Test Data\";\n            break;\n\n          default:\n            dataType = \"Any\";\n            break;\n        }\n\n        var decoder = new ethers.utils.AbiCoder();\n        var decodedData = decoder.decode([\"string\", \"string\", \"uint\"], address.data);\n        var timestamp = new Date(parseInt(decodedData[1])).toLocaleString();\n        var cost = decodedData[2]._hex;\n        return {\n          header: address.transactionHash,\n          meta: \"Block: \" + address.blockNumber,\n          description: /*#__PURE__*/_jsxDEV(Grid, {\n            verticalAlign: \"middle\",\n            children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                floated: \"left\",\n                width: 12,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"From: 0x\", address.topics[1].substr(26, 64).toUpperCase()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Tags: \", dataType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"ID: \", parseInt(address.topics[2], 16)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Cost: \", parseInt(cost, 16), \" Ether\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Timestamp: \", timestamp]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                floated: \"right\",\n                width: 3,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  route: \"/data/\".concat(address.transactionHash),\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      content: \"Buy this data!\",\n                      icon: \"money\",\n                      primary: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 21\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 19\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, _this),\n          fluid: true\n        };\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          verticalAlign: \"middle\",\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              floated: \"left\",\n              width: 12,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Data in the Marketplace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"There are \", this.props.blockNumber, \" blocks in the blockchain.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Smart contract address: \", this.props.decodedEvents[0].address, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Event signature: \", this.props.decodedEvents[0].topics[0], \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"There are a total of \", this.props.decodedEvents.length, \" events.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              floated: \"right\",\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                route: \"/data/submit\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    content: \"Submit Data!\",\n                    icon: \"add\",\n                    primary: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.renderMarketPlace()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$getEvents, _yield$getEvents2, blockNumber, decodedEvents;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getEvents(blockNumber, decodedEvents);\n\n              case 2:\n                _yield$getEvents = _context.sent;\n                _yield$getEvents2 = _slicedToArray(_yield$getEvents, 2);\n                blockNumber = _yield$getEvents2[0];\n                decodedEvents = _yield$getEvents2[1];\n                console.log(decodedEvents);\n                return _context.abrupt(\"return\", {\n                  blockNumber: blockNumber,\n                  decodedEvents: decodedEvents\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return TestIndex;\n}(Component);\n\nexport default TestIndex;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js"],"names":["React","Component","Button","Card","Grid","Segment","Layout","Link","testContract","contract","web3","ethers","getEvents","TestIndex","items","props","decodedEvents","map","address","dataType","topics","slice","decoder","utils","AbiCoder","decodedData","decode","data","timestamp","Date","parseInt","toLocaleString","cost","_hex","header","transactionHash","meta","blockNumber","description","substr","toUpperCase","fluid","length","renderMarketPlace","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card, Grid, Segment } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nimport getEvents from \"../components/Events\";\n\nclass TestIndex extends Component {\n  static async getInitialProps() {\n    // const iface = new ethers.utils.Interface(testContract.interface);\n\n    // let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n\n    // const blockNumber = await provider.getBlockNumber();\n\n    // let abi = [\n    //   \"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\",\n    // ];\n\n    // let ens = new ethers.Contract(contract._address, abi, provider);\n\n    // var filter = ens.filters.DataTransfer();\n    // filter.fromBlock = 0;\n    // filter.toBlock = \"latest\";\n\n    // const decodedEvents = (await provider.getLogs(filter)).reverse();\n    //console.log(decodedEvents);\n\n    const [blockNumber, decodedEvents] = await getEvents(blockNumber,decodedEvents);\n    console.log(decodedEvents);\n\n    return { blockNumber, decodedEvents };\n  }\n\n  renderMarketPlace() {\n    const items = this.props.decodedEvents.map((address) => {\n      var dataType = \"\";\n      switch (address.topics[3].slice(-1)) {\n        case \"1\":\n          dataType = \"Temperature\";\n          break;\n        case \"2\":\n          dataType = \"Humidity\";\n          break;\n        case \"3\":\n          dataType = \"Temp and Humidity\";\n          break;\n        case \"4\":\n          dataType = \"Pressure\";\n          break;\n        case \"5\":\n          dataType = \"Test Data\";\n          break;\n        default:\n          dataType = \"Any\";\n          break;\n      }\n      const decoder = new ethers.utils.AbiCoder();\n      const decodedData = decoder.decode(\n        [\"string\", \"string\", \"uint\"],\n        address.data\n      );\n      const timestamp = new Date(parseInt(decodedData[1])).toLocaleString();\n      const cost = decodedData[2]._hex;\n\n      return {\n        header: address.transactionHash,\n        meta: \"Block: \" + address.blockNumber,\n        description: (\n          <Grid verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column floated=\"left\" width={12}>\n                <div>\n                  From: 0x{address.topics[1].substr(26, 64).toUpperCase()}\n                </div>\n                <div>Tags: {dataType}</div>\n                <div>ID: {parseInt(address.topics[2], 16)}</div>\n                <div>Cost: {parseInt(cost, 16)} Ether</div>\n                <div>Timestamp: {timestamp}</div>\n              </Grid.Column>\n              <Grid.Column floated=\"right\" width={3}>\n                <Link route={`/data/${address.transactionHash}`}>\n                  <a>\n                    <Button content=\"Buy this data!\" icon=\"money\" primary />\n                  </a>\n                </Link>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        ),\n        fluid: true,\n      };\n    });\n\n    return (\n      <div>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Row>\n            <Grid.Column floated=\"left\" width={12}>\n              <h3>Data in the Marketplace</h3>\n              <h3>\n                There are {this.props.blockNumber} blocks in the blockchain.\n              </h3>\n              <h3>Smart contract address: {this.props.decodedEvents[0].address}.</h3>\n              <h3>Event signature: {this.props.decodedEvents[0].topics[0]}.</h3>\n              <h3>\n                There are a total of {this.props.decodedEvents.length} events.\n              </h3>\n            </Grid.Column>\n            <Grid.Column floated=\"right\" width={3}>\n              <Link route=\"/data/submit\">\n                <a>\n                  <Button\n                    content=\"Submit Data!\"\n                    icon=\"add\"\n                    primary\n                  />\n                </a>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Card.Group items={items} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          {this.renderMarketPlace()}\n          {/* Render Data */}\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default TestIndex;\n"]},"metadata":{},"sourceType":"module"}