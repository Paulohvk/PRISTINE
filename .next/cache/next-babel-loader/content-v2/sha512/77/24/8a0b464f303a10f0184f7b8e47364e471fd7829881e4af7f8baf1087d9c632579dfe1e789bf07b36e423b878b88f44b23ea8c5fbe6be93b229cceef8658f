{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nclass TestIndex extends Component {\n  static async getInitialProps() {\n    // const iface = new ethers.utils.Interface(testContract.interface);\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n    provider.resetEventsBlock(0);\n    var blockNumber = await provider.getBlockNumber();\n    console.log(\"There are \" + blockNumber + \" blocks in the blockchain.\");\n    let abi = [\"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\"];\n    let ens = new ethers.Contract(contract._address, abi, provider);\n    var filter = ens.filters.DataTransfer();\n    const decodedEvents = provider.getLogs(filter).then(logs => {\n      console.log(logs);\n    }); // const events = iface.events;\n    // console.log(events);\n    // const transfer = events['DataTransfer(string,string,uint256,address,uint256,uint256)'];\n    // // console.log(transfer);\n    // const eventTopic = transfer.topic;\n    // console.log(eventTopic);\n    // const logs = await provider.getLogs({\n    //   address: contract._address,\n    // });\n    // console.log(logs);\n    // const decodedEvents = logs.map((log) => {\n    //   iface.decodeEventLog(\"DataTransfer\", log.data);\n    // });\n\n    return {\n      decodedEvents\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data in the Marketplace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          route: \"/data/submit\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              floated: \"right\",\n              content: \"Submit Data!\",\n              icon: \"add\",\n              primary: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestIndex;","map":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/pages/index.js"],"names":["React","Component","Button","Layout","Link","testContract","contract","web3","ethers","TestIndex","getInitialProps","provider","providers","Web3Provider","currentProvider","resetEventsBlock","blockNumber","getBlockNumber","console","log","abi","ens","Contract","_address","filter","filters","DataTransfer","decodedEvents","getLogs","then","logs","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAChC,eAAaS,eAAb,GAA+B;AAC7B;AAEA,QAAIC,QAAQ,GAAG,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCN,IAAI,CAACO,eAAvC,CAAf;AACAH,IAAAA,QAAQ,CAACI,gBAAT,CAA0B,CAA1B;AAEA,QAAIC,WAAW,GAAG,MAAML,QAAQ,CAACM,cAAT,EAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeH,WAAf,GAA6B,4BAAzC;AAEA,QAAII,GAAG,GAAG,CACR,0IADQ,CAAV;AAIA,QAAIC,GAAG,GAAG,IAAIb,MAAM,CAACc,QAAX,CAAoBhB,QAAQ,CAACiB,QAA7B,EAAuCH,GAAvC,EAA4CT,QAA5C,CAAV;AAEA,QAAIa,MAAM,GAAGH,GAAG,CAACI,OAAJ,CAAYC,YAAZ,EAAb;AAEA,UAAMC,aAAa,GAAGhB,QAAQ,CAACiB,OAAT,CAAiBJ,MAAjB,EAAyBK,IAAzB,CAA+BC,IAAD,IAAU;AAC5DZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACH,KAFuB,CAAtB,CAjB6B,CAqB7B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,WAAO;AAAEH,MAAAA;AAAF,KAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA,iCACE;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,OADV;AAEE,cAAA,OAAO,EAAC,cAFV;AAGE,cAAA,IAAI,EAAC,KAHP;AAIE,cAAA,OAAO;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA7D+B;;AA+DlC,eAAetB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport testContract from \"../Ethereum/build/EventTest.json\";\nimport contract from \"../Ethereum/contract\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\n\nclass TestIndex extends Component {\n  static async getInitialProps() {\n    // const iface = new ethers.utils.Interface(testContract.interface);\n\n    let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n    provider.resetEventsBlock(0);\n\n    var blockNumber = await provider.getBlockNumber();\n    console.log(\"There are \" + blockNumber + \" blocks in the blockchain.\");\n\n    let abi = [\n      \"event DataTransfer(string data_type, string timestamp, uint minPayment, address indexed source, uint indexed serialID, uint indexed tag)\",\n    ];\n\n    let ens = new ethers.Contract(contract._address, abi, provider);\n\n    var filter = ens.filters.DataTransfer();\n\n    const decodedEvents = provider.getLogs(filter).then((logs) => {\n      console.log(logs);\n  });\n\n    // const events = iface.events;\n    // console.log(events);\n    // const transfer = events['DataTransfer(string,string,uint256,address,uint256,uint256)'];\n    // // console.log(transfer);\n    // const eventTopic = transfer.topic;\n    // console.log(eventTopic);\n\n    // const logs = await provider.getLogs({\n    //   address: contract._address,\n    // });\n\n    // console.log(logs);\n\n    // const decodedEvents = logs.map((log) => {\n    //   iface.decodeEventLog(\"DataTransfer\", log.data);\n    // });\n\n    return { decodedEvents };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h3>Data in the Marketplace</h3>\n          <Link route=\"/data/submit\">\n            <a>\n              <Button\n                floated=\"right\"\n                content=\"Submit Data!\"\n                icon=\"add\"\n                primary\n              />\n            </a>\n          </Link>\n          {/* Render Data */}\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default TestIndex;\n"]},"metadata":{},"sourceType":"module"}