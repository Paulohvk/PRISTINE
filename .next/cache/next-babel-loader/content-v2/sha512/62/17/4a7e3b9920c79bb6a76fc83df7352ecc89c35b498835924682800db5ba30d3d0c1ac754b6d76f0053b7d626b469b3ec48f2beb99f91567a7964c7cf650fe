{"ast":null,"code":"import contract from \"../Ethereum/contract2\";\nimport web3 from \"../Ethereum/web3\";\nimport { ethers } from \"ethers\";\nexport default async function getBuyEvents() {\n  let provider = new ethers.providers.Web3Provider(web3.currentProvider);\n  let abi = [\"event BuyData(address recipient, uint transferValue, address indexed addressFrom, uint indexed dataID, string indexed timestamp)\"];\n  let ens = new ethers.Contract(contract._address, abi, provider);\n  var filter = ens.filters.BuyData();\n  filter.fromBlock = 0;\n  filter.toBlock = \"latest\";\n  const blockNumber = await provider.getBlockNumber();\n  const events = (await provider.getLogs(filter)).reverse(); // console.log(events);\n\n  return {\n    blockNumber: blockNumber,\n    events: events\n  };\n}\n;","map":null,"metadata":{},"sourceType":"module"}