{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[7],{\"+6Dn\":function(e,t,r){\"use strict\";var o=r(\"wx14\"),n=r(\"iuhU\"),a=(r(\"17x9\"),r(\"q1tI\")),i=r.n(a),s=r(\"ZeOK\"),l=r(\"ICNK\"),c=r(\"Y53p\"),u=r(\"MZgk\");function d(e){var t=e.children,r=e.className,a=e.computer,u=e.color,h=e.floated,g=e.largeScreen,p=e.mobile,f=e.only,m=e.stretched,b=e.tablet,v=e.textAlign,T=e.verticalAlign,A=e.widescreen,y=e.width,S=Object(n.a)(u,Object(s.a)(m,\"stretched\"),Object(s.c)(f,\"only\"),Object(s.d)(v),Object(s.e)(h,\"floated\"),Object(s.f)(T),Object(s.g)(a,\"wide computer\"),Object(s.g)(g,\"wide large screen\"),Object(s.g)(p,\"wide mobile\"),Object(s.g)(b,\"wide tablet\"),Object(s.g)(A,\"wide widescreen\"),Object(s.g)(y,\"wide\"),\"column\",r),E=Object(l.a)(d,e),O=Object(c.a)(d,e);return i.a.createElement(O,Object(o.a)({},E,{className:S}),t)}d.handledProps=[\"as\",\"children\",\"className\",\"color\",\"computer\",\"floated\",\"largeScreen\",\"mobile\",\"only\",\"stretched\",\"tablet\",\"textAlign\",\"verticalAlign\",\"widescreen\",\"width\"],d.propTypes={},d.create=Object(u.e)(d,(function(e){return{children:e}}));var h=d;function g(e){var t=e.centered,r=e.children,a=e.className,u=e.color,d=e.columns,h=e.divided,p=e.only,f=e.reversed,m=e.stretched,b=e.textAlign,v=e.verticalAlign,T=Object(n.a)(u,Object(s.a)(t,\"centered\"),Object(s.a)(h,\"divided\"),Object(s.a)(m,\"stretched\"),Object(s.c)(p,\"only\"),Object(s.c)(f,\"reversed\"),Object(s.d)(b),Object(s.f)(v),Object(s.g)(d,\"column\",!0),\"row\",a),A=Object(l.a)(g,e),y=Object(c.a)(g,e);return i.a.createElement(y,Object(o.a)({},A,{className:T}),r)}g.handledProps=[\"as\",\"centered\",\"children\",\"className\",\"color\",\"columns\",\"divided\",\"only\",\"reversed\",\"stretched\",\"textAlign\",\"verticalAlign\"],g.propTypes={};var p=g;function f(e){var t=e.celled,r=e.centered,a=e.children,u=e.className,d=e.columns,h=e.container,g=e.divided,p=e.doubling,m=e.inverted,b=e.padded,v=e.relaxed,T=e.reversed,A=e.stackable,y=e.stretched,S=e.textAlign,E=e.verticalAlign,O=Object(n.a)(\"ui\",Object(s.a)(r,\"centered\"),Object(s.a)(h,\"container\"),Object(s.a)(p,\"doubling\"),Object(s.a)(m,\"inverted\"),Object(s.a)(A,\"stackable\"),Object(s.a)(y,\"stretched\"),Object(s.b)(t,\"celled\"),Object(s.b)(g,\"divided\"),Object(s.b)(b,\"padded\"),Object(s.b)(v,\"relaxed\"),Object(s.c)(T,\"reversed\"),Object(s.d)(S),Object(s.f)(E),Object(s.g)(d,\"column\",!0),\"grid\",u),C=Object(l.a)(f,e),k=Object(c.a)(f,e);return i.a.createElement(k,Object(o.a)({},C,{className:O}),a)}f.handledProps=[\"as\",\"celled\",\"centered\",\"children\",\"className\",\"columns\",\"container\",\"divided\",\"doubling\",\"inverted\",\"padded\",\"relaxed\",\"reversed\",\"stackable\",\"stretched\",\"textAlign\",\"verticalAlign\"],f.Column=h,f.Row=p,f.propTypes={};t.a=f},\"/wnW\":function(e,t,r){\"use strict\";r.d(t,\"a\",(function(){return o}));const o=\"random/5.1.0\"},\"1g5y\":function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"UPaY\"),a=o.rotl32,i=o.sum32,s=o.sum32_3,l=o.sum32_4,c=n.BlockHash;function u(){if(!(this instanceof u))return new u;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian=\"little\"}function d(e,t,r,o){return e<=15?t^r^o:e<=31?t&r|~t&o:e<=47?(t|~r)^o:e<=63?t&o|r&~o:t^(r|~o)}function h(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function g(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}o.inherits(u,c),t.ripemd160=u,u.blockSize=512,u.outSize=160,u.hmacStrength=192,u.padLength=64,u.prototype._update=function(e,t){for(var r=this.h[0],o=this.h[1],n=this.h[2],c=this.h[3],u=this.h[4],v=r,T=o,A=n,y=c,S=u,E=0;E<80;E++){var O=i(a(l(r,d(E,o,n,c),e[p[E]+t],h(E)),m[E]),u);r=u,u=c,c=a(n,10),n=o,o=O,O=i(a(l(v,d(79-E,T,A,y),e[f[E]+t],g(E)),b[E]),S),v=S,S=y,y=a(A,10),A=T,T=O}O=s(this.h[1],n,y),this.h[1]=s(this.h[2],c,S),this.h[2]=s(this.h[3],u,v),this.h[3]=s(this.h[4],r,T),this.h[4]=s(this.h[0],o,A),this.h[0]=O},u.prototype._digest=function(e){return\"hex\"===e?o.toHex32(this.h,\"little\"):o.split32(this.h,\"little\")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],f=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],m=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],b=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},\"2t7c\":function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"UPaY\"),a=r(\"tH0i\"),i=o.rotl32,s=o.sum32,l=o.sum32_5,c=a.ft_1,u=n.BlockHash,d=[1518500249,1859775393,2400959708,3395469782];function h(){if(!(this instanceof h))return new h;u.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}o.inherits(h,u),e.exports=h,h.blockSize=512,h.outSize=160,h.hmacStrength=80,h.padLength=64,h.prototype._update=function(e,t){for(var r=this.W,o=0;o<16;o++)r[o]=e[t+o];for(;o<r.length;o++)r[o]=i(r[o-3]^r[o-8]^r[o-14]^r[o-16],1);var n=this.h[0],a=this.h[1],u=this.h[2],h=this.h[3],g=this.h[4];for(o=0;o<r.length;o++){var p=~~(o/20),f=l(i(n,5),c(p,a,u,h),g,r[o],d[p]);g=h,h=u,u=i(a,30),a=n,n=f}this.h[0]=s(this.h[0],n),this.h[1]=s(this.h[1],a),this.h[2]=s(this.h[2],u),this.h[3]=s(this.h[3],h),this.h[4]=s(this.h[4],g)},h.prototype._digest=function(e){return\"hex\"===e?o.toHex32(this.h,\"big\"):o.split32(this.h,\"big\")}},\"7YYO\":function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"2j6C\");function a(e,t,r){if(!(this instanceof a))return new a(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(o.toArray(t,r))}e.exports=a,a.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),n(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},a.prototype.update=function(e,t){return this.inner.update(e,t),this},a.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}},\"ANg/\":function(e,t,r){\"use strict\";var o=r(\"2j6C\"),n=r(\"P7XM\");function a(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function i(e){return 1===e.length?\"0\"+e:e}function s(e){return 7===e.length?\"0\"+e:6===e.length?\"00\"+e:5===e.length?\"000\"+e:4===e.length?\"0000\"+e:3===e.length?\"00000\"+e:2===e.length?\"000000\"+e:1===e.length?\"0000000\"+e:e}t.inherits=n,t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(\"string\"===typeof e)if(t){if(\"hex\"===t)for((e=e.replace(/[^a-z0-9]+/gi,\"\")).length%2!==0&&(e=\"0\"+e),o=0;o<e.length;o+=2)r.push(parseInt(e[o]+e[o+1],16))}else for(var o=0;o<e.length;o++){var n=e.charCodeAt(o),a=n>>8,i=255&n;a?r.push(a,i):r.push(i)}else for(o=0;o<e.length;o++)r[o]=0|e[o];return r},t.toHex=function(e){for(var t=\"\",r=0;r<e.length;r++)t+=i(e[r].toString(16));return t},t.htonl=a,t.toHex32=function(e,t){for(var r=\"\",o=0;o<e.length;o++){var n=e[o];\"little\"===t&&(n=a(n)),r+=s(n.toString(16))}return r},t.zero2=i,t.zero8=s,t.join32=function(e,t,r,n){var a=r-t;o(a%4===0);for(var i=new Array(a/4),s=0,l=t;s<i.length;s++,l+=4){var c;c=\"big\"===n?e[l]<<24|e[l+1]<<16|e[l+2]<<8|e[l+3]:e[l+3]<<24|e[l+2]<<16|e[l+1]<<8|e[l],i[s]=c>>>0}return i},t.split32=function(e,t){for(var r=new Array(4*e.length),o=0,n=0;o<e.length;o++,n+=4){var a=e[o];\"big\"===t?(r[n]=a>>>24,r[n+1]=a>>>16&255,r[n+2]=a>>>8&255,r[n+3]=255&a):(r[n+3]=a>>>24,r[n+2]=a>>>16&255,r[n+1]=a>>>8&255,r[n]=255&a)}return r},t.rotr32=function(e,t){return e>>>t|e<<32-t},t.rotl32=function(e,t){return e<<t|e>>>32-t},t.sum32=function(e,t){return e+t>>>0},t.sum32_3=function(e,t,r){return e+t+r>>>0},t.sum32_4=function(e,t,r,o){return e+t+r+o>>>0},t.sum32_5=function(e,t,r,o,n){return e+t+r+o+n>>>0},t.sum64=function(e,t,r,o){var n=e[t],a=o+e[t+1]>>>0,i=(a<o?1:0)+r+n;e[t]=i>>>0,e[t+1]=a},t.sum64_hi=function(e,t,r,o){return(t+o>>>0<t?1:0)+e+r>>>0},t.sum64_lo=function(e,t,r,o){return t+o>>>0},t.sum64_4_hi=function(e,t,r,o,n,a,i,s){var l=0,c=t;return l+=(c=c+o>>>0)<t?1:0,l+=(c=c+a>>>0)<a?1:0,e+r+n+i+(l+=(c=c+s>>>0)<s?1:0)>>>0},t.sum64_4_lo=function(e,t,r,o,n,a,i,s){return t+o+a+s>>>0},t.sum64_5_hi=function(e,t,r,o,n,a,i,s,l,c){var u=0,d=t;return u+=(d=d+o>>>0)<t?1:0,u+=(d=d+a>>>0)<a?1:0,u+=(d=d+s>>>0)<s?1:0,e+r+n+i+l+(u+=(d=d+c>>>0)<c?1:0)>>>0},t.sum64_5_lo=function(e,t,r,o,n,a,i,s,l,c){return t+o+a+s+c>>>0},t.rotr64_hi=function(e,t,r){return(t<<32-r|e>>>r)>>>0},t.rotr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0},t.shr64_hi=function(e,t,r){return e>>>r},t.shr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0}},SHcd:function(e,t,r){\"use strict\";r.d(t,\"a\",(function(){return o}));const o=\"0x0000000000000000000000000000000000000000000000000000000000000000\"},To1g:function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"lBBE\");function a(){if(!(this instanceof a))return new a;n.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}o.inherits(a,n),e.exports=a,a.blockSize=1024,a.outSize=384,a.hmacStrength=192,a.padLength=128,a.prototype._digest=function(e){return\"hex\"===e?o.toHex32(this.h.slice(0,12),\"big\"):o.split32(this.h.slice(0,12),\"big\")}},UPaY:function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"2j6C\");function a(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian=\"big\",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}t.BlockHash=a,a.prototype.update=function(e,t){if(e=o.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var r=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=o.join32(e,0,e.length-r,this.endian);for(var n=0;n<e.length;n+=this._delta32)this._update(e,n,n+this._delta32)}return this},a.prototype.digest=function(e){return this.update(this._pad()),n(null===this.pending),this._digest(e)},a.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,o=new Array(r+this.padLength);o[0]=128;for(var n=1;n<r;n++)o[n]=0;if(e<<=3,\"big\"===this.endian){for(var a=8;a<this.padLength;a++)o[n++]=0;o[n++]=0,o[n++]=0,o[n++]=0,o[n++]=0,o[n++]=e>>>24&255,o[n++]=e>>>16&255,o[n++]=e>>>8&255,o[n++]=255&e}else for(o[n++]=255&e,o[n++]=e>>>8&255,o[n++]=e>>>16&255,o[n++]=e>>>24&255,o[n++]=0,o[n++]=0,o[n++]=0,o[n++]=0,a=8;a<this.padLength;a++)o[n++]=0;return o}},Z1Ib:function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"UPaY\"),a=r(\"tH0i\"),i=r(\"2j6C\"),s=o.sum32,l=o.sum32_4,c=o.sum32_5,u=a.ch32,d=a.maj32,h=a.s0_256,g=a.s1_256,p=a.g0_256,f=a.g1_256,m=n.BlockHash,b=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function v(){if(!(this instanceof v))return new v;m.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=b,this.W=new Array(64)}o.inherits(v,m),e.exports=v,v.blockSize=512,v.outSize=256,v.hmacStrength=192,v.padLength=64,v.prototype._update=function(e,t){for(var r=this.W,o=0;o<16;o++)r[o]=e[t+o];for(;o<r.length;o++)r[o]=l(f(r[o-2]),r[o-7],p(r[o-15]),r[o-16]);var n=this.h[0],a=this.h[1],m=this.h[2],b=this.h[3],v=this.h[4],T=this.h[5],A=this.h[6],y=this.h[7];for(i(this.k.length===r.length),o=0;o<r.length;o++){var S=c(y,g(v),u(v,T,A),this.k[o],r[o]),E=s(h(n),d(n,a,m));y=A,A=T,T=v,v=s(b,S),b=m,m=a,a=n,n=s(S,E)}this.h[0]=s(this.h[0],n),this.h[1]=s(this.h[1],a),this.h[2]=s(this.h[2],m),this.h[3]=s(this.h[3],b),this.h[4]=s(this.h[4],v),this.h[5]=s(this.h[5],T),this.h[6]=s(this.h[6],A),this.h[7]=s(this.h[7],y)},v.prototype._digest=function(e){return\"hex\"===e?o.toHex32(this.h,\"big\"):o.split32(this.h,\"big\")}},bkUu:function(e,t,r){\"use strict\";(function(e){r.d(t,\"a\",(function(){return c}));var o=r(\"VJ7P\"),n=r(\"/7J2\"),a=r(\"/wnW\");const i=new n.b(a.a);let s=null;try{if(s=window,null==s)throw new Error(\"try next\")}catch(u){try{if(s=e,null==s)throw new Error(\"try next\")}catch(u){s={}}}let l=s.crypto||s.msCrypto;function c(e){(e<=0||e>1024||e%1)&&i.throwArgumentError(\"invalid length\",\"length\",e);const t=new Uint8Array(e);return l.getRandomValues(t),Object(o.a)(t)}l&&l.getRandomValues||(i.warn(\"WARNING: Missing strong random number source\"),l={getRandomValues:function(e){return i.throwError(\"no secure random source avaialble\",n.b.errors.UNSUPPORTED_OPERATION,{operation:\"crypto.getRandomValues\"})}})}).call(this,r(\"ntbh\"))},cke4:function(e,t,r){\"use strict\";!function(t){function r(e){return parseInt(e)===e}function o(e){if(!r(e.length))return!1;for(var t=0;t<e.length;t++)if(!r(e[t])||e[t]<0||e[t]>255)return!1;return!0}function n(e,t){if(e.buffer&&ArrayBuffer.isView(e)&&\"Uint8Array\"===e.name)return t&&(e=e.slice?e.slice():Array.prototype.slice.call(e)),e;if(Array.isArray(e)){if(!o(e))throw new Error(\"Array contains invalid value: \"+e);return new Uint8Array(e)}if(r(e.length)&&o(e))return new Uint8Array(e);throw new Error(\"unsupported array-like object\")}function a(e){return new Uint8Array(e)}function i(e,t,r,o,n){null==o&&null==n||(e=e.slice?e.slice(o,n):Array.prototype.slice.call(e,o,n)),t.set(e,r)}var s={toBytes:function(e){var t=[],r=0;for(e=encodeURI(e);r<e.length;){var o=e.charCodeAt(r++);37===o?(t.push(parseInt(e.substr(r,2),16)),r+=2):t.push(o)}return n(t)},fromBytes:function(e){for(var t=[],r=0;r<e.length;){var o=e[r];o<128?(t.push(String.fromCharCode(o)),r++):o>191&&o<224?(t.push(String.fromCharCode((31&o)<<6|63&e[r+1])),r+=2):(t.push(String.fromCharCode((15&o)<<12|(63&e[r+1])<<6|63&e[r+2])),r+=3)}return t.join(\"\")}},l=function(){var e=\"0123456789abcdef\";return{toBytes:function(e){for(var t=[],r=0;r<e.length;r+=2)t.push(parseInt(e.substr(r,2),16));return t},fromBytes:function(t){for(var r=[],o=0;o<t.length;o++){var n=t[o];r.push(e[(240&n)>>4]+e[15&n])}return r.join(\"\")}}}(),c={16:10,24:12,32:14},u=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],d=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],h=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],g=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],p=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],f=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],m=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],b=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],v=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],T=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],A=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],y=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],S=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],E=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],O=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function C(e){for(var t=[],r=0;r<e.length;r+=4)t.push(e[r]<<24|e[r+1]<<16|e[r+2]<<8|e[r+3]);return t}var k=function(e){if(!(this instanceof k))throw Error(\"AES must be instanitated with `new`\");Object.defineProperty(this,\"key\",{value:n(e,!0)}),this._prepare()};k.prototype._prepare=function(){var e=c[this.key.length];if(null==e)throw new Error(\"invalid key size (must be 16, 24 or 32 bytes)\");this._Ke=[],this._Kd=[];for(var t=0;t<=e;t++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);var r,o=4*(e+1),n=this.key.length/4,a=C(this.key);for(t=0;t<n;t++)r=t>>2,this._Ke[r][t%4]=a[t],this._Kd[e-r][t%4]=a[t];for(var i,s=0,l=n;l<o;){if(i=a[n-1],a[0]^=d[i>>16&255]<<24^d[i>>8&255]<<16^d[255&i]<<8^d[i>>24&255]^u[s]<<24,s+=1,8!=n)for(t=1;t<n;t++)a[t]^=a[t-1];else{for(t=1;t<n/2;t++)a[t]^=a[t-1];i=a[n/2-1],a[n/2]^=d[255&i]^d[i>>8&255]<<8^d[i>>16&255]<<16^d[i>>24&255]<<24;for(t=n/2+1;t<n;t++)a[t]^=a[t-1]}for(t=0;t<n&&l<o;)h=l>>2,g=l%4,this._Ke[h][g]=a[t],this._Kd[e-h][g]=a[t++],l++}for(var h=1;h<e;h++)for(var g=0;g<4;g++)i=this._Kd[h][g],this._Kd[h][g]=y[i>>24&255]^S[i>>16&255]^E[i>>8&255]^O[255&i]},k.prototype.encrypt=function(e){if(16!=e.length)throw new Error(\"invalid plaintext size (must be 16 bytes)\");for(var t=this._Ke.length-1,r=[0,0,0,0],o=C(e),n=0;n<4;n++)o[n]^=this._Ke[0][n];for(var i=1;i<t;i++){for(n=0;n<4;n++)r[n]=g[o[n]>>24&255]^p[o[(n+1)%4]>>16&255]^f[o[(n+2)%4]>>8&255]^m[255&o[(n+3)%4]]^this._Ke[i][n];o=r.slice()}var s,l=a(16);for(n=0;n<4;n++)s=this._Ke[t][n],l[4*n]=255&(d[o[n]>>24&255]^s>>24),l[4*n+1]=255&(d[o[(n+1)%4]>>16&255]^s>>16),l[4*n+2]=255&(d[o[(n+2)%4]>>8&255]^s>>8),l[4*n+3]=255&(d[255&o[(n+3)%4]]^s);return l},k.prototype.decrypt=function(e){if(16!=e.length)throw new Error(\"invalid ciphertext size (must be 16 bytes)\");for(var t=this._Kd.length-1,r=[0,0,0,0],o=C(e),n=0;n<4;n++)o[n]^=this._Kd[0][n];for(var i=1;i<t;i++){for(n=0;n<4;n++)r[n]=b[o[n]>>24&255]^v[o[(n+3)%4]>>16&255]^T[o[(n+2)%4]>>8&255]^A[255&o[(n+1)%4]]^this._Kd[i][n];o=r.slice()}var s,l=a(16);for(n=0;n<4;n++)s=this._Kd[t][n],l[4*n]=255&(h[o[n]>>24&255]^s>>24),l[4*n+1]=255&(h[o[(n+3)%4]>>16&255]^s>>16),l[4*n+2]=255&(h[o[(n+2)%4]>>8&255]^s>>8),l[4*n+3]=255&(h[255&o[(n+1)%4]]^s);return l};var F=function(e){if(!(this instanceof F))throw Error(\"AES must be instanitated with `new`\");this.description=\"Electronic Code Block\",this.name=\"ecb\",this._aes=new k(e)};F.prototype.encrypt=function(e){if((e=n(e)).length%16!==0)throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");for(var t=a(e.length),r=a(16),o=0;o<e.length;o+=16)i(e,r,0,o,o+16),i(r=this._aes.encrypt(r),t,o);return t},F.prototype.decrypt=function(e){if((e=n(e)).length%16!==0)throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");for(var t=a(e.length),r=a(16),o=0;o<e.length;o+=16)i(e,r,0,o,o+16),i(r=this._aes.decrypt(r),t,o);return t};var J=function(e,t){if(!(this instanceof J))throw Error(\"AES must be instanitated with `new`\");if(this.description=\"Cipher Block Chaining\",this.name=\"cbc\",t){if(16!=t.length)throw new Error(\"invalid initialation vector size (must be 16 bytes)\")}else t=a(16);this._lastCipherblock=n(t,!0),this._aes=new k(e)};J.prototype.encrypt=function(e){if((e=n(e)).length%16!==0)throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");for(var t=a(e.length),r=a(16),o=0;o<e.length;o+=16){i(e,r,0,o,o+16);for(var s=0;s<16;s++)r[s]^=this._lastCipherblock[s];this._lastCipherblock=this._aes.encrypt(r),i(this._lastCipherblock,t,o)}return t},J.prototype.decrypt=function(e){if((e=n(e)).length%16!==0)throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");for(var t=a(e.length),r=a(16),o=0;o<e.length;o+=16){i(e,r,0,o,o+16),r=this._aes.decrypt(r);for(var s=0;s<16;s++)t[o+s]=r[s]^this._lastCipherblock[s];i(e,this._lastCipherblock,0,o,o+16)}return t};var B=function(e,t,r){if(!(this instanceof B))throw Error(\"AES must be instanitated with `new`\");if(this.description=\"Cipher Feedback\",this.name=\"cfb\",t){if(16!=t.length)throw new Error(\"invalid initialation vector size (must be 16 size)\")}else t=a(16);r||(r=1),this.segmentSize=r,this._shiftRegister=n(t,!0),this._aes=new k(e)};B.prototype.encrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error(\"invalid plaintext size (must be segmentSize bytes)\");for(var t,r=n(e,!0),o=0;o<r.length;o+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var a=0;a<this.segmentSize;a++)r[o+a]^=t[a];i(this._shiftRegister,this._shiftRegister,0,this.segmentSize),i(r,this._shiftRegister,16-this.segmentSize,o,o+this.segmentSize)}return r},B.prototype.decrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error(\"invalid ciphertext size (must be segmentSize bytes)\");for(var t,r=n(e,!0),o=0;o<r.length;o+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var a=0;a<this.segmentSize;a++)r[o+a]^=t[a];i(this._shiftRegister,this._shiftRegister,0,this.segmentSize),i(e,this._shiftRegister,16-this.segmentSize,o,o+this.segmentSize)}return r};var L=function(e,t){if(!(this instanceof L))throw Error(\"AES must be instanitated with `new`\");if(this.description=\"Output Feedback\",this.name=\"ofb\",t){if(16!=t.length)throw new Error(\"invalid initialation vector size (must be 16 bytes)\")}else t=a(16);this._lastPrecipher=n(t,!0),this._lastPrecipherIndex=16,this._aes=new k(e)};L.prototype.encrypt=function(e){for(var t=n(e,!0),r=0;r<t.length;r++)16===this._lastPrecipherIndex&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),t[r]^=this._lastPrecipher[this._lastPrecipherIndex++];return t},L.prototype.decrypt=L.prototype.encrypt;var w=function(e){if(!(this instanceof w))throw Error(\"Counter must be instanitated with `new`\");0===e||e||(e=1),\"number\"===typeof e?(this._counter=a(16),this.setValue(e)):this.setBytes(e)};w.prototype.setValue=function(e){if(\"number\"!==typeof e||parseInt(e)!=e)throw new Error(\"invalid counter value (must be an integer)\");for(var t=15;t>=0;--t)this._counter[t]=e%256,e>>=8},w.prototype.setBytes=function(e){if(16!=(e=n(e,!0)).length)throw new Error(\"invalid counter bytes size (must be 16 bytes)\");this._counter=e},w.prototype.increment=function(){for(var e=15;e>=0;e--){if(255!==this._counter[e]){this._counter[e]++;break}this._counter[e]=0}};var P=function(e,t){if(!(this instanceof P))throw Error(\"AES must be instanitated with `new`\");this.description=\"Counter\",this.name=\"ctr\",t instanceof w||(t=new w(t)),this._counter=t,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new k(e)};P.prototype.encrypt=function(e){for(var t=n(e,!0),r=0;r<t.length;r++)16===this._remainingCounterIndex&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),t[r]^=this._remainingCounter[this._remainingCounterIndex++];return t},P.prototype.decrypt=P.prototype.encrypt;var M={AES:k,Counter:w,ModeOfOperation:{ecb:F,cbc:J,cfb:B,ofb:L,ctr:P},utils:{hex:l,utf8:s},padding:{pkcs7:{pad:function(e){var t=16-(e=n(e,!0)).length%16,r=a(e.length+t);i(e,r);for(var o=e.length;o<r.length;o++)r[o]=t;return r},strip:function(e){if((e=n(e,!0)).length<16)throw new Error(\"PKCS#7 invalid length\");var t=e[e.length-1];if(t>16)throw new Error(\"PKCS#7 padding byte out of range\");for(var r=e.length-t,o=0;o<t;o++)if(e[r+o]!==t)throw new Error(\"PKCS#7 invalid padding byte\");var s=a(r);return i(e,s,0,0,r),s}}},_arrayTest:{coerceArray:n,createArray:a,copyArray:i}};e.exports=M}()},icAF:function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"Z1Ib\");function a(){if(!(this instanceof a))return new a;n.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}o.inherits(a,n),e.exports=a,a.blockSize=512,a.outSize=224,a.hmacStrength=192,a.padLength=64,a.prototype._digest=function(e){return\"hex\"===e?o.toHex32(this.h.slice(0,7),\"big\"):o.split32(this.h.slice(0,7),\"big\")}},j0Hh:function(e,t,r){var o=t;o.utils=r(\"ANg/\"),o.common=r(\"UPaY\"),o.sha=r(\"kLRD\"),o.ripemd=r(\"1g5y\"),o.hmac=r(\"7YYO\"),o.sha1=o.sha.sha1,o.sha256=o.sha.sha256,o.sha224=o.sha.sha224,o.sha384=o.sha.sha384,o.sha512=o.sha.sha512,o.ripemd160=o.ripemd.ripemd160},kLRD:function(e,t,r){\"use strict\";t.sha1=r(\"2t7c\"),t.sha224=r(\"icAF\"),t.sha256=r(\"Z1Ib\"),t.sha384=r(\"To1g\"),t.sha512=r(\"lBBE\")},lBBE:function(e,t,r){\"use strict\";var o=r(\"ANg/\"),n=r(\"UPaY\"),a=r(\"2j6C\"),i=o.rotr64_hi,s=o.rotr64_lo,l=o.shr64_hi,c=o.shr64_lo,u=o.sum64,d=o.sum64_hi,h=o.sum64_lo,g=o.sum64_4_hi,p=o.sum64_4_lo,f=o.sum64_5_hi,m=o.sum64_5_lo,b=n.BlockHash,v=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function T(){if(!(this instanceof T))return new T;b.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=v,this.W=new Array(160)}function A(e,t,r,o,n){var a=e&r^~e&n;return a<0&&(a+=4294967296),a}function y(e,t,r,o,n,a){var i=t&o^~t&a;return i<0&&(i+=4294967296),i}function S(e,t,r,o,n){var a=e&r^e&n^r&n;return a<0&&(a+=4294967296),a}function E(e,t,r,o,n,a){var i=t&o^t&a^o&a;return i<0&&(i+=4294967296),i}function O(e,t){var r=i(e,t,28)^i(t,e,2)^i(t,e,7);return r<0&&(r+=4294967296),r}function C(e,t){var r=s(e,t,28)^s(t,e,2)^s(t,e,7);return r<0&&(r+=4294967296),r}function k(e,t){var r=i(e,t,14)^i(e,t,18)^i(t,e,9);return r<0&&(r+=4294967296),r}function F(e,t){var r=s(e,t,14)^s(e,t,18)^s(t,e,9);return r<0&&(r+=4294967296),r}function J(e,t){var r=i(e,t,1)^i(e,t,8)^l(e,t,7);return r<0&&(r+=4294967296),r}function B(e,t){var r=s(e,t,1)^s(e,t,8)^c(e,t,7);return r<0&&(r+=4294967296),r}function L(e,t){var r=i(e,t,19)^i(t,e,29)^l(e,t,6);return r<0&&(r+=4294967296),r}function w(e,t){var r=s(e,t,19)^s(t,e,29)^c(e,t,6);return r<0&&(r+=4294967296),r}o.inherits(T,b),e.exports=T,T.blockSize=1024,T.outSize=512,T.hmacStrength=192,T.padLength=128,T.prototype._prepareBlock=function(e,t){for(var r=this.W,o=0;o<32;o++)r[o]=e[t+o];for(;o<r.length;o+=2){var n=L(r[o-4],r[o-3]),a=w(r[o-4],r[o-3]),i=r[o-14],s=r[o-13],l=J(r[o-30],r[o-29]),c=B(r[o-30],r[o-29]),u=r[o-32],d=r[o-31];r[o]=g(n,a,i,s,l,c,u,d),r[o+1]=p(n,a,i,s,l,c,u,d)}},T.prototype._update=function(e,t){this._prepareBlock(e,t);var r=this.W,o=this.h[0],n=this.h[1],i=this.h[2],s=this.h[3],l=this.h[4],c=this.h[5],g=this.h[6],p=this.h[7],b=this.h[8],v=this.h[9],T=this.h[10],J=this.h[11],B=this.h[12],L=this.h[13],w=this.h[14],P=this.h[15];a(this.k.length===r.length);for(var M=0;M<r.length;M+=2){var R=w,D=P,N=k(b,v),j=F(b,v),X=A(b,v,T,J,B),I=y(b,v,T,J,B,L),H=this.k[M],_=this.k[M+1],G=r[M],U=r[M+1],x=f(R,D,N,j,X,I,H,_,G,U),V=m(R,D,N,j,X,I,H,_,G,U);R=O(o,n),D=C(o,n),N=S(o,n,i,s,l),j=E(o,n,i,s,l,c);var z=d(R,D,N,j),Z=h(R,D,N,j);w=B,P=L,B=T,L=J,T=b,J=v,b=d(g,p,x,V),v=h(p,p,x,V),g=l,p=c,l=i,c=s,i=o,s=n,o=d(x,V,z,Z),n=h(x,V,z,Z)}u(this.h,0,o,n),u(this.h,2,i,s),u(this.h,4,l,c),u(this.h,6,g,p),u(this.h,8,b,v),u(this.h,10,T,J),u(this.h,12,B,L),u(this.h,14,w,P)},T.prototype._digest=function(e){return\"hex\"===e?o.toHex32(this.h,\"big\"):o.split32(this.h,\"big\")}},tGuN:function(e,t,r){\"use strict\";r.r(t),r.d(t,\"AddressZero\",(function(){return o.a})),r.d(t,\"NegativeOne\",(function(){return n.b})),r.d(t,\"Zero\",(function(){return n.f})),r.d(t,\"One\",(function(){return n.c})),r.d(t,\"Two\",(function(){return n.d})),r.d(t,\"WeiPerEther\",(function(){return n.e})),r.d(t,\"MaxUint256\",(function(){return n.a})),r.d(t,\"HashZero\",(function(){return a.a})),r.d(t,\"EtherSymbol\",(function(){return i}));var o=r(\"wAtr\"),n=r(\"nVZa\"),a=r(\"SHcd\");const i=\"\\u039e\"},tH0i:function(e,t,r){\"use strict\";var o=r(\"ANg/\").rotr32;function n(e,t,r){return e&t^~e&r}function a(e,t,r){return e&t^e&r^t&r}function i(e,t,r){return e^t^r}t.ft_1=function(e,t,r,o){return 0===e?n(t,r,o):1===e||3===e?i(t,r,o):2===e?a(t,r,o):void 0},t.ch32=n,t.maj32=a,t.p32=i,t.s0_256=function(e){return o(e,2)^o(e,13)^o(e,22)},t.s1_256=function(e){return o(e,6)^o(e,11)^o(e,25)},t.g0_256=function(e){return o(e,7)^o(e,18)^e>>>3},t.g1_256=function(e){return o(e,17)^o(e,19)^e>>>10}},\"vyt/\":function(e,t,r){\"use strict\";for(var o=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\",n={},a=0;a<o.length;a++){var i=o.charAt(a);if(void 0!==n[i])throw new TypeError(i+\" is ambiguous\");n[i]=a}function s(e){var t=e>>25;return(33554431&e)<<5^996825010&-(t>>0&1)^642813549&-(t>>1&1)^513874426&-(t>>2&1)^1027748829&-(t>>3&1)^705979059&-(t>>4&1)}function l(e){for(var t=1,r=0;r<e.length;++r){var o=e.charCodeAt(r);if(o<33||o>126)return\"Invalid prefix (\"+e+\")\";t=s(t)^o>>5}for(t=s(t),r=0;r<e.length;++r){var n=e.charCodeAt(r);t=s(t)^31&n}return t}function c(e,t){if(t=t||90,e.length<8)return e+\" too short\";if(e.length>t)return\"Exceeds length limit\";var r=e.toLowerCase(),o=e.toUpperCase();if(e!==r&&e!==o)return\"Mixed-case string \"+e;var a=(e=r).lastIndexOf(\"1\");if(-1===a)return\"No separator character for \"+e;if(0===a)return\"Missing prefix for \"+e;var i=e.slice(0,a),c=e.slice(a+1);if(c.length<6)return\"Data too short\";var u=l(i);if(\"string\"===typeof u)return u;for(var d=[],h=0;h<c.length;++h){var g=c.charAt(h),p=n[g];if(void 0===p)return\"Unknown character \"+g;u=s(u)^p,h+6>=c.length||d.push(p)}return 1!==u?\"Invalid checksum for \"+e:{prefix:i,words:d}}function u(e,t,r,o){for(var n=0,a=0,i=(1<<r)-1,s=[],l=0;l<e.length;++l)for(n=n<<t|e[l],a+=t;a>=r;)a-=r,s.push(n>>a&i);if(o)a>0&&s.push(n<<r-a&i);else{if(a>=t)return\"Excess padding\";if(n<<r-a&i)return\"Non-zero padding\"}return s}e.exports={decodeUnsafe:function(){var e=c.apply(null,arguments);if(\"object\"===typeof e)return e},decode:function(e){var t=c.apply(null,arguments);if(\"object\"===typeof t)return t;throw new Error(t)},encode:function(e,t,r){if(r=r||90,e.length+7+t.length>r)throw new TypeError(\"Exceeds length limit\");var n=l(e=e.toLowerCase());if(\"string\"===typeof n)throw new Error(n);for(var a=e+\"1\",i=0;i<t.length;++i){var c=t[i];if(c>>5!==0)throw new Error(\"Non 5-bit word\");n=s(n)^c,a+=o.charAt(c)}for(i=0;i<6;++i)n=s(n);for(n^=1,i=0;i<6;++i){a+=o.charAt(n>>5*(5-i)&31)}return a},toWordsUnsafe:function(e){var t=u(e,8,5,!0);if(Array.isArray(t))return t},toWords:function(e){var t=u(e,8,5,!0);if(Array.isArray(t))return t;throw new Error(t)},fromWordsUnsafe:function(e){var t=u(e,5,8,!1);if(Array.isArray(t))return t},fromWords:function(e){var t=u(e,5,8,!1);if(Array.isArray(t))return t;throw new Error(t)}}},wAtr:function(e,t,r){\"use strict\";r.d(t,\"a\",(function(){return o}));const o=\"0x0000000000000000000000000000000000000000\"},wDBh:function(e,t,r){\"use strict\";r.d(t,\"a\",(function(){return i}));var o={};r.r(o),r.d(o,\"Provider\",(function(){return me})),r.d(o,\"BaseProvider\",(function(){return bn})),r.d(o,\"Resolver\",(function(){return pn})),r.d(o,\"UrlJsonRpcProvider\",(function(){return Xn})),r.d(o,\"FallbackProvider\",(function(){return ma})),r.d(o,\"AlchemyProvider\",(function(){return Gn})),r.d(o,\"AlchemyWebSocketProvider\",(function(){return _n})),r.d(o,\"CloudflareProvider\",(function(){return Vn})),r.d(o,\"EtherscanProvider\",(function(){return ea})),r.d(o,\"InfuraProvider\",(function(){return ya})),r.d(o,\"InfuraWebSocketProvider\",(function(){return Aa})),r.d(o,\"JsonRpcProvider\",(function(){return Bn})),r.d(o,\"NodesmithProvider\",(function(){return Ea})),r.d(o,\"PocketProvider\",(function(){return ka})),r.d(o,\"StaticJsonRpcProvider\",(function(){return jn})),r.d(o,\"Web3Provider\",(function(){return La})),r.d(o,\"WebSocketProvider\",(function(){return Rn})),r.d(o,\"IpcProvider\",(function(){return ba})),r.d(o,\"JsonRpcSigner\",(function(){return kn})),r.d(o,\"getDefaultProvider\",(function(){return Pa})),r.d(o,\"getNetwork\",(function(){return bo})),r.d(o,\"isCommunityResource\",(function(){return $o})),r.d(o,\"isCommunityResourcable\",(function(){return Wo})),r.d(o,\"showThrottleMessage\",(function(){return tn})),r.d(o,\"Formatter\",(function(){return qo}));var n={};r.r(n),r.d(n,\"decode\",(function(){return Do})),r.d(n,\"encode\",(function(){return No}));var a={};r.r(a),r.d(a,\"AbiCoder\",(function(){return ie})),r.d(a,\"defaultAbiCoder\",(function(){return se})),r.d(a,\"Fragment\",(function(){return z})),r.d(a,\"EventFragment\",(function(){return Z})),r.d(a,\"FunctionFragment\",(function(){return W})),r.d(a,\"ParamType\",(function(){return x})),r.d(a,\"FormatTypes\",(function(){return G})),r.d(a,\"checkResultErrors\",(function(){return g})),r.d(a,\"Logger\",(function(){return u.b})),r.d(a,\"RLP\",(function(){return Ha})),r.d(a,\"_fetchData\",(function(){return Uo})),r.d(a,\"fetchJson\",(function(){return xo})),r.d(a,\"poll\",(function(){return Vo})),r.d(a,\"checkProperties\",(function(){return c.b})),r.d(a,\"deepCopy\",(function(){return c.c})),r.d(a,\"defineReadOnly\",(function(){return c.d})),r.d(a,\"getStatic\",(function(){return c.e})),r.d(a,\"resolveProperties\",(function(){return c.f})),r.d(a,\"shallowCopy\",(function(){return c.g})),r.d(a,\"arrayify\",(function(){return s.a})),r.d(a,\"concat\",(function(){return s.b})),r.d(a,\"stripZeros\",(function(){return s.o})),r.d(a,\"zeroPad\",(function(){return s.p})),r.d(a,\"isBytes\",(function(){return s.j})),r.d(a,\"isBytesLike\",(function(){return s.k})),r.d(a,\"defaultPath\",(function(){return Or})),r.d(a,\"HDNode\",(function(){return Cr})),r.d(a,\"SigningKey\",(function(){return Bt.a})),r.d(a,\"Interface\",(function(){return ge})),r.d(a,\"LogDescription\",(function(){return ce})),r.d(a,\"TransactionDescription\",(function(){return ue})),r.d(a,\"base58\",(function(){return Tt})),r.d(a,\"base64\",(function(){return n})),r.d(a,\"hexlify\",(function(){return s.i})),r.d(a,\"isHexString\",(function(){return s.l})),r.d(a,\"hexConcat\",(function(){return s.c})),r.d(a,\"hexStripZeros\",(function(){return s.f})),r.d(a,\"hexValue\",(function(){return s.g})),r.d(a,\"hexZeroPad\",(function(){return s.h})),r.d(a,\"hexDataLength\",(function(){return s.d})),r.d(a,\"hexDataSlice\",(function(){return s.e})),r.d(a,\"nameprep\",(function(){return Bo})),r.d(a,\"_toEscapedUtf8String\",(function(){return M.d})),r.d(a,\"toUtf8Bytes\",(function(){return M.f})),r.d(a,\"toUtf8CodePoints\",(function(){return M.g})),r.d(a,\"toUtf8String\",(function(){return M.h})),r.d(a,\"Utf8ErrorFuncs\",(function(){return M.b})),r.d(a,\"formatBytes32String\",(function(){return _a})),r.d(a,\"parseBytes32String\",(function(){return Ga})),r.d(a,\"hashMessage\",(function(){return et})),r.d(a,\"namehash\",(function(){return Ro})),r.d(a,\"isValidName\",(function(){return Mo})),r.d(a,\"id\",(function(){return v.a})),r.d(a,\"_TypedDataEncoder\",(function(){return bt})),r.d(a,\"getAddress\",(function(){return b.a})),r.d(a,\"getIcapAddress\",(function(){return b.d})),r.d(a,\"getContractAddress\",(function(){return b.b})),r.d(a,\"getCreate2Address\",(function(){return b.c})),r.d(a,\"isAddress\",(function(){return b.e})),r.d(a,\"formatEther\",(function(){return Ka})),r.d(a,\"parseEther\",(function(){return Qa})),r.d(a,\"formatUnits\",(function(){return za})),r.d(a,\"parseUnits\",(function(){return Za})),r.d(a,\"commify\",(function(){return Va})),r.d(a,\"computeHmac\",(function(){return Ft})),r.d(a,\"keccak256\",(function(){return T.a})),r.d(a,\"ripemd160\",(function(){return Ot})),r.d(a,\"sha256\",(function(){return Ct})),r.d(a,\"sha512\",(function(){return kt})),r.d(a,\"randomBytes\",(function(){return Lr.a})),r.d(a,\"shuffled\",(function(){return ta})),r.d(a,\"solidityPack\",(function(){return ja})),r.d(a,\"solidityKeccak256\",(function(){return Xa})),r.d(a,\"soliditySha256\",(function(){return Ia})),r.d(a,\"splitSignature\",(function(){return s.n})),r.d(a,\"joinSignature\",(function(){return s.m})),r.d(a,\"accessListify\",(function(){return Ee.accessListify})),r.d(a,\"parseTransaction\",(function(){return Ee.parse})),r.d(a,\"serializeTransaction\",(function(){return Ee.serialize})),r.d(a,\"getJsonWalletAddress\",(function(){return eo})),r.d(a,\"computeAddress\",(function(){return Ee.computeAddress})),r.d(a,\"recoverAddress\",(function(){return Ee.recoverAddress})),r.d(a,\"computePublicKey\",(function(){return Bt.b})),r.d(a,\"recoverPublicKey\",(function(){return Bt.c})),r.d(a,\"verifyMessage\",(function(){return io})),r.d(a,\"verifyTypedData\",(function(){return so})),r.d(a,\"mnemonicToEntropy\",(function(){return Fr})),r.d(a,\"entropyToMnemonic\",(function(){return Jr})),r.d(a,\"isValidMnemonic\",(function(){return Br})),r.d(a,\"mnemonicToSeed\",(function(){return kr})),r.d(a,\"SupportedAlgorithm\",(function(){return At})),r.d(a,\"UnicodeNormalizationForm\",(function(){return M.a})),r.d(a,\"Utf8ErrorReason\",(function(){return M.c})),r.d(a,\"Indexed\",(function(){return de}));var i={};r.r(i),r.d(i,\"Signer\",(function(){return ye})),r.d(i,\"Wallet\",(function(){return ao})),r.d(i,\"VoidSigner\",(function(){return Se})),r.d(i,\"getDefaultProvider\",(function(){return Pa})),r.d(i,\"providers\",(function(){return o})),r.d(i,\"BaseContract\",(function(){return je})),r.d(i,\"Contract\",(function(){return Xe})),r.d(i,\"ContractFactory\",(function(){return Ie})),r.d(i,\"BigNumber\",(function(){return l.a})),r.d(i,\"FixedNumber\",(function(){return qe})),r.d(i,\"constants\",(function(){return lo})),r.d(i,\"errors\",(function(){return u.a})),r.d(i,\"logger\",(function(){return qa})),r.d(i,\"utils\",(function(){return a})),r.d(i,\"wordlists\",(function(){return pr})),r.d(i,\"version\",(function(){return Ya})),r.d(i,\"Wordlist\",(function(){return wt}));var s=r(\"VJ7P\"),l=r(\"4218\"),c=r(\"m9oY\"),u=r(\"/7J2\");const d=\"abi/5.1.0\",h=new u.b(d);function g(e){const t=[],r=function(e,o){if(Array.isArray(o))for(let a in o){const i=e.slice();i.push(a);try{r(i,o[a])}catch(n){t.push({path:i,error:n})}}};return r([],e),t}class p{constructor(e,t,r,o){this.name=e,this.type=t,this.localName=r,this.dynamic=o}_throwError(e,t){h.throwArgumentError(e,this.localName,t)}}class f{constructor(e){Object(c.d)(this,\"wordSize\",e||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(e)}get data(){return Object(s.c)(this._data)}get length(){return this._dataLength}_writeData(e){return this._data.push(e),this._dataLength+=e.length,e.length}appendWriter(e){return this._writeData(Object(s.b)(e._data))}writeBytes(e){let t=Object(s.a)(e);const r=t.length%this.wordSize;return r&&(t=Object(s.b)([t,this._padding.slice(r)])),this._writeData(t)}_getValue(e){let t=Object(s.a)(l.a.from(e));return t.length>this.wordSize&&h.throwError(\"value out-of-bounds\",u.b.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:t.length}),t.length%this.wordSize&&(t=Object(s.b)([this._padding.slice(t.length%this.wordSize),t])),t}writeValue(e){return this._writeData(this._getValue(e))}writeUpdatableValue(){const e=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,t=>{this._data[e]=this._getValue(t)}}}class m{constructor(e,t,r,o){Object(c.d)(this,\"_data\",Object(s.a)(e)),Object(c.d)(this,\"wordSize\",t||32),Object(c.d)(this,\"_coerceFunc\",r),Object(c.d)(this,\"allowLoose\",o),this._offset=0}get data(){return Object(s.i)(this._data)}get consumed(){return this._offset}static coerce(e,t){let r=e.match(\"^u?int([0-9]+)$\");return r&&parseInt(r[1])<=48&&(t=t.toNumber()),t}coerce(e,t){return this._coerceFunc?this._coerceFunc(e,t):m.coerce(e,t)}_peekBytes(e,t,r){let o=Math.ceil(t/this.wordSize)*this.wordSize;return this._offset+o>this._data.length&&(this.allowLoose&&r&&this._offset+t<=this._data.length?o=t:h.throwError(\"data out-of-bounds\",u.b.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+o})),this._data.slice(this._offset,this._offset+o)}subReader(e){return new m(this._data.slice(this._offset+e),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(e,t){let r=this._peekBytes(0,e,!!t);return this._offset+=r.length,r.slice(0,e)}readValue(){return l.a.from(this.readBytes(this.wordSize))}}var b=r(\"Oxwv\"),v=r(\"NaiW\"),T=r(\"b1pR\");class A extends p{constructor(e){super(\"address\",\"address\",e,!1)}defaultValue(){return\"0x0000000000000000000000000000000000000000\"}encode(e,t){try{Object(b.a)(t)}catch(r){this._throwError(r.message,t)}return e.writeValue(t)}decode(e){return Object(b.a)(Object(s.h)(e.readValue().toHexString(),20))}}class y extends p{constructor(e){super(e.name,e.type,void 0,e.dynamic),this.coder=e}defaultValue(){return this.coder.defaultValue()}encode(e,t){return this.coder.encode(e,t)}decode(e){return this.coder.decode(e)}}const S=new u.b(d);function E(e,t,r){let o=null;if(Array.isArray(r))o=r;else if(r&&\"object\"===typeof r){let e={};o=t.map((t=>{const o=t.localName;return o||S.throwError(\"cannot encode object for signature with missing names\",u.b.errors.INVALID_ARGUMENT,{argument:\"values\",coder:t,value:r}),e[o]&&S.throwError(\"cannot encode object for signature with duplicate names\",u.b.errors.INVALID_ARGUMENT,{argument:\"values\",coder:t,value:r}),e[o]=!0,r[o]}))}else S.throwArgumentError(\"invalid tuple value\",\"tuple\",r);t.length!==o.length&&S.throwArgumentError(\"types/value length mismatch\",\"tuple\",r);let n=new f(e.wordSize),a=new f(e.wordSize),i=[];t.forEach(((e,t)=>{let r=o[t];if(e.dynamic){let t=a.length;e.encode(a,r);let o=n.writeUpdatableValue();i.push((e=>{o(e+t)}))}else e.encode(n,r)})),i.forEach((e=>{e(n.length)}));let s=e.appendWriter(n);return s+=e.appendWriter(a),s}function O(e,t){let r=[],o=e.subReader(0);t.forEach((t=>{let n=null;if(t.dynamic){let r=e.readValue(),i=o.subReader(r.toNumber());try{n=t.decode(i)}catch(a){if(a.code===u.b.errors.BUFFER_OVERRUN)throw a;n=a,n.baseType=t.name,n.name=t.localName,n.type=t.type}}else try{n=t.decode(e)}catch(a){if(a.code===u.b.errors.BUFFER_OVERRUN)throw a;n=a,n.baseType=t.name,n.name=t.localName,n.type=t.type}void 0!=n&&r.push(n)}));const n=t.reduce(((e,t)=>{const r=t.localName;return r&&(e[r]||(e[r]=0),e[r]++),e}),{});t.forEach(((e,t)=>{let o=e.localName;if(!o||1!==n[o])return;if(\"length\"===o&&(o=\"_length\"),null!=r[o])return;const a=r[t];a instanceof Error?Object.defineProperty(r,o,{get:()=>{throw a}}):r[o]=a}));for(let a=0;a<r.length;a++){const e=r[a];e instanceof Error&&Object.defineProperty(r,a,{get:()=>{throw e}})}return Object.freeze(r)}class C extends p{constructor(e,t,r){super(\"array\",e.type+\"[\"+(t>=0?t:\"\")+\"]\",r,-1===t||e.dynamic),this.coder=e,this.length=t}defaultValue(){const e=this.coder.defaultValue(),t=[];for(let r=0;r<this.length;r++)t.push(e);return t}encode(e,t){Array.isArray(t)||this._throwError(\"expected array value\",t);let r=this.length;-1===r&&(r=t.length,e.writeValue(t.length)),S.checkArgumentCount(t.length,r,\"coder array\"+(this.localName?\" \"+this.localName:\"\"));let o=[];for(let n=0;n<t.length;n++)o.push(this.coder);return E(e,o,t)}decode(e){let t=this.length;-1===t&&(t=e.readValue().toNumber());let r=[];for(let o=0;o<t;o++)r.push(new y(this.coder));return e.coerce(this.name,O(e,r))}}class k extends p{constructor(e){super(\"bool\",\"bool\",e,!1)}defaultValue(){return!1}encode(e,t){return e.writeValue(t?1:0)}decode(e){return e.coerce(this.type,!e.readValue().isZero())}}class F extends p{constructor(e,t){super(e,e,t,!0)}defaultValue(){return\"0x\"}encode(e,t){t=Object(s.a)(t);let r=e.writeValue(t.length);return r+=e.writeBytes(t),r}decode(e){return e.readBytes(e.readValue().toNumber(),!0)}}class J extends F{constructor(e){super(\"bytes\",e)}decode(e){return e.coerce(this.name,Object(s.i)(super.decode(e)))}}class B extends p{constructor(e,t){let r=\"bytes\"+String(e);super(r,r,t,!1),this.size=e}defaultValue(){return\"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0,2+2*this.size)}encode(e,t){let r=Object(s.a)(t);return r.length!==this.size&&this._throwError(\"incorrect data length\",t),e.writeBytes(r)}decode(e){return e.coerce(this.name,Object(s.i)(e.readBytes(this.size)))}}class L extends p{constructor(e){super(\"null\",\"\",e,!1)}defaultValue(){return null}encode(e,t){return null!=t&&this._throwError(\"not null\",t),e.writeBytes([])}decode(e){return e.readBytes(0),e.coerce(this.name,null)}}var w=r(\"nVZa\");class P extends p{constructor(e,t,r){const o=(t?\"int\":\"uint\")+8*e;super(o,o,r,!1),this.size=e,this.signed=t}defaultValue(){return 0}encode(e,t){let r=l.a.from(t),o=w.a.mask(8*e.wordSize);if(this.signed){let e=o.mask(8*this.size-1);(r.gt(e)||r.lt(e.add(w.c).mul(w.b)))&&this._throwError(\"value out-of-bounds\",t)}else(r.lt(w.f)||r.gt(o.mask(8*this.size)))&&this._throwError(\"value out-of-bounds\",t);return r=r.toTwos(8*this.size).mask(8*this.size),this.signed&&(r=r.fromTwos(8*this.size).toTwos(8*e.wordSize)),e.writeValue(r)}decode(e){let t=e.readValue().mask(8*this.size);return this.signed&&(t=t.fromTwos(8*this.size)),e.coerce(this.name,t)}}var M=r(\"UnNr\");class R extends F{constructor(e){super(\"string\",e)}defaultValue(){return\"\"}encode(e,t){return super.encode(e,Object(M.f)(t))}decode(e){return Object(M.h)(super.decode(e))}}class D extends p{constructor(e,t){let r=!1;const o=[];e.forEach((e=>{e.dynamic&&(r=!0),o.push(e.type)}));super(\"tuple\",\"tuple(\"+o.join(\",\")+\")\",t,r),this.coders=e}defaultValue(){const e=[];this.coders.forEach((t=>{e.push(t.defaultValue())}));const t=this.coders.reduce(((e,t)=>{const r=t.localName;return r&&(e[r]||(e[r]=0),e[r]++),e}),{});return this.coders.forEach(((r,o)=>{let n=r.localName;n&&1===t[n]&&(\"length\"===n&&(n=\"_length\"),null==e[n]&&(e[n]=e[o]))})),Object.freeze(e)}encode(e,t){return E(e,this.coders,t)}decode(e){return e.coerce(this.name,O(e,this.coders))}}const N=new u.b(d),j={};let X={calldata:!0,memory:!0,storage:!0},I={calldata:!0,memory:!0};function H(e,t){if(\"bytes\"===e||\"string\"===e){if(X[t])return!0}else if(\"address\"===e){if(\"payable\"===t)return!0}else if((e.indexOf(\"[\")>=0||\"tuple\"===e)&&I[t])return!0;return(X[t]||\"payable\"===t)&&N.throwArgumentError(\"invalid modifier\",\"name\",t),!1}function _(e,t){for(let r in t)Object(c.d)(e,r,t[r])}const G=Object.freeze({sighash:\"sighash\",minimal:\"minimal\",full:\"full\",json:\"json\"}),U=new RegExp(/^(.*)\\[([0-9]*)\\]$/);class x{constructor(e,t){e!==j&&N.throwError(\"use fromString\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"new ParamType()\"}),_(this,t);let r=this.type.match(U);_(this,r?{arrayLength:parseInt(r[2]||\"-1\"),arrayChildren:x.fromObject({type:r[1],components:this.components}),baseType:\"array\"}:{arrayLength:null,arrayChildren:null,baseType:null!=this.components?\"tuple\":this.type}),this._isParamType=!0,Object.freeze(this)}format(e){if(e||(e=G.sighash),G[e]||N.throwArgumentError(\"invalid format type\",\"format\",e),e===G.json){let t={type:\"tuple\"===this.baseType?\"tuple\":this.type,name:this.name||void 0};return\"boolean\"===typeof this.indexed&&(t.indexed=this.indexed),this.components&&(t.components=this.components.map((t=>JSON.parse(t.format(e))))),JSON.stringify(t)}let t=\"\";return\"array\"===this.baseType?(t+=this.arrayChildren.format(e),t+=\"[\"+(this.arrayLength<0?\"\":String(this.arrayLength))+\"]\"):\"tuple\"===this.baseType?(e!==G.sighash&&(t+=this.type),t+=\"(\"+this.components.map((t=>t.format(e))).join(e===G.full?\", \":\",\")+\")\"):t+=this.type,e!==G.sighash&&(!0===this.indexed&&(t+=\" indexed\"),e===G.full&&this.name&&(t+=\" \"+this.name)),t}static from(e,t){return\"string\"===typeof e?x.fromString(e,t):x.fromObject(e)}static fromObject(e){return x.isParamType(e)?e:new x(j,{name:e.name||null,type:$(e.type),indexed:null==e.indexed?null:!!e.indexed,components:e.components?e.components.map(x.fromObject):null})}static fromString(e,t){return r=function(e,t){let r=e;function o(t){N.throwArgumentError(`unexpected character at position ${t}`,\"param\",e)}function n(e){let r={type:\"\",name:\"\",parent:e,state:{allowType:!0}};return t&&(r.indexed=!1),r}e=e.replace(/\\s/g,\" \");let a={type:\"\",name:\"\",state:{allowType:!0}},i=a;for(let s=0;s<e.length;s++){let r=e[s];switch(r){case\"(\":i.state.allowType&&\"\"===i.type?i.type=\"tuple\":i.state.allowParams||o(s),i.state.allowType=!1,i.type=$(i.type),i.components=[n(i)],i=i.components[0];break;case\")\":delete i.state,\"indexed\"===i.name&&(t||o(s),i.indexed=!0,i.name=\"\"),H(i.type,i.name)&&(i.name=\"\"),i.type=$(i.type);let e=i;i=i.parent,i||o(s),delete e.parent,i.state.allowParams=!1,i.state.allowName=!0,i.state.allowArray=!0;break;case\",\":delete i.state,\"indexed\"===i.name&&(t||o(s),i.indexed=!0,i.name=\"\"),H(i.type,i.name)&&(i.name=\"\"),i.type=$(i.type);let a=n(i.parent);i.parent.components.push(a),delete i.parent,i=a;break;case\" \":i.state.allowType&&\"\"!==i.type&&(i.type=$(i.type),delete i.state.allowType,i.state.allowName=!0,i.state.allowParams=!0),i.state.allowName&&\"\"!==i.name&&(\"indexed\"===i.name?(t||o(s),i.indexed&&o(s),i.indexed=!0,i.name=\"\"):H(i.type,i.name)?i.name=\"\":i.state.allowName=!1);break;case\"[\":i.state.allowArray||o(s),i.type+=r,i.state.allowArray=!1,i.state.allowName=!1,i.state.readArray=!0;break;case\"]\":i.state.readArray||o(s),i.type+=r,i.state.readArray=!1,i.state.allowArray=!0,i.state.allowName=!0;break;default:i.state.allowType?(i.type+=r,i.state.allowParams=!0,i.state.allowArray=!0):i.state.allowName?(i.name+=r,delete i.state.allowArray):i.state.readArray?i.type+=r:o(s)}}return i.parent&&N.throwArgumentError(\"unexpected eof\",\"param\",e),delete a.state,\"indexed\"===i.name?(t||o(r.length-7),i.indexed&&o(r.length-7),i.indexed=!0,i.name=\"\"):H(i.type,i.name)&&(i.name=\"\"),a.type=$(a.type),a}(e,!!t),x.fromObject({name:r.name,type:r.type,indexed:r.indexed,components:r.components});var r}static isParamType(e){return!(null==e||!e._isParamType)}}function V(e,t){return function(e){e=e.trim();let t=[],r=\"\",o=0;for(let n=0;n<e.length;n++){let a=e[n];\",\"===a&&0===o?(t.push(r),r=\"\"):(r+=a,\"(\"===a?o++:\")\"===a&&(o--,-1===o&&N.throwArgumentError(\"unbalanced parenthesis\",\"value\",e)))}r&&t.push(r);return t}(e).map((e=>x.fromString(e,t)))}class z{constructor(e,t){e!==j&&N.throwError(\"use a static from method\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"new Fragment()\"}),_(this,t),this._isFragment=!0,Object.freeze(this)}static from(e){return z.isFragment(e)?e:\"string\"===typeof e?z.fromString(e):z.fromObject(e)}static fromObject(e){if(z.isFragment(e))return e;switch(e.type){case\"function\":return W.fromObject(e);case\"event\":return Z.fromObject(e);case\"constructor\":return q.fromObject(e);case\"fallback\":case\"receive\":return null}return N.throwArgumentError(\"invalid fragment object\",\"value\",e)}static fromString(e){return\"event\"===(e=(e=(e=e.replace(/\\s/g,\" \")).replace(/\\(/g,\" (\").replace(/\\)/g,\") \").replace(/\\s+/g,\" \")).trim()).split(\" \")[0]?Z.fromString(e.substring(5).trim()):\"function\"===e.split(\" \")[0]?W.fromString(e.substring(8).trim()):\"constructor\"===e.split(\"(\")[0].trim()?q.fromString(e.trim()):N.throwArgumentError(\"unsupported fragment\",\"value\",e)}static isFragment(e){return!(!e||!e._isFragment)}}class Z extends z{format(e){if(e||(e=G.sighash),G[e]||N.throwArgumentError(\"invalid format type\",\"format\",e),e===G.json)return JSON.stringify({type:\"event\",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});let t=\"\";return e!==G.sighash&&(t+=\"event \"),t+=this.name+\"(\"+this.inputs.map((t=>t.format(e))).join(e===G.full?\", \":\",\")+\") \",e!==G.sighash&&this.anonymous&&(t+=\"anonymous \"),t.trim()}static from(e){return\"string\"===typeof e?Z.fromString(e):Z.fromObject(e)}static fromObject(e){if(Z.isEventFragment(e))return e;\"event\"!==e.type&&N.throwArgumentError(\"invalid event object\",\"value\",e);const t={name:te(e.name),anonymous:e.anonymous,inputs:e.inputs?e.inputs.map(x.fromObject):[],type:\"event\"};return new Z(j,t)}static fromString(e){let t=e.match(re);t||N.throwArgumentError(\"invalid event string\",\"value\",e);let r=!1;return t[3].split(\" \").forEach((e=>{switch(e.trim()){case\"anonymous\":r=!0;break;case\"\":break;default:N.warn(\"unknown modifier: \"+e)}})),Z.fromObject({name:t[1].trim(),anonymous:r,inputs:V(t[2],!0),type:\"event\"})}static isEventFragment(e){return e&&e._isFragment&&\"event\"===e.type}}function K(e,t){t.gas=null;let r=e.split(\"@\");return 1!==r.length?(r.length>2&&N.throwArgumentError(\"invalid human-readable ABI signature\",\"value\",e),r[1].match(/^[0-9]+$/)||N.throwArgumentError(\"invalid human-readable ABI signature gas\",\"value\",e),t.gas=l.a.from(r[1]),r[0]):e}function Q(e,t){t.constant=!1,t.payable=!1,t.stateMutability=\"nonpayable\",e.split(\" \").forEach((e=>{switch(e.trim()){case\"constant\":t.constant=!0;break;case\"payable\":t.payable=!0,t.stateMutability=\"payable\";break;case\"nonpayable\":t.payable=!1,t.stateMutability=\"nonpayable\";break;case\"pure\":t.constant=!0,t.stateMutability=\"pure\";break;case\"view\":t.constant=!0,t.stateMutability=\"view\";break;case\"external\":case\"public\":case\"\":break;default:console.log(\"unknown modifier: \"+e)}}))}function Y(e){let t={constant:!1,payable:!0,stateMutability:\"payable\"};return null!=e.stateMutability?(t.stateMutability=e.stateMutability,t.constant=\"view\"===t.stateMutability||\"pure\"===t.stateMutability,null!=e.constant&&!!e.constant!==t.constant&&N.throwArgumentError(\"cannot have constant function with mutability \"+t.stateMutability,\"value\",e),t.payable=\"payable\"===t.stateMutability,null!=e.payable&&!!e.payable!==t.payable&&N.throwArgumentError(\"cannot have payable function with mutability \"+t.stateMutability,\"value\",e)):null!=e.payable?(t.payable=!!e.payable,null!=e.constant||t.payable||\"constructor\"===e.type||N.throwArgumentError(\"unable to determine stateMutability\",\"value\",e),t.constant=!!e.constant,t.constant?t.stateMutability=\"view\":t.stateMutability=t.payable?\"payable\":\"nonpayable\",t.payable&&t.constant&&N.throwArgumentError(\"cannot have constant payable function\",\"value\",e)):null!=e.constant?(t.constant=!!e.constant,t.payable=!t.constant,t.stateMutability=t.constant?\"view\":\"payable\"):\"constructor\"!==e.type&&N.throwArgumentError(\"unable to determine stateMutability\",\"value\",e),t}class q extends z{format(e){if(e||(e=G.sighash),G[e]||N.throwArgumentError(\"invalid format type\",\"format\",e),e===G.json)return JSON.stringify({type:\"constructor\",stateMutability:\"nonpayable\"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});e===G.sighash&&N.throwError(\"cannot format a constructor for sighash\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"format(sighash)\"});let t=\"constructor(\"+this.inputs.map((t=>t.format(e))).join(e===G.full?\", \":\",\")+\") \";return this.stateMutability&&\"nonpayable\"!==this.stateMutability&&(t+=this.stateMutability+\" \"),t.trim()}static from(e){return\"string\"===typeof e?q.fromString(e):q.fromObject(e)}static fromObject(e){if(q.isConstructorFragment(e))return e;\"constructor\"!==e.type&&N.throwArgumentError(\"invalid constructor object\",\"value\",e);let t=Y(e);t.constant&&N.throwArgumentError(\"constructor cannot be constant\",\"value\",e);const r={name:null,type:e.type,inputs:e.inputs?e.inputs.map(x.fromObject):[],payable:t.payable,stateMutability:t.stateMutability,gas:e.gas?l.a.from(e.gas):null};return new q(j,r)}static fromString(e){let t={type:\"constructor\"},r=(e=K(e,t)).match(re);return r&&\"constructor\"===r[1].trim()||N.throwArgumentError(\"invalid constructor string\",\"value\",e),t.inputs=V(r[2].trim(),!1),Q(r[3].trim(),t),q.fromObject(t)}static isConstructorFragment(e){return e&&e._isFragment&&\"constructor\"===e.type}}class W extends q{format(e){if(e||(e=G.sighash),G[e]||N.throwArgumentError(\"invalid format type\",\"format\",e),e===G.json)return JSON.stringify({type:\"function\",name:this.name,constant:this.constant,stateMutability:\"nonpayable\"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((t=>JSON.parse(t.format(e)))),outputs:this.outputs.map((t=>JSON.parse(t.format(e))))});let t=\"\";return e!==G.sighash&&(t+=\"function \"),t+=this.name+\"(\"+this.inputs.map((t=>t.format(e))).join(e===G.full?\", \":\",\")+\") \",e!==G.sighash&&(this.stateMutability?\"nonpayable\"!==this.stateMutability&&(t+=this.stateMutability+\" \"):this.constant&&(t+=\"view \"),this.outputs&&this.outputs.length&&(t+=\"returns (\"+this.outputs.map((t=>t.format(e))).join(\", \")+\") \"),null!=this.gas&&(t+=\"@\"+this.gas.toString()+\" \")),t.trim()}static from(e){return\"string\"===typeof e?W.fromString(e):W.fromObject(e)}static fromObject(e){if(W.isFunctionFragment(e))return e;\"function\"!==e.type&&N.throwArgumentError(\"invalid function object\",\"value\",e);let t=Y(e);const r={type:e.type,name:te(e.name),constant:t.constant,inputs:e.inputs?e.inputs.map(x.fromObject):[],outputs:e.outputs?e.outputs.map(x.fromObject):[],payable:t.payable,stateMutability:t.stateMutability,gas:e.gas?l.a.from(e.gas):null};return new W(j,r)}static fromString(e){let t={type:\"function\"},r=(e=K(e,t)).split(\" returns \");r.length>2&&N.throwArgumentError(\"invalid function string\",\"value\",e);let o=r[0].match(re);if(o||N.throwArgumentError(\"invalid function signature\",\"value\",e),t.name=o[1].trim(),t.name&&te(t.name),t.inputs=V(o[2],!1),Q(o[3].trim(),t),r.length>1){let o=r[1].match(re);\"\"==o[1].trim()&&\"\"==o[3].trim()||N.throwArgumentError(\"unexpected tokens\",\"value\",e),t.outputs=V(o[2],!1)}else t.outputs=[];return W.fromObject(t)}static isFunctionFragment(e){return e&&e._isFragment&&\"function\"===e.type}}function $(e){return e.match(/^uint($|[^1-9])/)?e=\"uint256\"+e.substring(4):e.match(/^int($|[^1-9])/)&&(e=\"int256\"+e.substring(3)),e}const ee=new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");function te(e){return e&&e.match(ee)||N.throwArgumentError(`invalid identifier \"${e}\"`,\"value\",e),e}const re=new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");const oe=new u.b(d),ne=new RegExp(/^bytes([0-9]*)$/),ae=new RegExp(/^(u?int)([0-9]*)$/);class ie{constructor(e){oe.checkNew(new.target,ie),Object(c.d)(this,\"coerceFunc\",e||null)}_getCoder(e){switch(e.baseType){case\"address\":return new A(e.name);case\"bool\":return new k(e.name);case\"string\":return new R(e.name);case\"bytes\":return new J(e.name);case\"array\":return new C(this._getCoder(e.arrayChildren),e.arrayLength,e.name);case\"tuple\":return new D((e.components||[]).map((e=>this._getCoder(e))),e.name);case\"\":return new L(e.name)}let t=e.type.match(ae);if(t){let r=parseInt(t[2]||\"256\");return(0===r||r>256||r%8!==0)&&oe.throwArgumentError(\"invalid \"+t[1]+\" bit length\",\"param\",e),new P(r/8,\"int\"===t[1],e.name)}if(t=e.type.match(ne),t){let r=parseInt(t[1]);return(0===r||r>32)&&oe.throwArgumentError(\"invalid bytes length\",\"param\",e),new B(r,e.name)}return oe.throwArgumentError(\"invalid type\",\"type\",e.type)}_getWordSize(){return 32}_getReader(e,t){return new m(e,this._getWordSize(),this.coerceFunc,t)}_getWriter(){return new f(this._getWordSize())}getDefaultValue(e){const t=e.map((e=>this._getCoder(x.from(e))));return new D(t,\"_\").defaultValue()}encode(e,t){e.length!==t.length&&oe.throwError(\"types/values length mismatch\",u.b.errors.INVALID_ARGUMENT,{count:{types:e.length,values:t.length},value:{types:e,values:t}});const r=e.map((e=>this._getCoder(x.from(e)))),o=new D(r,\"_\"),n=this._getWriter();return o.encode(n,t),n.data}decode(e,t,r){const o=e.map((e=>this._getCoder(x.from(e))));return new D(o,\"_\").decode(this._getReader(Object(s.a)(t),r))}}const se=new ie,le=new u.b(d);class ce extends c.a{}class ue extends c.a{}class de extends c.a{static isIndexed(e){return!(!e||!e._isIndexed)}}function he(e,t){const r=new Error(`deferred error during ABI decoding triggered accessing ${e}`);return r.error=t,r}class ge{constructor(e){le.checkNew(new.target,ge);let t=[];t=\"string\"===typeof e?JSON.parse(e):e,Object(c.d)(this,\"fragments\",t.map((e=>z.from(e))).filter((e=>null!=e))),Object(c.d)(this,\"_abiCoder\",Object(c.e)(new.target,\"getAbiCoder\")()),Object(c.d)(this,\"functions\",{}),Object(c.d)(this,\"errors\",{}),Object(c.d)(this,\"events\",{}),Object(c.d)(this,\"structs\",{}),this.fragments.forEach((e=>{let t=null;switch(e.type){case\"constructor\":return this.deploy?void le.warn(\"duplicate definition - constructor\"):void Object(c.d)(this,\"deploy\",e);case\"function\":t=this.functions;break;case\"event\":t=this.events;break;default:return}let r=e.format();t[r]?le.warn(\"duplicate definition - \"+r):t[r]=e})),this.deploy||Object(c.d)(this,\"deploy\",q.from({payable:!1,type:\"constructor\"})),Object(c.d)(this,\"_isInterface\",!0)}format(e){e||(e=G.full),e===G.sighash&&le.throwArgumentError(\"interface does not support formatting sighash\",\"format\",e);const t=this.fragments.map((t=>t.format(e)));return e===G.json?JSON.stringify(t.map((e=>JSON.parse(e)))):t}static getAbiCoder(){return se}static getAddress(e){return Object(b.a)(e)}static getSighash(e){return Object(s.e)(Object(v.a)(e.format()),0,4)}static getEventTopic(e){return Object(v.a)(e.format())}getFunction(e){if(Object(s.l)(e)){for(const t in this.functions)if(e===this.getSighash(t))return this.functions[t];le.throwArgumentError(\"no matching function\",\"sighash\",e)}if(-1===e.indexOf(\"(\")){const t=e.trim(),r=Object.keys(this.functions).filter((e=>e.split(\"(\")[0]===t));return 0===r.length?le.throwArgumentError(\"no matching function\",\"name\",t):r.length>1&&le.throwArgumentError(\"multiple matching functions\",\"name\",t),this.functions[r[0]]}const t=this.functions[W.fromString(e).format()];return t||le.throwArgumentError(\"no matching function\",\"signature\",e),t}getEvent(e){if(Object(s.l)(e)){const t=e.toLowerCase();for(const e in this.events)if(t===this.getEventTopic(e))return this.events[e];le.throwArgumentError(\"no matching event\",\"topichash\",t)}if(-1===e.indexOf(\"(\")){const t=e.trim(),r=Object.keys(this.events).filter((e=>e.split(\"(\")[0]===t));return 0===r.length?le.throwArgumentError(\"no matching event\",\"name\",t):r.length>1&&le.throwArgumentError(\"multiple matching events\",\"name\",t),this.events[r[0]]}const t=this.events[Z.fromString(e).format()];return t||le.throwArgumentError(\"no matching event\",\"signature\",e),t}getSighash(e){return\"string\"===typeof e&&(e=this.getFunction(e)),Object(c.e)(this.constructor,\"getSighash\")(e)}getEventTopic(e){return\"string\"===typeof e&&(e=this.getEvent(e)),Object(c.e)(this.constructor,\"getEventTopic\")(e)}_decodeParams(e,t){return this._abiCoder.decode(e,t)}_encodeParams(e,t){return this._abiCoder.encode(e,t)}encodeDeploy(e){return this._encodeParams(this.deploy.inputs,e||[])}decodeFunctionData(e,t){\"string\"===typeof e&&(e=this.getFunction(e));const r=Object(s.a)(t);return Object(s.i)(r.slice(0,4))!==this.getSighash(e)&&le.throwArgumentError(`data signature does not match function ${e.name}.`,\"data\",Object(s.i)(r)),this._decodeParams(e.inputs,r.slice(4))}encodeFunctionData(e,t){return\"string\"===typeof e&&(e=this.getFunction(e)),Object(s.i)(Object(s.b)([this.getSighash(e),this._encodeParams(e.inputs,t||[])]))}decodeFunctionResult(e,t){\"string\"===typeof e&&(e=this.getFunction(e));let r=Object(s.a)(t),o=null,n=null;switch(r.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(e.outputs,r)}catch(a){}break;case 4:\"0x08c379a0\"===Object(s.i)(r.slice(0,4))&&(n=\"Error(string)\",o=this._abiCoder.decode([\"string\"],r.slice(4))[0])}return le.throwError(\"call revert exception\",u.b.errors.CALL_EXCEPTION,{method:e.format(),errorSignature:n,errorArgs:[o],reason:o})}encodeFunctionResult(e,t){return\"string\"===typeof e&&(e=this.getFunction(e)),Object(s.i)(this._abiCoder.encode(e.outputs,t||[]))}encodeFilterTopics(e,t){\"string\"===typeof e&&(e=this.getEvent(e)),t.length>e.inputs.length&&le.throwError(\"too many arguments for \"+e.format(),u.b.errors.UNEXPECTED_ARGUMENT,{argument:\"values\",value:t});let r=[];e.anonymous||r.push(this.getEventTopic(e));const o=(e,t)=>\"string\"===e.type?Object(v.a)(t):\"bytes\"===e.type?Object(T.a)(Object(s.i)(t)):(\"address\"===e.type&&this._abiCoder.encode([\"address\"],[t]),Object(s.h)(Object(s.i)(t),32));for(t.forEach(((t,n)=>{let a=e.inputs[n];a.indexed?null==t?r.push(null):\"array\"===a.baseType||\"tuple\"===a.baseType?le.throwArgumentError(\"filtering with tuples or arrays not supported\",\"contract.\"+a.name,t):Array.isArray(t)?r.push(t.map((e=>o(a,e)))):r.push(o(a,t)):null!=t&&le.throwArgumentError(\"cannot filter non-indexed parameters; must be null\",\"contract.\"+a.name,t)}));r.length&&null===r[r.length-1];)r.pop();return r}encodeEventLog(e,t){\"string\"===typeof e&&(e=this.getEvent(e));const r=[],o=[],n=[];return e.anonymous||r.push(this.getEventTopic(e)),t.length!==e.inputs.length&&le.throwArgumentError(\"event arguments/values mismatch\",\"values\",t),e.inputs.forEach(((e,a)=>{const i=t[a];if(e.indexed)if(\"string\"===e.type)r.push(Object(v.a)(i));else if(\"bytes\"===e.type)r.push(Object(T.a)(i));else{if(\"tuple\"===e.baseType||\"array\"===e.baseType)throw new Error(\"not implemented\");r.push(this._abiCoder.encode([e.type],[i]))}else o.push(e),n.push(i)})),{data:this._abiCoder.encode(o,n),topics:r}}decodeEventLog(e,t,r){if(\"string\"===typeof e&&(e=this.getEvent(e)),null!=r&&!e.anonymous){let t=this.getEventTopic(e);Object(s.l)(r[0],32)&&r[0].toLowerCase()===t||le.throwError(\"fragment/topic mismatch\",u.b.errors.INVALID_ARGUMENT,{argument:\"topics[0]\",expected:t,value:r[0]}),r=r.slice(1)}let o=[],n=[],a=[];e.inputs.forEach(((e,t)=>{e.indexed?\"string\"===e.type||\"bytes\"===e.type||\"tuple\"===e.baseType||\"array\"===e.baseType?(o.push(x.fromObject({type:\"bytes32\",name:e.name})),a.push(!0)):(o.push(e),a.push(!1)):(n.push(e),a.push(!1))}));let i=null!=r?this._abiCoder.decode(o,Object(s.b)(r)):null,l=this._abiCoder.decode(n,t,!0),c=[],d=0,h=0;e.inputs.forEach(((e,t)=>{if(e.indexed)if(null==i)c[t]=new de({_isIndexed:!0,hash:null});else if(a[t])c[t]=new de({_isIndexed:!0,hash:i[h++]});else try{c[t]=i[h++]}catch(r){c[t]=r}else try{c[t]=l[d++]}catch(r){c[t]=r}if(e.name&&null==c[e.name]){const r=c[t];r instanceof Error?Object.defineProperty(c,e.name,{get:()=>{throw he(`property ${JSON.stringify(e.name)}`,r)}}):c[e.name]=r}}));for(let s=0;s<c.length;s++){const e=c[s];e instanceof Error&&Object.defineProperty(c,s,{get:()=>{throw he(`index ${s}`,e)}})}return Object.freeze(c)}parseTransaction(e){let t=this.getFunction(e.data.substring(0,10).toLowerCase());return t?new ue({args:this._abiCoder.decode(t.inputs,\"0x\"+e.data.substring(10)),functionFragment:t,name:t.name,signature:t.format(),sighash:this.getSighash(t),value:l.a.from(e.value||\"0\")}):null}parseLog(e){let t=this.getEvent(e.topics[0]);return!t||t.anonymous?null:new ce({eventFragment:t,name:t.name,signature:t.format(),topic:this.getEventTopic(t),args:this.decodeEventLog(t,e.data,e.topics)})}static isInterface(e){return!(!e||!e._isInterface)}}const pe=new u.b(\"abstract-provider/5.1.0\");class fe extends c.a{static isForkEvent(e){return!(!e||!e._isForkEvent)}}class me{constructor(){pe.checkAbstract(new.target,me),Object(c.d)(this,\"_isProvider\",!0)}addListener(e,t){return this.on(e,t)}removeListener(e,t){return this.off(e,t)}static isProvider(e){return!(!e||!e._isProvider)}}var be=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const ve=new u.b(\"abstract-signer/5.1.0\"),Te=[\"accessList\",\"chainId\",\"data\",\"from\",\"gasLimit\",\"gasPrice\",\"nonce\",\"to\",\"type\",\"value\"],Ae=[u.b.errors.INSUFFICIENT_FUNDS,u.b.errors.NONCE_EXPIRED,u.b.errors.REPLACEMENT_UNDERPRICED];class ye{constructor(){ve.checkAbstract(new.target,ye),Object(c.d)(this,\"_isSigner\",!0)}getBalance(e){return be(this,void 0,void 0,(function*(){return this._checkProvider(\"getBalance\"),yield this.provider.getBalance(this.getAddress(),e)}))}getTransactionCount(e){return be(this,void 0,void 0,(function*(){return this._checkProvider(\"getTransactionCount\"),yield this.provider.getTransactionCount(this.getAddress(),e)}))}estimateGas(e){return be(this,void 0,void 0,(function*(){this._checkProvider(\"estimateGas\");const t=yield Object(c.f)(this.checkTransaction(e));return yield this.provider.estimateGas(t)}))}call(e,t){return be(this,void 0,void 0,(function*(){this._checkProvider(\"call\");const r=yield Object(c.f)(this.checkTransaction(e));return yield this.provider.call(r,t)}))}sendTransaction(e){return this._checkProvider(\"sendTransaction\"),this.populateTransaction(e).then((e=>this.signTransaction(e).then((e=>this.provider.sendTransaction(e)))))}getChainId(){return be(this,void 0,void 0,(function*(){this._checkProvider(\"getChainId\");return(yield this.provider.getNetwork()).chainId}))}getGasPrice(){return be(this,void 0,void 0,(function*(){return this._checkProvider(\"getGasPrice\"),yield this.provider.getGasPrice()}))}resolveName(e){return be(this,void 0,void 0,(function*(){return this._checkProvider(\"resolveName\"),yield this.provider.resolveName(e)}))}checkTransaction(e){for(const r in e)-1===Te.indexOf(r)&&ve.throwArgumentError(\"invalid transaction key: \"+r,\"transaction\",e);const t=Object(c.g)(e);return null==t.from?t.from=this.getAddress():t.from=Promise.all([Promise.resolve(t.from),this.getAddress()]).then((t=>(t[0].toLowerCase()!==t[1].toLowerCase()&&ve.throwArgumentError(\"from address mismatch\",\"transaction\",e),t[0]))),t}populateTransaction(e){return be(this,void 0,void 0,(function*(){const t=yield Object(c.f)(this.checkTransaction(e));return null!=t.to&&(t.to=Promise.resolve(t.to).then((e=>be(this,void 0,void 0,(function*(){if(null==e)return null;const t=yield this.resolveName(e);return null==t&&ve.throwArgumentError(\"provided ENS name resolves to null\",\"tx.to\",e),t}))))),null==t.gasPrice&&(t.gasPrice=this.getGasPrice()),null==t.nonce&&(t.nonce=this.getTransactionCount(\"pending\")),null==t.gasLimit&&(t.gasLimit=this.estimateGas(t).catch((e=>{if(Ae.indexOf(e.code)>=0)throw e;return ve.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\",u.b.errors.UNPREDICTABLE_GAS_LIMIT,{error:e,tx:t})}))),null==t.chainId?t.chainId=this.getChainId():t.chainId=Promise.all([Promise.resolve(t.chainId),this.getChainId()]).then((t=>(0!==t[1]&&t[0]!==t[1]&&ve.throwArgumentError(\"chainId address mismatch\",\"transaction\",e),t[0]))),yield Object(c.f)(t)}))}_checkProvider(e){this.provider||ve.throwError(\"missing provider\",u.b.errors.UNSUPPORTED_OPERATION,{operation:e||\"_checkProvider\"})}static isSigner(e){return!(!e||!e._isSigner)}}class Se extends ye{constructor(e,t){ve.checkNew(new.target,Se),super(),Object(c.d)(this,\"address\",e),Object(c.d)(this,\"provider\",t||null)}getAddress(){return Promise.resolve(this.address)}_fail(e,t){return Promise.resolve().then((()=>{ve.throwError(e,u.b.errors.UNSUPPORTED_OPERATION,{operation:t})}))}signMessage(e){return this._fail(\"VoidSigner cannot sign messages\",\"signMessage\")}signTransaction(e){return this._fail(\"VoidSigner cannot sign transactions\",\"signTransaction\")}_signTypedData(e,t,r){return this._fail(\"VoidSigner cannot sign typed data\",\"signTypedData\")}connect(e){return new Se(this.address,e)}}var Ee=r(\"WsP5\");var Oe=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const Ce=new u.b(\"contracts/5.1.0\"),ke={chainId:!0,data:!0,from:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0};function Fe(e,t){return Oe(this,void 0,void 0,(function*(){const r=yield t;try{return Object(b.a)(r)}catch(n){}e||Ce.throwError(\"a provider or signer is needed to resolve ENS names\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"resolveName\"});const o=yield e.resolveName(r);return null==o&&Ce.throwArgumentError(\"resolver or addr is not configured for ENS name\",\"name\",r),o}))}function Je(e,t,r){return Oe(this,void 0,void 0,(function*(){return Array.isArray(r)?yield Promise.all(r.map(((r,o)=>Je(e,Array.isArray(t)?t[o]:t[r.name],r)))):\"address\"===r.type?yield Fe(e,t):\"tuple\"===r.type?yield Je(e,t,r.components):\"array\"===r.baseType?Array.isArray(t)?yield Promise.all(t.map((t=>Je(e,t,r.arrayChildren)))):Promise.reject(new Error(\"invalid value for array\")):t}))}function Be(e,t,r){return Oe(this,void 0,void 0,(function*(){let o={};r.length===t.inputs.length+1&&\"object\"===typeof r[r.length-1]&&(o=Object(c.g)(r.pop())),Ce.checkArgumentCount(r.length,t.inputs.length,\"passed to contract\"),e.signer?o.from?o.from=Object(c.f)({override:Fe(e.signer,o.from),signer:e.signer.getAddress()}).then((e=>Oe(this,void 0,void 0,(function*(){return Object(b.a)(e.signer)!==e.override&&Ce.throwError(\"Contract with a Signer cannot override from\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"overrides.from\"}),e.override})))):o.from=e.signer.getAddress():o.from&&(o.from=Fe(e.provider,o.from));const n=yield Object(c.f)({args:Je(e.signer||e.provider,r,t.inputs),address:e.resolvedAddress,overrides:Object(c.f)(o)||{}}),a=e.interface.encodeFunctionData(t,n.args),i={data:a,to:n.address},d=n.overrides;if(null!=d.nonce&&(i.nonce=l.a.from(d.nonce).toNumber()),null!=d.gasLimit&&(i.gasLimit=l.a.from(d.gasLimit)),null!=d.gasPrice&&(i.gasPrice=l.a.from(d.gasPrice)),null!=d.from&&(i.from=d.from),null!=d.type&&(i.type=d.type),null!=d.accessList&&(i.accessList=Object(Ee.accessListify)(d.accessList)),null==i.gasLimit&&null!=t.gas){let e=21e3;const r=Object(s.a)(a);for(let t=0;t<r.length;t++)e+=4,r[t]&&(e+=64);i.gasLimit=l.a.from(t.gas).add(e)}if(d.value){const e=l.a.from(d.value);e.isZero()||t.payable||Ce.throwError(\"non-payable method cannot override value\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"overrides.value\",value:o.value}),i.value=e}delete o.nonce,delete o.gasLimit,delete o.gasPrice,delete o.from,delete o.value,delete o.type,delete o.accessList;const h=Object.keys(o).filter((e=>null!=o[e]));return h.length&&Ce.throwError(`cannot override ${h.map((e=>JSON.stringify(e))).join(\",\")}`,u.b.errors.UNSUPPORTED_OPERATION,{operation:\"overrides\",overrides:h}),i}))}function Le(e,t,r){const o=e.signer||e.provider;return function(...n){return Oe(this,void 0,void 0,(function*(){let a;if(n.length===t.inputs.length+1&&\"object\"===typeof n[n.length-1]){const e=Object(c.g)(n.pop());null!=e.blockTag&&(a=yield e.blockTag),delete e.blockTag,n.push(e)}null!=e.deployTransaction&&(yield e._deployed(a));const i=yield Be(e,t,n),s=yield o.call(i,a);try{let o=e.interface.decodeFunctionResult(t,s);return r&&1===t.outputs.length&&(o=o[0]),o}catch(l){throw l.code===u.b.errors.CALL_EXCEPTION&&(l.address=e.address,l.args=n,l.transaction=i),l}}))}}function we(e,t,r){return t.constant?Le(e,t,r):function(e,t){return function(...r){return Oe(this,void 0,void 0,(function*(){e.signer||Ce.throwError(\"sending a transaction requires a signer\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"sendTransaction\"}),null!=e.deployTransaction&&(yield e._deployed());const o=yield Be(e,t,r),n=yield e.signer.sendTransaction(o),a=n.wait.bind(n);return n.wait=t=>a(t).then((t=>(t.events=t.logs.map((r=>{let o=Object(c.c)(r),n=null;try{n=e.interface.parseLog(r)}catch(a){}return n&&(o.args=n.args,o.decode=(t,r)=>e.interface.decodeEventLog(n.eventFragment,t,r),o.event=n.name,o.eventSignature=n.signature),o.removeListener=()=>e.provider,o.getBlock=()=>e.provider.getBlock(t.blockHash),o.getTransaction=()=>e.provider.getTransaction(t.transactionHash),o.getTransactionReceipt=()=>Promise.resolve(t),o})),t))),n}))}}(e,t)}function Pe(e){return!e.address||null!=e.topics&&0!==e.topics.length?(e.address||\"*\")+\"@\"+(e.topics?e.topics.map((e=>Array.isArray(e)?e.join(\"|\"):e)).join(\":\"):\"\"):\"*\"}class Me{constructor(e,t){Object(c.d)(this,\"tag\",e),Object(c.d)(this,\"filter\",t),this._listeners=[]}addListener(e,t){this._listeners.push({listener:e,once:t})}removeListener(e){let t=!1;this._listeners=this._listeners.filter((r=>!(!t&&r.listener===e)||(t=!0,!1)))}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map((e=>e.listener))}listenerCount(){return this._listeners.length}run(e){const t=this.listenerCount();return this._listeners=this._listeners.filter((t=>{const r=e.slice();return setTimeout((()=>{t.listener.apply(this,r)}),0),!t.once})),t}prepareEvent(e){}getEmit(e){return[e]}}class Re extends Me{constructor(){super(\"error\",null)}}class De extends Me{constructor(e,t,r,o){const n={address:e};let a=t.getEventTopic(r);o?(a!==o[0]&&Ce.throwArgumentError(\"topic mismatch\",\"topics\",o),n.topics=o.slice()):n.topics=[a],super(Pe(n),n),Object(c.d)(this,\"address\",e),Object(c.d)(this,\"interface\",t),Object(c.d)(this,\"fragment\",r)}prepareEvent(e){super.prepareEvent(e),e.event=this.fragment.name,e.eventSignature=this.fragment.format(),e.decode=(e,t)=>this.interface.decodeEventLog(this.fragment,e,t);try{e.args=this.interface.decodeEventLog(this.fragment,e.data,e.topics)}catch(t){e.args=null,e.decodeError=t}}getEmit(e){const t=g(e.args);if(t.length)throw t[0].error;const r=(e.args||[]).slice();return r.push(e),r}}class Ne extends Me{constructor(e,t){super(\"*\",{address:e}),Object(c.d)(this,\"address\",e),Object(c.d)(this,\"interface\",t)}prepareEvent(e){super.prepareEvent(e);try{const t=this.interface.parseLog(e);e.event=t.name,e.eventSignature=t.signature,e.decode=(e,r)=>this.interface.decodeEventLog(t.eventFragment,e,r),e.args=t.args}catch(t){}}}class je{constructor(e,t,r){Ce.checkNew(new.target,Xe),Object(c.d)(this,\"interface\",Object(c.e)(new.target,\"getInterface\")(t)),null==r?(Object(c.d)(this,\"provider\",null),Object(c.d)(this,\"signer\",null)):ye.isSigner(r)?(Object(c.d)(this,\"provider\",r.provider||null),Object(c.d)(this,\"signer\",r)):me.isProvider(r)?(Object(c.d)(this,\"provider\",r),Object(c.d)(this,\"signer\",null)):Ce.throwArgumentError(\"invalid signer or provider\",\"signerOrProvider\",r),Object(c.d)(this,\"callStatic\",{}),Object(c.d)(this,\"estimateGas\",{}),Object(c.d)(this,\"functions\",{}),Object(c.d)(this,\"populateTransaction\",{}),Object(c.d)(this,\"filters\",{});{const e={};Object.keys(this.interface.events).forEach((t=>{const r=this.interface.events[t];Object(c.d)(this.filters,t,((...e)=>({address:this.address,topics:this.interface.encodeFilterTopics(r,e)}))),e[r.name]||(e[r.name]=[]),e[r.name].push(t)})),Object.keys(e).forEach((t=>{const r=e[t];1===r.length?Object(c.d)(this.filters,t,this.filters[r[0]]):Ce.warn(`Duplicate definition of ${t} (${r.join(\", \")})`)}))}if(Object(c.d)(this,\"_runningEvents\",{}),Object(c.d)(this,\"_wrappedEmits\",{}),null==e&&Ce.throwArgumentError(\"invalid contract address or ENS name\",\"addressOrName\",e),Object(c.d)(this,\"address\",e),this.provider)Object(c.d)(this,\"resolvedAddress\",Fe(this.provider,e));else try{Object(c.d)(this,\"resolvedAddress\",Promise.resolve(Object(b.a)(e)))}catch(a){Ce.throwError(\"provider is required to use ENS name as contract address\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"new Contract\"})}const o={},n={};Object.keys(this.interface.functions).forEach((e=>{const t=this.interface.functions[e];if(n[e])Ce.warn(`Duplicate ABI entry for ${JSON.stringify(name)}`);else{n[e]=!0;{const r=t.name;o[r]||(o[r]=[]),o[r].push(e)}null==this[e]&&Object(c.d)(this,e,we(this,t,!0)),null==this.functions[e]&&Object(c.d)(this.functions,e,we(this,t,!1)),null==this.callStatic[e]&&Object(c.d)(this.callStatic,e,Le(this,t,!0)),null==this.populateTransaction[e]&&Object(c.d)(this.populateTransaction,e,function(e,t){return function(...r){return Be(e,t,r)}}(this,t)),null==this.estimateGas[e]&&Object(c.d)(this.estimateGas,e,function(e,t){const r=e.signer||e.provider;return function(...o){return Oe(this,void 0,void 0,(function*(){r||Ce.throwError(\"estimate require a provider or signer\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"estimateGas\"});const n=yield Be(e,t,o);return yield r.estimateGas(n)}))}}(this,t))}})),Object.keys(o).forEach((e=>{const t=o[e];if(t.length>1)return;const r=t[0];try{null==this[e]&&Object(c.d)(this,e,this[r])}catch(n){}null==this.functions[e]&&Object(c.d)(this.functions,e,this.functions[r]),null==this.callStatic[e]&&Object(c.d)(this.callStatic,e,this.callStatic[r]),null==this.populateTransaction[e]&&Object(c.d)(this.populateTransaction,e,this.populateTransaction[r]),null==this.estimateGas[e]&&Object(c.d)(this.estimateGas,e,this.estimateGas[r])}))}static getContractAddress(e){return Object(b.b)(e)}static getInterface(e){return ge.isInterface(e)?e:new ge(e)}deployed(){return this._deployed()}_deployed(e){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then((()=>this)):this._deployedPromise=this.provider.getCode(this.address,e).then((e=>(\"0x\"===e&&Ce.throwError(\"contract not deployed\",u.b.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:\"getDeployed\"}),this)))),this._deployedPromise}fallback(e){this.signer||Ce.throwError(\"sending a transactions require a signer\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"sendTransaction(fallback)\"});const t=Object(c.g)(e||{});return[\"from\",\"to\"].forEach((function(e){null!=t[e]&&Ce.throwError(\"cannot override \"+e,u.b.errors.UNSUPPORTED_OPERATION,{operation:e})})),t.to=this.resolvedAddress,this.deployed().then((()=>this.signer.sendTransaction(t)))}connect(e){\"string\"===typeof e&&(e=new Se(e,this.provider));const t=new this.constructor(this.address,this.interface,e);return this.deployTransaction&&Object(c.d)(t,\"deployTransaction\",this.deployTransaction),t}attach(e){return new this.constructor(e,this.interface,this.signer||this.provider)}static isIndexed(e){return de.isIndexed(e)}_normalizeRunningEvent(e){return this._runningEvents[e.tag]?this._runningEvents[e.tag]:e}_getRunningEvent(e){if(\"string\"===typeof e){if(\"error\"===e)return this._normalizeRunningEvent(new Re);if(\"event\"===e)return this._normalizeRunningEvent(new Me(\"event\",null));if(\"*\"===e)return this._normalizeRunningEvent(new Ne(this.address,this.interface));const t=this.interface.getEvent(e);return this._normalizeRunningEvent(new De(this.address,this.interface,t))}if(e.topics&&e.topics.length>0){try{const t=e.topics[0];if(\"string\"!==typeof t)throw new Error(\"invalid topic\");const r=this.interface.getEvent(t);return this._normalizeRunningEvent(new De(this.address,this.interface,r,e.topics))}catch(t){}const r={address:this.address,topics:e.topics};return this._normalizeRunningEvent(new Me(Pe(r),r))}return this._normalizeRunningEvent(new Ne(this.address,this.interface))}_checkRunningEvents(e){if(0===e.listenerCount()){delete this._runningEvents[e.tag];const t=this._wrappedEmits[e.tag];t&&(this.provider.off(e.filter,t),delete this._wrappedEmits[e.tag])}}_wrapEvent(e,t,r){const o=Object(c.c)(t);return o.removeListener=()=>{r&&(e.removeListener(r),this._checkRunningEvents(e))},o.getBlock=()=>this.provider.getBlock(t.blockHash),o.getTransaction=()=>this.provider.getTransaction(t.transactionHash),o.getTransactionReceipt=()=>this.provider.getTransactionReceipt(t.transactionHash),e.prepareEvent(o),o}_addEventListener(e,t,r){if(this.provider||Ce.throwError(\"events require a provider or a signer with a provider\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"once\"}),e.addListener(t,r),this._runningEvents[e.tag]=e,!this._wrappedEmits[e.tag]){const r=r=>{let o=this._wrapEvent(e,r,t);if(null==o.decodeError)try{const t=e.getEmit(o);this.emit(e.filter,...t)}catch(n){o.decodeError=n.error}null!=e.filter&&this.emit(\"event\",o),null!=o.decodeError&&this.emit(\"error\",o.decodeError,o)};this._wrappedEmits[e.tag]=r,null!=e.filter&&this.provider.on(e.filter,r)}}queryFilter(e,t,r){const o=this._getRunningEvent(e),n=Object(c.g)(o.filter);return\"string\"===typeof t&&Object(s.l)(t,32)?(null!=r&&Ce.throwArgumentError(\"cannot specify toBlock with blockhash\",\"toBlock\",r),n.blockHash=t):(n.fromBlock=null!=t?t:0,n.toBlock=null!=r?r:\"latest\"),this.provider.getLogs(n).then((e=>e.map((e=>this._wrapEvent(o,e,null)))))}on(e,t){return this._addEventListener(this._getRunningEvent(e),t,!1),this}once(e,t){return this._addEventListener(this._getRunningEvent(e),t,!0),this}emit(e,...t){if(!this.provider)return!1;const r=this._getRunningEvent(e),o=r.run(t)>0;return this._checkRunningEvents(r),o}listenerCount(e){return this.provider?null==e?Object.keys(this._runningEvents).reduce(((e,t)=>e+this._runningEvents[t].listenerCount()),0):this._getRunningEvent(e).listenerCount():0}listeners(e){if(!this.provider)return[];if(null==e){const e=[];for(let t in this._runningEvents)this._runningEvents[t].listeners().forEach((t=>{e.push(t)}));return e}return this._getRunningEvent(e).listeners()}removeAllListeners(e){if(!this.provider)return this;if(null==e){for(const e in this._runningEvents){const t=this._runningEvents[e];t.removeAllListeners(),this._checkRunningEvents(t)}return this}const t=this._getRunningEvent(e);return t.removeAllListeners(),this._checkRunningEvents(t),this}off(e,t){if(!this.provider)return this;const r=this._getRunningEvent(e);return r.removeListener(t),this._checkRunningEvents(r),this}removeListener(e,t){return this.off(e,t)}}class Xe extends je{}class Ie{constructor(e,t,r){let o=null;o=\"string\"===typeof t?t:Object(s.j)(t)?Object(s.i)(t):t&&\"string\"===typeof t.object?t.object:\"!\",\"0x\"!==o.substring(0,2)&&(o=\"0x\"+o),(!Object(s.l)(o)||o.length%2)&&Ce.throwArgumentError(\"invalid bytecode\",\"bytecode\",t),r&&!ye.isSigner(r)&&Ce.throwArgumentError(\"invalid signer\",\"signer\",r),Object(c.d)(this,\"bytecode\",o),Object(c.d)(this,\"interface\",Object(c.e)(new.target,\"getInterface\")(e)),Object(c.d)(this,\"signer\",r||null)}getDeployTransaction(...e){let t={};if(e.length===this.interface.deploy.inputs.length+1&&\"object\"===typeof e[e.length-1]){t=Object(c.g)(e.pop());for(const e in t)if(!ke[e])throw new Error(\"unknown transaction override \"+e)}return[\"data\",\"from\",\"to\"].forEach((e=>{null!=t[e]&&Ce.throwError(\"cannot override \"+e,u.b.errors.UNSUPPORTED_OPERATION,{operation:e})})),Ce.checkArgumentCount(e.length,this.interface.deploy.inputs.length,\" in Contract constructor\"),t.data=Object(s.i)(Object(s.b)([this.bytecode,this.interface.encodeDeploy(e)])),t}deploy(...e){return Oe(this,void 0,void 0,(function*(){let t={};e.length===this.interface.deploy.inputs.length+1&&(t=e.pop()),Ce.checkArgumentCount(e.length,this.interface.deploy.inputs.length,\" in Contract constructor\");const r=yield Je(this.signer,e,this.interface.deploy.inputs);r.push(t);const o=this.getDeployTransaction(...r),n=yield this.signer.sendTransaction(o),a=Object(c.e)(this.constructor,\"getContractAddress\")(n),i=Object(c.e)(this.constructor,\"getContract\")(a,this.interface,this.signer);return Object(c.d)(i,\"deployTransaction\",n),i}))}attach(e){return this.constructor.getContract(e,this.interface,this.signer)}connect(e){return new this.constructor(this.interface,this.bytecode,e)}static fromSolidity(e,t){null==e&&Ce.throwError(\"missing compiler output\",u.b.errors.MISSING_ARGUMENT,{argument:\"compilerOutput\"}),\"string\"===typeof e&&(e=JSON.parse(e));const r=e.abi;let o=null;return e.bytecode?o=e.bytecode:e.evm&&e.evm.bytecode&&(o=e.evm.bytecode),new this(r,o,t)}static getInterface(e){return Xe.getInterface(e)}static getContractAddress(e){return Object(b.b)(e)}static getContract(e,t,r){return new Xe(e,t,r)}}var He=r(\"qWAS\");const _e=new u.b(He.a),Ge={},Ue=l.a.from(0),xe=l.a.from(-1);function Ve(e,t,r,o){const n={fault:t,operation:r};return void 0!==o&&(n.value=o),_e.throwError(e,u.b.errors.NUMERIC_FAULT,n)}let ze=\"0\";for(;ze.length<256;)ze+=ze;function Ze(e){if(\"number\"!==typeof e)try{e=l.a.from(e).toNumber()}catch(t){}return\"number\"===typeof e&&e>=0&&e<=256&&!(e%1)?\"1\"+ze.substring(0,e):_e.throwArgumentError(\"invalid decimal size\",\"decimals\",e)}function Ke(e,t){null==t&&(t=0);const r=Ze(t),o=(e=l.a.from(e)).lt(Ue);o&&(e=e.mul(xe));let n=e.mod(r).toString();for(;n.length<r.length-1;)n=\"0\"+n;n=n.match(/^([0-9]*[1-9]|0)(0*)/)[1];const a=e.div(r).toString();return e=a+\".\"+n,o&&(e=\"-\"+e),e}function Qe(e,t){null==t&&(t=0);const r=Ze(t);if(\"string\"===typeof e&&e.match(/^-?[0-9.,]+$/)||_e.throwArgumentError(\"invalid decimal value\",\"value\",e),r.length-1===0)return l.a.from(e);const o=\"-\"===e.substring(0,1);o&&(e=e.substring(1)),\".\"===e&&_e.throwArgumentError(\"missing value\",\"value\",e);const n=e.split(\".\");n.length>2&&_e.throwArgumentError(\"too many decimal points\",\"value\",e);let a=n[0],i=n[1];for(a||(a=\"0\"),i||(i=\"0\"),i.length>r.length-1&&Ve(\"fractional component exceeds decimals\",\"underflow\",\"parseFixed\");i.length<r.length-1;)i+=\"0\";const s=l.a.from(a),c=l.a.from(i);let u=s.mul(r).add(c);return o&&(u=u.mul(xe)),u}class Ye{constructor(e,t,r,o){e!==Ge&&_e.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"}),this.signed=t,this.width=r,this.decimals=o,this.name=(t?\"\":\"u\")+\"fixed\"+String(r)+\"x\"+String(o),this._multiplier=Ze(o),Object.freeze(this)}static from(e){if(e instanceof Ye)return e;let t=!0,r=128,o=18;if(\"string\"===typeof e){if(\"fixed\"===e);else if(\"ufixed\"===e)t=!1;else if(null!=e){const n=e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);n||_e.throwArgumentError(\"invalid fixed format\",\"format\",e),t=\"u\"!==n[1],r=parseInt(n[2]),o=parseInt(n[3])}}else if(e){const n=(t,r,o)=>null==e[t]?o:(typeof e[t]!==r&&_e.throwArgumentError(\"invalid fixed format (\"+t+\" not \"+r+\")\",\"format.\"+t,e[t]),e[t]);t=n(\"signed\",\"boolean\",t),r=n(\"width\",\"number\",r),o=n(\"decimals\",\"number\",o)}return r%8&&_e.throwArgumentError(\"invalid fixed format width (not byte aligned)\",\"format.width\",r),o>80&&_e.throwArgumentError(\"invalid fixed format (decimals too large)\",\"format.decimals\",o),new Ye(Ge,t,r,o)}}class qe{constructor(e,t,r,o){_e.checkNew(new.target,qe),e!==Ge&&_e.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"}),this.format=o,this._hex=t,this._value=r,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(e){this.format.name!==e.format.name&&_e.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\",\"other\",e)}addUnsafe(e){this._checkFormat(e);const t=Qe(this._value,this.format.decimals),r=Qe(e._value,e.format.decimals);return qe.fromValue(t.add(r),this.format.decimals,this.format)}subUnsafe(e){this._checkFormat(e);const t=Qe(this._value,this.format.decimals),r=Qe(e._value,e.format.decimals);return qe.fromValue(t.sub(r),this.format.decimals,this.format)}mulUnsafe(e){this._checkFormat(e);const t=Qe(this._value,this.format.decimals),r=Qe(e._value,e.format.decimals);return qe.fromValue(t.mul(r).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(e){this._checkFormat(e);const t=Qe(this._value,this.format.decimals),r=Qe(e._value,e.format.decimals);return qe.fromValue(t.mul(this.format._multiplier).div(r),this.format.decimals,this.format)}floor(){let e=this.toString().split(\".\"),t=qe.from(e[0],this.format);const r=!e[1].match(/^(0*)$/);return this.isNegative()&&r&&(t=t.subUnsafe(We)),t}ceiling(){let e=this.toString().split(\".\"),t=qe.from(e[0],this.format);const r=!e[1].match(/^(0*)$/);return!this.isNegative()&&r&&(t=t.addUnsafe(We)),t}round(e){null==e&&(e=0);let t=this.toString().split(\".\");if((e<0||e>80||e%1)&&_e.throwArgumentError(\"invalid decimal count\",\"decimals\",e),t[1].length<=e)return this;const r=qe.from(\"1\"+ze.substring(0,e));return this.mulUnsafe(r).addUnsafe($e).floor().divUnsafe(r)}isZero(){return\"0.0\"===this._value}isNegative(){return\"-\"===this._value[0]}toString(){return this._value}toHexString(e){if(null==e)return this._hex;e%8&&_e.throwArgumentError(\"invalid byte width\",\"width\",e);const t=l.a.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();return Object(s.h)(t,e/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(e){return qe.fromString(this._value,e)}static fromValue(e,t,r){return null!=r||null==t||Object(l.d)(t)||(r=t,t=null),null==t&&(t=0),null==r&&(r=\"fixed\"),qe.fromString(Ke(e,t),Ye.from(r))}static fromString(e,t){null==t&&(t=\"fixed\");const r=Ye.from(t),o=Qe(e,r.decimals);!r.signed&&o.lt(Ue)&&Ve(\"unsigned value cannot be negative\",\"overflow\",\"value\",e);let n=null;r.signed?n=o.toTwos(r.width).toHexString():(n=o.toHexString(),n=Object(s.h)(n,r.width/8));const a=Ke(o,r.decimals);return new qe(Ge,n,a,r)}static fromBytes(e,t){null==t&&(t=\"fixed\");const r=Ye.from(t);if(Object(s.a)(e).length>r.width/8)throw new Error(\"overflow\");let o=l.a.from(e);r.signed&&(o=o.fromTwos(r.width));const n=o.toTwos((r.signed?0:1)+r.width).toHexString(),a=Ke(o,r.decimals);return new qe(Ge,n,a,r)}static from(e,t){if(\"string\"===typeof e)return qe.fromString(e,t);if(Object(s.j)(e))return qe.fromBytes(e,t);try{return qe.fromValue(e,0,t)}catch(r){if(r.code!==u.b.errors.INVALID_ARGUMENT)throw r}return _e.throwArgumentError(\"invalid FixedNumber value\",\"value\",e)}static isFixedNumber(e){return!(!e||!e._isFixedNumber)}}const We=qe.from(1),$e=qe.from(\"0.5\");function et(e){return\"string\"===typeof e&&(e=Object(M.f)(e)),Object(T.a)(Object(s.b)([Object(M.f)(\"\\x19Ethereum Signed Message:\\n\"),Object(M.f)(String(e.length)),e]))}const tt=\"hash/5.1.0\";var rt=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const ot=new u.b(tt),nt=new Uint8Array(32);nt.fill(0);const at=l.a.from(-1),it=l.a.from(0),st=l.a.from(1),lt=l.a.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");const ct=Object(s.h)(st.toHexString(),32),ut=Object(s.h)(it.toHexString(),32),dt={name:\"string\",version:\"string\",chainId:\"uint256\",verifyingContract:\"address\",salt:\"bytes32\"},ht=[\"name\",\"version\",\"chainId\",\"verifyingContract\",\"salt\"];function gt(e){return function(t){return\"string\"!==typeof t&&ot.throwArgumentError(`invalid domain value for ${JSON.stringify(e)}`,`domain.${e}`,t),t}}const pt={name:gt(\"name\"),version:gt(\"version\"),chainId:function(e){try{return l.a.from(e).toString()}catch(t){}return ot.throwArgumentError('invalid domain value for \"chainId\"',\"domain.chainId\",e)},verifyingContract:function(e){try{return Object(b.a)(e).toLowerCase()}catch(t){}return ot.throwArgumentError('invalid domain value \"verifyingContract\"',\"domain.verifyingContract\",e)},salt:function(e){try{const t=Object(s.a)(e);if(32!==t.length)throw new Error(\"bad length\");return Object(s.i)(t)}catch(t){}return ot.throwArgumentError('invalid domain value \"salt\"',\"domain.salt\",e)}};function ft(e){{const t=e.match(/^(u?)int(\\d*)$/);if(t){const r=\"\"===t[1],o=parseInt(t[2]||\"256\");(o%8!==0||o>256||t[2]&&t[2]!==String(o))&&ot.throwArgumentError(\"invalid numeric width\",\"type\",e);const n=lt.mask(r?o-1:o),a=r?n.add(st).mul(at):it;return function(t){const r=l.a.from(t);return(r.lt(a)||r.gt(n))&&ot.throwArgumentError(`value out-of-bounds for ${e}`,\"value\",t),Object(s.h)(r.toTwos(256).toHexString(),32)}}}{const t=e.match(/^bytes(\\d+)$/);if(t){const r=parseInt(t[1]);return(0===r||r>32||t[1]!==String(r))&&ot.throwArgumentError(\"invalid bytes width\",\"type\",e),function(t){return Object(s.a)(t).length!==r&&ot.throwArgumentError(`invalid length for ${e}`,\"value\",t),function(e){const t=Object(s.a)(e),r=t.length%32;return r?Object(s.c)([t,nt.slice(r)]):Object(s.i)(t)}(t)}}}switch(e){case\"address\":return function(e){return Object(s.h)(Object(b.a)(e),32)};case\"bool\":return function(e){return e?ct:ut};case\"bytes\":return function(e){return Object(T.a)(e)};case\"string\":return function(e){return Object(v.a)(e)}}return null}function mt(e,t){return`${e}(${t.map((({name:e,type:t})=>t+\" \"+e)).join(\",\")})`}class bt{constructor(e){Object(c.d)(this,\"types\",Object.freeze(Object(c.c)(e))),Object(c.d)(this,\"_encoderCache\",{}),Object(c.d)(this,\"_types\",{});const t={},r={},o={};Object.keys(e).forEach((e=>{t[e]={},r[e]=[],o[e]={}}));for(const a in e){const o={};e[a].forEach((n=>{o[n.name]&&ot.throwArgumentError(`duplicate variable name ${JSON.stringify(n.name)} in ${JSON.stringify(a)}`,\"types\",e),o[n.name]=!0;const i=n.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];i===a&&ot.throwArgumentError(`circular type reference to ${JSON.stringify(i)}`,\"types\",e);ft(i)||(r[i]||ot.throwArgumentError(`unknown type ${JSON.stringify(i)}`,\"types\",e),r[i].push(a),t[a][i]=!0)}))}const n=Object.keys(r).filter((e=>0===r[e].length));0===n.length?ot.throwArgumentError(\"missing primary type\",\"types\",e):n.length>1&&ot.throwArgumentError(`ambiguous primary types or unused types: ${n.map((e=>JSON.stringify(e))).join(\", \")}`,\"types\",e),Object(c.d)(this,\"primaryType\",n[0]),function n(a,i){i[a]&&ot.throwArgumentError(`circular type reference to ${JSON.stringify(a)}`,\"types\",e),i[a]=!0,Object.keys(t[a]).forEach((e=>{r[e]&&(n(e,i),Object.keys(i).forEach((t=>{o[t][e]=!0})))})),delete i[a]}(this.primaryType,{});for(const a in o){const t=Object.keys(o[a]);t.sort(),this._types[a]=mt(a,e[a])+t.map((t=>mt(t,e[t]))).join(\"\")}}getEncoder(e){let t=this._encoderCache[e];return t||(t=this._encoderCache[e]=this._getEncoder(e)),t}_getEncoder(e){{const t=ft(e);if(t)return t}const t=e.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);if(t){const e=t[1],r=this.getEncoder(e),o=parseInt(t[3]);return t=>{o>=0&&t.length!==o&&ot.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\",\"value\",t);let n=t.map(r);return this._types[e]&&(n=n.map(T.a)),Object(T.a)(Object(s.c)(n))}}const r=this.types[e];if(r){const t=Object(v.a)(this._types[e]);return e=>{const o=r.map((({name:t,type:r})=>{const o=this.getEncoder(r)(e[t]);return this._types[r]?Object(T.a)(o):o}));return o.unshift(t),Object(s.c)(o)}}return ot.throwArgumentError(`unknown type: ${e}`,\"type\",e)}encodeType(e){const t=this._types[e];return t||ot.throwArgumentError(`unknown type: ${JSON.stringify(e)}`,\"name\",e),t}encodeData(e,t){return this.getEncoder(e)(t)}hashStruct(e,t){return Object(T.a)(this.encodeData(e,t))}encode(e){return this.encodeData(this.primaryType,e)}hash(e){return this.hashStruct(this.primaryType,e)}_visit(e,t,r){if(ft(e))return r(e,t);const o=e.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);if(o){const e=o[1],n=parseInt(o[3]);return n>=0&&t.length!==n&&ot.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\",\"value\",t),t.map((t=>this._visit(e,t,r)))}const n=this.types[e];return n?n.reduce(((e,{name:o,type:n})=>(e[o]=this._visit(n,t[o],r),e)),{}):ot.throwArgumentError(`unknown type: ${e}`,\"type\",e)}visit(e,t){return this._visit(this.primaryType,e,t)}static from(e){return new bt(e)}static getPrimaryType(e){return bt.from(e).primaryType}static hashStruct(e,t,r){return bt.from(t).hashStruct(e,r)}static hashDomain(e){const t=[];for(const r in e){const o=dt[r];o||ot.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`,\"domain\",e),t.push({name:r,type:o})}return t.sort(((e,t)=>ht.indexOf(e.name)-ht.indexOf(t.name))),bt.hashStruct(\"EIP712Domain\",{EIP712Domain:t},e)}static encode(e,t,r){return Object(s.c)([\"0x1901\",bt.hashDomain(e),bt.from(t).hash(r)])}static hash(e,t,r){return Object(T.a)(bt.encode(e,t,r))}static resolveNames(e,t,r,o){return rt(this,void 0,void 0,(function*(){e=Object(c.g)(e);const n={};e.verifyingContract&&!Object(s.l)(e.verifyingContract,20)&&(n[e.verifyingContract]=\"0x\");const a=bt.from(t);a.visit(r,((e,t)=>(\"address\"!==e||Object(s.l)(t,20)||(n[t]=\"0x\"),t)));for(const e in n)n[e]=yield o(e);return e.verifyingContract&&n[e.verifyingContract]&&(e.verifyingContract=n[e.verifyingContract]),r=a.visit(r,((e,t)=>\"address\"===e&&n[t]?n[t]:t)),{domain:e,value:r}}))}static getPayload(e,t,r){bt.hashDomain(e);const o={},n=[];ht.forEach((t=>{const r=e[t];null!=r&&(o[t]=pt[t](r),n.push({name:t,type:dt[t]}))}));const a=bt.from(t),i=Object(c.g)(t);return i.EIP712Domain?ot.throwArgumentError(\"types must not contain EIP712Domain type\",\"types.EIP712Domain\",t):i.EIP712Domain=n,a.encode(r),{types:i,domain:o,primaryType:a.primaryType,message:a.visit(r,((e,t)=>{if(e.match(/^bytes(\\d*)/))return Object(s.i)(Object(s.a)(t));if(e.match(/^u?int/))return l.a.from(t).toString();switch(e){case\"address\":return t.toLowerCase();case\"bool\":return!!t;case\"string\":return\"string\"!==typeof t&&ot.throwArgumentError(\"invalid string\",\"value\",t),t}return ot.throwArgumentError(\"unsupported type\",\"type\",e)}))}}}class vt{constructor(e){Object(c.d)(this,\"alphabet\",e),Object(c.d)(this,\"base\",e.length),Object(c.d)(this,\"_alphabetMap\",{}),Object(c.d)(this,\"_leader\",e.charAt(0));for(let t=0;t<e.length;t++)this._alphabetMap[e.charAt(t)]=t}encode(e){let t=Object(s.a)(e);if(0===t.length)return\"\";let r=[0];for(let n=0;n<t.length;++n){let e=t[n];for(let t=0;t<r.length;++t)e+=r[t]<<8,r[t]=e%this.base,e=e/this.base|0;for(;e>0;)r.push(e%this.base),e=e/this.base|0}let o=\"\";for(let n=0;0===t[n]&&n<t.length-1;++n)o+=this._leader;for(let n=r.length-1;n>=0;--n)o+=this.alphabet[r[n]];return o}decode(e){if(\"string\"!==typeof e)throw new TypeError(\"Expected String\");let t=[];if(0===e.length)return new Uint8Array(t);t.push(0);for(let r=0;r<e.length;r++){let o=this._alphabetMap[e[r]];if(void 0===o)throw new Error(\"Non-base\"+this.base+\" character\");let n=o;for(let e=0;e<t.length;++e)n+=t[e]*this.base,t[e]=255&n,n>>=8;for(;n>0;)t.push(255&n),n>>=8}for(let r=0;e[r]===this._leader&&r<e.length-1;++r)t.push(0);return Object(s.a)(new Uint8Array(t.reverse()))}}new vt(\"abcdefghijklmnopqrstuvwxyz234567\");const Tt=new vt(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");var At,yt=r(\"j0Hh\"),St=r.n(yt);!function(e){e.sha256=\"sha256\",e.sha512=\"sha512\"}(At||(At={}));const Et=new u.b(\"sha2/5.1.0\");function Ot(e){return\"0x\"+St.a.ripemd160().update(Object(s.a)(e)).digest(\"hex\")}function Ct(e){return\"0x\"+St.a.sha256().update(Object(s.a)(e)).digest(\"hex\")}function kt(e){return\"0x\"+St.a.sha512().update(Object(s.a)(e)).digest(\"hex\")}function Ft(e,t,r){return At[e]||Et.throwError(\"unsupported algorithm \"+e,u.b.errors.UNSUPPORTED_OPERATION,{operation:\"hmac\",algorithm:e}),\"0x\"+St.a.hmac(St.a[e],Object(s.a)(t)).update(Object(s.a)(r)).digest(\"hex\")}function Jt(e,t,r,o,n){let a;e=Object(s.a)(e),t=Object(s.a)(t);let i=1;const l=new Uint8Array(o),c=new Uint8Array(t.length+4);let u,d;c.set(t);for(let h=1;h<=i;h++){c[t.length]=h>>24&255,c[t.length+1]=h>>16&255,c[t.length+2]=h>>8&255,c[t.length+3]=255&h;let g=Object(s.a)(Ft(n,e,c));a||(a=g.length,d=new Uint8Array(a),i=Math.ceil(o/a),u=o-(i-1)*a),d.set(g);for(let t=1;t<r;t++){g=Object(s.a)(Ft(n,e,g));for(let e=0;e<a;e++)d[e]^=g[e]}const p=(h-1)*a,f=h===i?u:a;l.set(Object(s.a)(d).slice(0,f),p)}return Object(s.i)(l)}var Bt=r(\"rhxT\");const Lt=new u.b(\"wordlists/5.1.0\");class wt{constructor(e){Lt.checkAbstract(new.target,wt),Object(c.d)(this,\"locale\",e)}split(e){return e.toLowerCase().split(/ +/g)}join(e){return e.join(\" \")}static check(e){const t=[];for(let r=0;r<2048;r++){const o=e.getWord(r);if(r!==e.getWordIndex(o))return\"0x\";t.push(o)}return Object(v.a)(t.join(\"\\n\")+\"\\n\")}static register(e,t){t||(t=e.locale)}}let Pt=null;function Mt(e){if(null==Pt&&(Pt=\"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\".replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \"),\"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\"!==wt.check(e)))throw Pt=null,new Error(\"BIP39 Wordlist for en (English) FAILED\")}const Rt=new class extends wt{constructor(){super(\"cz\")}getWord(e){return Mt(this),Pt[e]}getWordIndex(e){return Mt(this),Pt.indexOf(e)}};wt.register(Rt);let Dt=null;function Nt(e){if(null==Dt&&(Dt=\"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\".replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \"),\"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\"!==wt.check(e)))throw Dt=null,new Error(\"BIP39 Wordlist for en (English) FAILED\")}const jt=new class extends wt{constructor(){super(\"en\")}getWord(e){return Nt(this),Dt[e]}getWordIndex(e){return Nt(this),Dt.indexOf(e)}};wt.register(jt);const Xt={};let It=null;function Ht(e){return Lt.checkNormalize(),Object(M.h)(Array.prototype.filter.call(Object(M.f)(e.normalize(\"NFD\").toLowerCase()),(e=>e>=65&&e<=90||e>=97&&e<=123)))}function _t(e){if(null==It&&(It=\"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\".replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \").map((e=>function(e){const t=[];return Array.prototype.forEach.call(Object(M.f)(e),(e=>{47===e?(t.push(204),t.push(129)):126===e?(t.push(110),t.push(204),t.push(131)):t.push(e)})),Object(M.h)(t)}(e))),It.forEach(((e,t)=>{Xt[Ht(e)]=t})),\"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\"!==wt.check(e)))throw It=null,new Error(\"BIP39 Wordlist for es (Spanish) FAILED\")}const Gt=new class extends wt{constructor(){super(\"es\")}getWord(e){return _t(this),It[e]}getWordIndex(e){return _t(this),Xt[Ht(e)]}};wt.register(Gt);let Ut=null;const xt={};function Vt(e){return Lt.checkNormalize(),Object(M.h)(Array.prototype.filter.call(Object(M.f)(e.normalize(\"NFD\").toLowerCase()),(e=>e>=65&&e<=90||e>=97&&e<=123)))}function zt(e){if(null==Ut&&(Ut=\"\".replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \").map((e=>function(e){const t=[];return Array.prototype.forEach.call(Object(M.f)(e),(e=>{47===e?(t.push(204),t.push(129)):45===e?(t.push(204),t.push(128)):t.push(e)})),Object(M.h)(t)}(e))),Ut.forEach(((e,t)=>{xt[Vt(e)]=t})),\"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\"!==wt.check(e)))throw Ut=null,new Error(\"BIP39 Wordlist for fr (French) FAILED\")}const Zt=new class extends wt{constructor(){super(\"fr\")}getWord(e){return zt(this),Ut[e]}getWordIndex(e){return zt(this),xt[Vt(e)]}};wt.register(Zt);const Kt=[\"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\"IJBEJqXZJ\"];let Qt=null;function Yt(e){return Object(s.i)(Object(M.f)(e))}function qt(e){if(null!==Qt)return;Qt=[];const t={};function r(e){let r=\"\";for(let o=0;o<e.length;o++){let n=e[o];const a=t[n];!1!==a&&(a&&(n=a),r+=n)}return r}t[Object(M.h)([227,130,154])]=!1,t[Object(M.h)([227,130,153])]=!1,t[Object(M.h)([227,130,133])]=Object(M.h)([227,130,134]),t[Object(M.h)([227,129,163])]=Object(M.h)([227,129,164]),t[Object(M.h)([227,130,131])]=Object(M.h)([227,130,132]),t[Object(M.h)([227,130,135])]=Object(M.h)([227,130,136]);for(let o=3;o<=9;o++){const e=Kt[o-3];for(let t=0;t<e.length;t+=o){const r=[];for(let n=0;n<o;n++){const o=\"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\".indexOf(e[t+n]);r.push(227),r.push(64&o?130:129),r.push(128+(63&o))}Qt.push(Object(M.h)(r))}}if(Qt.sort((function(e,t){return(e=r(e))<(t=r(t))?-1:e>t?1:0})),\"0xe3818de38284e3818f\"===Yt(Qt[442])&&\"0xe3818de38283e3818f\"===Yt(Qt[443])){const e=Qt[442];Qt[442]=Qt[443],Qt[443]=e}if(\"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\"!==wt.check(e))throw Qt=null,new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\")}const Wt=new class extends wt{constructor(){super(\"ja\")}getWord(e){return qt(this),Qt[e]}getWordIndex(e){return qt(this),Qt.indexOf(e)}split(e){return Lt.checkNormalize(),e.split(/(?:\\u3000| )+/g)}join(e){return e.join(\"\\u3000\")}};wt.register(Wt);const $t=[\"OYAa\",\"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"];let er=null;function tr(e){if(null==er&&(er=[],$t.forEach(((e,t)=>{t+=4;for(let o=0;o<e.length;o+=t){let n=\"\";for(let a=0;a<t;a++)n+=((r=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\".indexOf(e[o+a]))>=40?r=r+168-40:r>=19&&(r=r+97-19),Object(M.h)([225,132+(r>>6),128+(63&r)]));er.push(n)}var r})),er.sort(),\"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\"!==wt.check(e)))throw er=null,new Error(\"BIP39 Wordlist for ko (Korean) FAILED\")}const rr=new class extends wt{constructor(){super(\"ko\")}getWord(e){return tr(this),er[e]}getWordIndex(e){return tr(this),er.indexOf(e)}};wt.register(rr);let or=null;function nr(e){if(null==or&&(or=\"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\".replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \"),\"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\"!==wt.check(e)))throw or=null,new Error(\"BIP39 Wordlist for it (Italian) FAILED\")}const ar=new class extends wt{constructor(){super(\"it\")}getWord(e){return nr(this),or[e]}getWordIndex(e){return nr(this),or.indexOf(e)}};wt.register(ar);const ir=\"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\",sr={zh_cn:null,zh_tw:null},lr={zh_cn:\"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",zh_tw:\"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"},cr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function ur(e){if(null!==sr[e.locale])return;sr[e.locale]=[];let t=0;for(let r=0;r<2048;r++){const o=\"~!@#$%^&*_-=[]{}|;:,.()<>?\".indexOf(ir[3*r]),n=[228+(o>>2),128+cr.indexOf(ir[3*r+1]),128+cr.indexOf(ir[3*r+2])];if(\"zh_tw\"===e.locale){for(let e=o%4;e<3;e++)n[e]=cr.indexOf(\"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\"[t++])+(0==e?228:128)}sr[e.locale].push(Object(M.h)(n))}if(wt.check(e)!==lr[e.locale])throw sr[e.locale]=null,new Error(\"BIP39 Wordlist for \"+e.locale+\" (Chinese) FAILED\")}class dr extends wt{constructor(e){super(\"zh_\"+e)}getWord(e){return ur(this),sr[this.locale][e]}getWordIndex(e){return ur(this),sr[this.locale].indexOf(e)}split(e){return(e=e.replace(/(?:\\u3000| )+/g,\"\")).split(\"\")}}const hr=new dr(\"cn\");wt.register(hr),wt.register(hr,\"zh\");const gr=new dr(\"tw\");wt.register(gr);const pr={cz:Rt,en:jt,es:Gt,fr:Zt,it:ar,ja:Wt,ko:rr,zh:hr,zh_cn:hr,zh_tw:gr},fr=new u.b(\"hdnode/5.1.0\"),mr=l.a.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"),br=Object(M.f)(\"Bitcoin seed\"),vr=2147483648;function Tr(e){return(1<<e)-1<<8-e}function Ar(e){return Object(s.h)(Object(s.i)(e),32)}function yr(e){return Tt.encode(Object(s.b)([e,Object(s.e)(Ct(Ct(e)),0,4)]))}function Sr(e){if(null==e)return pr.en;if(\"string\"===typeof e){const t=pr[e];return null==t&&fr.throwArgumentError(\"unknown locale\",\"wordlist\",e),t}return e}const Er={},Or=\"m/44'/60'/0'/0/0\";class Cr{constructor(e,t,r,o,n,a,i,l){if(fr.checkNew(new.target,Cr),e!==Er)throw new Error(\"HDNode constructor cannot be called directly\");if(t){const e=new Bt.a(t);Object(c.d)(this,\"privateKey\",e.privateKey),Object(c.d)(this,\"publicKey\",e.compressedPublicKey)}else Object(c.d)(this,\"privateKey\",null),Object(c.d)(this,\"publicKey\",Object(s.i)(r));Object(c.d)(this,\"parentFingerprint\",o),Object(c.d)(this,\"fingerprint\",Object(s.e)(Ot(Ct(this.publicKey)),0,4)),Object(c.d)(this,\"address\",Object(Ee.computeAddress)(this.publicKey)),Object(c.d)(this,\"chainCode\",n),Object(c.d)(this,\"index\",a),Object(c.d)(this,\"depth\",i),null==l?(Object(c.d)(this,\"mnemonic\",null),Object(c.d)(this,\"path\",null)):\"string\"===typeof l?(Object(c.d)(this,\"mnemonic\",null),Object(c.d)(this,\"path\",l)):(Object(c.d)(this,\"mnemonic\",l),Object(c.d)(this,\"path\",l.path))}get extendedKey(){if(this.depth>=256)throw new Error(\"Depth too large!\");return yr(Object(s.b)([null!=this.privateKey?\"0x0488ADE4\":\"0x0488B21E\",Object(s.i)(this.depth),this.parentFingerprint,Object(s.h)(Object(s.i)(this.index),4),this.chainCode,null!=this.privateKey?Object(s.b)([\"0x00\",this.privateKey]):this.publicKey]))}neuter(){return new Cr(Er,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(e){if(e>4294967295)throw new Error(\"invalid index - \"+String(e));let t=this.path;t&&(t+=\"/\"+(2147483647&e));const r=new Uint8Array(37);if(e&vr){if(!this.privateKey)throw new Error(\"cannot derive child of neutered node\");r.set(Object(s.a)(this.privateKey),1),t&&(t+=\"'\")}else r.set(Object(s.a)(this.publicKey));for(let s=24;s>=0;s-=8)r[33+(s>>3)]=e>>24-s&255;const o=Object(s.a)(Ft(At.sha512,this.chainCode,r)),n=o.slice(0,32),a=o.slice(32);let i=null,c=null;if(this.privateKey)i=Ar(l.a.from(n).add(this.privateKey).mod(mr));else{c=new Bt.a(Object(s.i)(n))._addPoint(this.publicKey)}let u=t;const d=this.mnemonic;return d&&(u=Object.freeze({phrase:d.phrase,path:t,locale:d.locale||\"en\"})),new Cr(Er,i,c,this.fingerprint,Ar(a),e,this.depth+1,u)}derivePath(e){const t=e.split(\"/\");if(0===t.length||\"m\"===t[0]&&0!==this.depth)throw new Error(\"invalid path - \"+e);\"m\"===t[0]&&t.shift();let r=this;for(let o=0;o<t.length;o++){const e=t[o];if(e.match(/^[0-9]+'$/)){const t=parseInt(e.substring(0,e.length-1));if(t>=vr)throw new Error(\"invalid path index - \"+e);r=r._derive(vr+t)}else{if(!e.match(/^[0-9]+$/))throw new Error(\"invalid path component - \"+e);{const t=parseInt(e);if(t>=vr)throw new Error(\"invalid path index - \"+e);r=r._derive(t)}}}return r}static _fromSeed(e,t){const r=Object(s.a)(e);if(r.length<16||r.length>64)throw new Error(\"invalid seed\");const o=Object(s.a)(Ft(At.sha512,br,r));return new Cr(Er,Ar(o.slice(0,32)),null,\"0x00000000\",Ar(o.slice(32)),0,0,t)}static fromMnemonic(e,t,r){return e=Jr(Fr(e,r=Sr(r)),r),Cr._fromSeed(kr(e,t),{phrase:e,path:\"m\",locale:r.locale})}static fromSeed(e){return Cr._fromSeed(e,null)}static fromExtendedKey(e){const t=Tt.decode(e);82===t.length&&yr(t.slice(0,78))===e||fr.throwArgumentError(\"invalid extended key\",\"extendedKey\",\"[REDACTED]\");const r=t[4],o=Object(s.i)(t.slice(5,9)),n=parseInt(Object(s.i)(t.slice(9,13)).substring(2),16),a=Object(s.i)(t.slice(13,45)),i=t.slice(45,78);switch(Object(s.i)(t.slice(0,4))){case\"0x0488b21e\":case\"0x043587cf\":return new Cr(Er,null,Object(s.i)(i),o,a,n,r,null);case\"0x0488ade4\":case\"0x04358394 \":if(0!==i[0])break;return new Cr(Er,Object(s.i)(i.slice(1)),null,o,a,n,r,null)}return fr.throwArgumentError(\"invalid extended key\",\"extendedKey\",\"[REDACTED]\")}}function kr(e,t){t||(t=\"\");const r=Object(M.f)(\"mnemonic\"+t,M.a.NFKD);return Jt(Object(M.f)(e,M.a.NFKD),r,2048,64,\"sha512\")}function Fr(e,t){t=Sr(t),fr.checkNormalize();const r=t.split(e);if(r.length%3!==0)throw new Error(\"invalid mnemonic\");const o=Object(s.a)(new Uint8Array(Math.ceil(11*r.length/8)));let n=0;for(let s=0;s<r.length;s++){let e=t.getWordIndex(r[s].normalize(\"NFKD\"));if(-1===e)throw new Error(\"invalid mnemonic\");for(let t=0;t<11;t++)e&1<<10-t&&(o[n>>3]|=1<<7-n%8),n++}const a=32*r.length/3,i=Tr(r.length/3);if((Object(s.a)(Ct(o.slice(0,a/8)))[0]&i)!==(o[o.length-1]&i))throw new Error(\"invalid checksum\");return Object(s.i)(o.slice(0,a/8))}function Jr(e,t){if(t=Sr(t),(e=Object(s.a)(e)).length%4!==0||e.length<16||e.length>32)throw new Error(\"invalid entropy\");const r=[0];let o=11;for(let i=0;i<e.length;i++)o>8?(r[r.length-1]<<=8,r[r.length-1]|=e[i],o-=8):(r[r.length-1]<<=o,r[r.length-1]|=e[i]>>8-o,r.push(e[i]&(1<<8-o)-1),o+=3);const n=e.length/4,a=Object(s.a)(Ct(e))[0]&Tr(n);return r[r.length-1]<<=n,r[r.length-1]|=a>>8-n,t.join(r.map((e=>t.getWord(e))))}function Br(e,t){try{return Fr(e,t),!0}catch(r){}return!1}var Lr=r(\"bkUu\"),wr=r(\"cke4\"),Pr=r.n(wr),Mr=r(\"n2qG\"),Rr=r.n(Mr);function Dr(e){return\"string\"===typeof e&&\"0x\"!==e.substring(0,2)&&(e=\"0x\"+e),Object(s.a)(e)}function Nr(e,t){for(e=String(e);e.length<t;)e=\"0\"+e;return e}function jr(e){return\"string\"===typeof e?Object(M.f)(e,M.a.NFKC):Object(s.a)(e)}function Xr(e,t){let r=e;const o=t.toLowerCase().split(\"/\");for(let n=0;n<o.length;n++){let e=null;for(const t in r)if(t.toLowerCase()===o[n]){e=r[t];break}if(null===e)return null;r=e}return r}function Ir(e){const t=Object(s.a)(e);t[6]=15&t[6]|64,t[8]=63&t[8]|128;const r=Object(s.i)(t);return[r.substring(2,10),r.substring(10,14),r.substring(14,18),r.substring(18,22),r.substring(22,34)].join(\"-\")}const Hr=\"json-wallets/5.1.0\";var _r=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const Gr=new u.b(Hr);function Ur(e){return null!=e&&e.mnemonic&&e.mnemonic.phrase}class xr extends c.a{isKeystoreAccount(e){return!(!e||!e._isKeystoreAccount)}}function Vr(e,t){const r=Dr(Xr(e,\"crypto/ciphertext\"));if(Object(s.i)(Object(T.a)(Object(s.b)([t.slice(16,32),r]))).substring(2)!==Xr(e,\"crypto/mac\").toLowerCase())throw new Error(\"invalid password\");const o=function(e,t,r){if(\"aes-128-ctr\"===Xr(e,\"crypto/cipher\")){const o=Dr(Xr(e,\"crypto/cipherparams/iv\")),n=new Pr.a.Counter(o),a=new Pr.a.ModeOfOperation.ctr(t,n);return Object(s.a)(a.decrypt(r))}return null}(e,t.slice(0,16),r);o||Gr.throwError(\"unsupported cipher\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"decrypt\"});const n=t.slice(32,64),a=Object(Ee.computeAddress)(o);if(e.address){let t=e.address.toLowerCase();if(\"0x\"!==t.substring(0,2)&&(t=\"0x\"+t),Object(b.a)(t)!==a)throw new Error(\"address mismatch\")}const i={_isKeystoreAccount:!0,address:a,privateKey:Object(s.i)(o)};if(\"0.1\"===Xr(e,\"x-ethers/version\")){const t=Dr(Xr(e,\"x-ethers/mnemonicCiphertext\")),r=Dr(Xr(e,\"x-ethers/mnemonicCounter\")),o=new Pr.a.Counter(r),a=new Pr.a.ModeOfOperation.ctr(n,o),c=Xr(e,\"x-ethers/path\")||Or,d=Xr(e,\"x-ethers/locale\")||\"en\",h=Object(s.a)(a.decrypt(t));try{const e=Jr(h,d),t=Cr.fromMnemonic(e,null,d).derivePath(c);if(t.privateKey!=i.privateKey)throw new Error(\"mnemonic mismatch\");i.mnemonic=t.mnemonic}catch(l){if(l.code!==u.b.errors.INVALID_ARGUMENT||\"wordlist\"!==l.argument)throw l}}return new xr(i)}function zr(e,t,r,o,n){return Object(s.a)(Jt(e,t,r,o,n))}function Zr(e,t,r,o,n){return Promise.resolve(zr(e,t,r,o,n))}function Kr(e,t,r,o,n){const a=jr(t),i=Xr(e,\"crypto/kdf\");if(i&&\"string\"===typeof i){const t=function(e,t){return Gr.throwArgumentError(\"invalid key-derivation function parameters\",e,t)};if(\"scrypt\"===i.toLowerCase()){const r=Dr(Xr(e,\"crypto/kdfparams/salt\")),s=parseInt(Xr(e,\"crypto/kdfparams/n\")),l=parseInt(Xr(e,\"crypto/kdfparams/r\")),c=parseInt(Xr(e,\"crypto/kdfparams/p\"));s&&l&&c||t(\"kdf\",i),0!==(s&s-1)&&t(\"N\",s);const u=parseInt(Xr(e,\"crypto/kdfparams/dklen\"));return 32!==u&&t(\"dklen\",u),o(a,r,s,l,c,64,n)}if(\"pbkdf2\"===i.toLowerCase()){const o=Dr(Xr(e,\"crypto/kdfparams/salt\"));let n=null;const i=Xr(e,\"crypto/kdfparams/prf\");\"hmac-sha256\"===i?n=\"sha256\":\"hmac-sha512\"===i?n=\"sha512\":t(\"prf\",i);const s=parseInt(Xr(e,\"crypto/kdfparams/c\")),l=parseInt(Xr(e,\"crypto/kdfparams/dklen\"));return 32!==l&&t(\"dklen\",l),r(a,o,s,l,n)}}return Gr.throwArgumentError(\"unsupported key-derivation function\",\"kdf\",i)}const Qr=new u.b(Hr);class Yr extends c.a{isCrowdsaleAccount(e){return!(!e||!e._isCrowdsaleAccount)}}function qr(e,t){const r=JSON.parse(e);t=jr(t);const o=Object(b.a)(Xr(r,\"ethaddr\")),n=Dr(Xr(r,\"encseed\"));n&&n.length%16===0||Qr.throwArgumentError(\"invalid encseed\",\"json\",e);const a=Object(s.a)(Jt(t,t,2e3,32,\"sha256\")).slice(0,16),i=n.slice(0,16),l=n.slice(16),c=new Pr.a.ModeOfOperation.cbc(a,i),u=Pr.a.padding.pkcs7.strip(Object(s.a)(c.decrypt(l)));let d=\"\";for(let s=0;s<u.length;s++)d+=String.fromCharCode(u[s]);const h=Object(M.f)(d),g=Object(T.a)(h);return new Yr({_isCrowdsaleAccount:!0,address:o,privateKey:g})}function Wr(e){let t=null;try{t=JSON.parse(e)}catch(r){return!1}return t.encseed&&t.ethaddr}function $r(e){let t=null;try{t=JSON.parse(e)}catch(r){return!1}return!(!t.version||parseInt(t.version)!==t.version||3!==parseInt(t.version))}function eo(e){if(Wr(e))try{return Object(b.a)(JSON.parse(e).ethaddr)}catch(t){return null}if($r(e))try{return Object(b.a)(JSON.parse(e).address)}catch(t){return null}return null}function to(e,t,r){if(Wr(e)){r&&r(0);const o=qr(e,t);return r&&r(1),Promise.resolve(o)}return $r(e)?function(e,t,r){return _r(this,void 0,void 0,(function*(){const o=JSON.parse(e);return Vr(o,yield Kr(o,t,Zr,Rr.a.scrypt,r))}))}(e,t,r):Promise.reject(new Error(\"invalid JSON wallet\"))}function ro(e,t){if(Wr(e))return qr(e,t);if($r(e))return function(e,t){const r=JSON.parse(e);return Vr(r,Kr(r,t,zr,Rr.a.syncScrypt))}(e,t);throw new Error(\"invalid JSON wallet\")}var oo=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const no=new u.b(\"wallet/5.1.0\");class ao extends ye{constructor(e,t){if(no.checkNew(new.target,ao),super(),null!=(r=e)&&Object(s.l)(r.privateKey,32)&&null!=r.address){const t=new Bt.a(e.privateKey);if(Object(c.d)(this,\"_signingKey\",(()=>t)),Object(c.d)(this,\"address\",Object(Ee.computeAddress)(this.publicKey)),this.address!==Object(b.a)(e.address)&&no.throwArgumentError(\"privateKey/address mismatch\",\"privateKey\",\"[REDACTED]\"),function(e){const t=e.mnemonic;return t&&t.phrase}(e)){const t=e.mnemonic;Object(c.d)(this,\"_mnemonic\",(()=>({phrase:t.phrase,path:t.path||Or,locale:t.locale||\"en\"})));const r=this.mnemonic,o=Cr.fromMnemonic(r.phrase,null,r.locale).derivePath(r.path);Object(Ee.computeAddress)(o.privateKey)!==this.address&&no.throwArgumentError(\"mnemonic/address mismatch\",\"privateKey\",\"[REDACTED]\")}else Object(c.d)(this,\"_mnemonic\",(()=>null))}else{if(Bt.a.isSigningKey(e))\"secp256k1\"!==e.curve&&no.throwArgumentError(\"unsupported curve; must be secp256k1\",\"privateKey\",\"[REDACTED]\"),Object(c.d)(this,\"_signingKey\",(()=>e));else{\"string\"===typeof e&&e.match(/^[0-9a-f]*$/i)&&64===e.length&&(e=\"0x\"+e);const t=new Bt.a(e);Object(c.d)(this,\"_signingKey\",(()=>t))}Object(c.d)(this,\"_mnemonic\",(()=>null)),Object(c.d)(this,\"address\",Object(Ee.computeAddress)(this.publicKey))}var r;t&&!me.isProvider(t)&&no.throwArgumentError(\"invalid provider\",\"provider\",t),Object(c.d)(this,\"provider\",t||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(e){return new ao(this,e)}signTransaction(e){return Object(c.f)(e).then((t=>{null!=t.from&&(Object(b.a)(t.from)!==this.address&&no.throwArgumentError(\"transaction from address mismatch\",\"transaction.from\",e.from),delete t.from);const r=this._signingKey().signDigest(Object(T.a)(Object(Ee.serialize)(t)));return Object(Ee.serialize)(t,r)}))}signMessage(e){return oo(this,void 0,void 0,(function*(){return Object(s.m)(this._signingKey().signDigest(et(e)))}))}_signTypedData(e,t,r){return oo(this,void 0,void 0,(function*(){const o=yield bt.resolveNames(e,t,r,(e=>(null==this.provider&&no.throwError(\"cannot resolve ENS names without a provider\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"resolveName\",value:e}),this.provider.resolveName(e))));return Object(s.m)(this._signingKey().signDigest(bt.hash(o.domain,t,o.value)))}))}encrypt(e,t,r){if(\"function\"!==typeof t||r||(r=t,t={}),r&&\"function\"!==typeof r)throw new Error(\"invalid callback\");return t||(t={}),function(e,t,r,o){try{if(Object(b.a)(e.address)!==Object(Ee.computeAddress)(e.privateKey))throw new Error(\"address/privateKey mismatch\");if(Ur(e)){const t=e.mnemonic;if(Cr.fromMnemonic(t.phrase,null,t.locale).derivePath(t.path||Or).privateKey!=e.privateKey)throw new Error(\"mnemonic mismatch\")}}catch(v){return Promise.reject(v)}\"function\"!==typeof r||o||(o=r,r={}),r||(r={});const n=Object(s.a)(e.privateKey),a=jr(t);let i=null,l=null,c=null;if(Ur(e)){const t=e.mnemonic;i=Object(s.a)(Fr(t.phrase,t.locale||\"en\")),l=t.path||Or,c=t.locale||\"en\"}let u=r.client;u||(u=\"ethers.js\");let d=null;d=r.salt?Object(s.a)(r.salt):Object(Lr.a)(32);let h=null;if(r.iv){if(h=Object(s.a)(r.iv),16!==h.length)throw new Error(\"invalid iv\")}else h=Object(Lr.a)(16);let g=null;if(r.uuid){if(g=Object(s.a)(r.uuid),16!==g.length)throw new Error(\"invalid uuid\")}else g=Object(Lr.a)(16);let p=1<<17,f=8,m=1;return r.scrypt&&(r.scrypt.N&&(p=r.scrypt.N),r.scrypt.r&&(f=r.scrypt.r),r.scrypt.p&&(m=r.scrypt.p)),Rr.a.scrypt(a,d,p,f,m,64,o).then((t=>{const r=(t=Object(s.a)(t)).slice(0,16),o=t.slice(16,32),a=t.slice(32,64),b=new Pr.a.Counter(h),v=new Pr.a.ModeOfOperation.ctr(r,b),A=Object(s.a)(v.encrypt(n)),y=Object(T.a)(Object(s.b)([o,A])),S={address:e.address.substring(2).toLowerCase(),id:Ir(g),version:3,Crypto:{cipher:\"aes-128-ctr\",cipherparams:{iv:Object(s.i)(h).substring(2)},ciphertext:Object(s.i)(A).substring(2),kdf:\"scrypt\",kdfparams:{salt:Object(s.i)(d).substring(2),n:p,dklen:32,p:m,r:f},mac:y.substring(2)}};if(i){const e=Object(Lr.a)(16),t=new Pr.a.Counter(e),r=new Pr.a.ModeOfOperation.ctr(a,t),o=Object(s.a)(r.encrypt(i)),n=new Date,d=n.getUTCFullYear()+\"-\"+Nr(n.getUTCMonth()+1,2)+\"-\"+Nr(n.getUTCDate(),2)+\"T\"+Nr(n.getUTCHours(),2)+\"-\"+Nr(n.getUTCMinutes(),2)+\"-\"+Nr(n.getUTCSeconds(),2)+\".0Z\";S[\"x-ethers\"]={client:u,gethFilename:\"UTC--\"+d+\"--\"+S.address,mnemonicCounter:Object(s.i)(e).substring(2),mnemonicCiphertext:Object(s.i)(o).substring(2),path:l,locale:c,version:\"0.1\"}}return JSON.stringify(S)}))}(this,e,t,r)}static createRandom(e){let t=Object(Lr.a)(16);e||(e={}),e.extraEntropy&&(t=Object(s.a)(Object(s.e)(Object(T.a)(Object(s.b)([t,e.extraEntropy])),0,16)));const r=Jr(t,e.locale);return ao.fromMnemonic(r,e.path,e.locale)}static fromEncryptedJson(e,t,r){return to(e,t,r).then((e=>new ao(e)))}static fromEncryptedJsonSync(e,t){return new ao(ro(e,t))}static fromMnemonic(e,t,r){return t||(t=Or),new ao(Cr.fromMnemonic(e,null,r).derivePath(t))}}function io(e,t){return Object(Ee.recoverAddress)(et(e),t)}function so(e,t,r,o){return Object(Ee.recoverAddress)(bt.hash(e,t,r),o)}var lo=r(\"tGuN\");const co=new u.b(\"networks/5.1.0\");function uo(e){const t=function(t,r){null==r&&(r={});const o=[];if(t.InfuraProvider)try{o.push(new t.InfuraProvider(e,r.infura))}catch(n){}if(t.EtherscanProvider)try{o.push(new t.EtherscanProvider(e,r.etherscan))}catch(n){}if(t.AlchemyProvider){const a=[\"goerli\",\"ropsten\",\"rinkeby\"];try{const n=new t.AlchemyProvider(e,r.alchemy);n.network&&-1===a.indexOf(n.network.name)&&o.push(n)}catch(n){}}if(t.PocketProvider){const r=[\"goerli\",\"ropsten\",\"rinkeby\"];try{const n=new t.PocketProvider(e);n.network&&-1===r.indexOf(n.network.name)&&o.push(n)}catch(n){}}if(t.CloudflareProvider)try{o.push(new t.CloudflareProvider(e))}catch(n){}if(0===o.length)return null;if(t.FallbackProvider){let n=1;return null!=r.quorum?n=r.quorum:\"homestead\"===e&&(n=2),new t.FallbackProvider(o,n)}return o[0]};return t.renetwork=function(e){return uo(e)},t}function ho(e,t){const r=function(r,o){return r.JsonRpcProvider?new r.JsonRpcProvider(e,t):null};return r.renetwork=function(t){return ho(e,t)},r}const go={chainId:1,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"homestead\",_defaultProvider:uo(\"homestead\")},po={chainId:3,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"ropsten\",_defaultProvider:uo(\"ropsten\")},fo={chainId:63,name:\"classicMordor\",_defaultProvider:ho(\"https://www.ethercluster.com/mordor\",\"classicMordor\")},mo={unspecified:{chainId:0,name:\"unspecified\"},homestead:go,mainnet:go,morden:{chainId:2,name:\"morden\"},ropsten:po,testnet:po,rinkeby:{chainId:4,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"rinkeby\",_defaultProvider:uo(\"rinkeby\")},kovan:{chainId:42,name:\"kovan\",_defaultProvider:uo(\"kovan\")},goerli:{chainId:5,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"goerli\",_defaultProvider:uo(\"goerli\")},classic:{chainId:61,name:\"classic\",_defaultProvider:ho(\"https://www.ethercluster.com/etc\",\"classic\")},classicMorden:{chainId:62,name:\"classicMorden\"},classicMordor:fo,classicTestnet:fo,classicKotti:{chainId:6,name:\"classicKotti\",_defaultProvider:ho(\"https://www.ethercluster.com/kotti\",\"classicKotti\")}};function bo(e){if(null==e)return null;if(\"number\"===typeof e){for(const t in mo){const r=mo[t];if(r.chainId===e)return{name:r.name,chainId:r.chainId,ensAddress:r.ensAddress||null,_defaultProvider:r._defaultProvider||null}}return{chainId:e,name:\"unknown\"}}if(\"string\"===typeof e){const t=mo[e];return null==t?null:{name:t.name,chainId:t.chainId,ensAddress:t.ensAddress,_defaultProvider:t._defaultProvider||null}}const t=mo[e.name];if(!t)return\"number\"!==typeof e.chainId&&co.throwArgumentError(\"invalid network chainId\",\"network\",e),e;0!==e.chainId&&e.chainId!==t.chainId&&co.throwArgumentError(\"network chainId mismatch\",\"network\",e);let r=e._defaultProvider||null;var o;return null==r&&t._defaultProvider&&(r=(o=t._defaultProvider)&&\"function\"===typeof o.renetwork?t._defaultProvider.renetwork(e):t._defaultProvider),{name:e.name,chainId:t.chainId,ensAddress:e.ensAddress||t.ensAddress||null,_defaultProvider:r}}var vo=r(\"SHcd\");function To(e,t){t||(t=function(e){return[parseInt(e,16)]});let r=0,o={};return e.split(\",\").forEach((e=>{let n=e.split(\":\");r+=parseInt(n[0],16),o[r]=t(n[1])})),o}function Ao(e){let t=0;return e.split(\",\").map((e=>{let r=e.split(\"-\");1===r.length?r[1]=\"0\":\"\"===r[1]&&(r[1]=\"1\");let o=t+parseInt(r[0],16);return t=parseInt(r[1],16),{l:o,h:t}}))}function yo(e,t){let r=0;for(let o=0;o<t.length;o++){let n=t[o];if(r+=n.l,e>=r&&e<=r+n.h&&(e-r)%(n.d||1)===0){if(n.e&&-1!==n.e.indexOf(e-r))continue;return n}}return null}const So=Ao(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"),Eo=\"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((e=>parseInt(e,16))),Oo=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],Co=To(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\"),ko=To(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\"),Fo=To(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\",(function(e){if(e.length%4!==0)throw new Error(\"bad data\");let t=[];for(let r=0;r<e.length;r+=4)t.push(parseInt(e.substring(r,r+4),16));return t})),Jo=Ao(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");function Bo(e){if(e.match(/^[a-z0-9-]*$/i)&&e.length<=59)return e.toLowerCase();let t=Object(M.g)(e);var r;r=t.map((e=>{if(Eo.indexOf(e)>=0)return[];if(e>=65024&&e<=65039)return[];let t=function(e){let t=yo(e,Oo);if(t)return[e+t.s];let r=Co[e];if(r)return r;let o=ko[e];return o?[e+o[0]]:Fo[e]||null}(e);return t||[e]})),t=r.reduce(((e,t)=>(t.forEach((t=>{e.push(t)})),e)),[]),t=Object(M.g)(Object(M.e)(t),M.a.NFKC),t.forEach((e=>{if(yo(e,Jo))throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\")})),t.forEach((e=>{if(yo(e,So))throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\")}));let o=Object(M.e)(t);if(\"-\"===o.substring(0,1)||\"--\"===o.substring(2,4)||\"-\"===o.substring(o.length-1))throw new Error(\"invalid hyphen\");if(o.length>63)throw new Error(\"too long\");return o}const Lo=new u.b(tt),wo=new Uint8Array(32);wo.fill(0);const Po=new RegExp(\"^((.*)\\\\.)?([^.]+)$\");function Mo(e){try{const t=e.split(\".\");for(let e=0;e<t.length;e++)if(0===Bo(t[e]).length)throw new Error(\"empty\");return!0}catch(t){}return!1}function Ro(e){\"string\"!==typeof e&&Lo.throwArgumentError(\"invalid address - \"+String(e),\"name\",e);let t=wo;for(;e.length;){const r=e.match(Po),o=Object(M.f)(Bo(r[3]));t=Object(T.a)(Object(s.b)([t,Object(T.a)(o)])),e=r[2]||\"\"}return Object(s.i)(t)}function Do(e){e=atob(e);const t=[];for(let r=0;r<e.length;r++)t.push(e.charCodeAt(r));return Object(s.a)(t)}function No(e){e=Object(s.a)(e);let t=\"\";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return btoa(t)}var jo=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};function Xo(e,t){return jo(this,void 0,void 0,(function*(){null==t&&(t={});const r={method:t.method||\"GET\",headers:t.headers||{},body:t.body||void 0,mode:\"cors\",cache:\"no-cache\",credentials:\"same-origin\",redirect:\"follow\",referrer:\"client\"},o=yield fetch(e,r),n=yield o.arrayBuffer(),a={};return o.headers.forEach?o.headers.forEach(((e,t)=>{a[t.toLowerCase()]=e})):o.headers.keys().forEach((e=>{a[e.toLowerCase()]=o.headers.get(e)})),{headers:a,statusCode:o.status,statusMessage:o.statusText,body:Object(s.a)(new Uint8Array(n))}}))}var Io=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const Ho=new u.b(\"web/5.1.0\");function _o(e){return new Promise((t=>{setTimeout(t,e)}))}function Go(e,t){if(null==e)return null;if(\"string\"===typeof e)return e;if(Object(s.k)(e)){if(t&&(\"text\"===t.split(\"/\")[0]||\"application/json\"===t.split(\";\")[0].trim()))try{return Object(M.h)(e)}catch(r){}return Object(s.i)(e)}return e}function Uo(e,t,r){const o=\"object\"===typeof e&&null!=e.throttleLimit?e.throttleLimit:12;Ho.assertArgument(o>0&&o%1===0,\"invalid connection throttle limit\",\"connection.throttleLimit\",o);const n=\"object\"===typeof e?e.throttleCallback:null,a=\"object\"===typeof e&&\"number\"===typeof e.throttleSlotInterval?e.throttleSlotInterval:100;Ho.assertArgument(a>0&&a%1===0,\"invalid connection throttle slot interval\",\"connection.throttleSlotInterval\",a);const i={};let s=null;const l={method:\"GET\"};let c=!1,d=12e4;if(\"string\"===typeof e)s=e;else if(\"object\"===typeof e){if(null!=e&&null!=e.url||Ho.throwArgumentError(\"missing URL\",\"connection.url\",e),s=e.url,\"number\"===typeof e.timeout&&e.timeout>0&&(d=e.timeout),e.headers)for(const t in e.headers)i[t.toLowerCase()]={key:t,value:String(e.headers[t])},[\"if-none-match\",\"if-modified-since\"].indexOf(t.toLowerCase())>=0&&(c=!0);if(l.allowGzip=!!e.allowGzip,null!=e.user&&null!=e.password){\"https:\"!==s.substring(0,6)&&!0!==e.allowInsecureAuthentication&&Ho.throwError(\"basic authentication requires a secure https url\",u.b.errors.INVALID_ARGUMENT,{argument:\"url\",url:s,user:e.user,password:\"[REDACTED]\"});const t=e.user+\":\"+e.password;i.authorization={key:\"Authorization\",value:\"Basic \"+No(Object(M.f)(t))}}}t&&(l.method=\"POST\",l.body=t,null==i[\"content-type\"]&&(i[\"content-type\"]={key:\"Content-Type\",value:\"application/octet-stream\"}),null==i[\"content-length\"]&&(i[\"content-length\"]={key:\"Content-Length\",value:String(t.length)}));const h={};Object.keys(i).forEach((e=>{const t=i[e];h[t.key]=t.value})),l.headers=h;const g=function(){let e=null;return{promise:new Promise((function(t,r){d&&(e=setTimeout((()=>{null!=e&&(e=null,r(Ho.makeError(\"timeout\",u.b.errors.TIMEOUT,{requestBody:Go(l.body,h[\"content-type\"]),requestMethod:l.method,timeout:d,url:s})))}),d))})),cancel:function(){null!=e&&(clearTimeout(e),e=null)}}}(),p=function(){return Io(this,void 0,void 0,(function*(){for(let t=0;t<o;t++){let i=null;try{if(i=yield Xo(s,l),429===i.statusCode&&t<o){let e=!0;if(n&&(e=yield n(t,s)),e){let e=0;const r=i.headers[\"retry-after\"];e=\"string\"===typeof r&&r.match(/^[1-9][0-9]*$/)?1e3*parseInt(r):a*parseInt(String(Math.random()*Math.pow(2,t))),yield _o(e);continue}}}catch(e){i=e.response,null==i&&(g.cancel(),Ho.throwError(\"missing response\",u.b.errors.SERVER_ERROR,{requestBody:Go(l.body,h[\"content-type\"]),requestMethod:l.method,serverError:e,url:s}))}let d=i.body;if(c&&304===i.statusCode?d=null:(i.statusCode<200||i.statusCode>=300)&&(g.cancel(),Ho.throwError(\"bad response\",u.b.errors.SERVER_ERROR,{status:i.statusCode,headers:i.headers,body:Go(d,i.headers?i.headers[\"content-type\"]:null),requestBody:Go(l.body,h[\"content-type\"]),requestMethod:l.method,url:s})),r)try{const e=yield r(d,i);return g.cancel(),e}catch(e){if(e.throttleRetry&&t<o){let e=!0;if(n&&(e=yield n(t,s)),e){const e=a*parseInt(String(Math.random()*Math.pow(2,t)));yield _o(e);continue}}g.cancel(),Ho.throwError(\"processing response error\",u.b.errors.SERVER_ERROR,{body:Go(d,i.headers?i.headers[\"content-type\"]:null),error:e,requestBody:Go(l.body,h[\"content-type\"]),requestMethod:l.method,url:s})}return g.cancel(),d}return Ho.throwError(\"failed response\",u.b.errors.SERVER_ERROR,{requestBody:Go(l.body,h[\"content-type\"]),requestMethod:l.method,url:s})}))}();return Promise.race([g.promise,p])}function xo(e,t,r){let o=null;if(null!=t){o=Object(M.f)(t);const r=\"string\"===typeof e?{url:e}:Object(c.g)(e);if(r.headers){0!==Object.keys(r.headers).filter((e=>\"content-type\"===e.toLowerCase())).length||(r.headers=Object(c.g)(r.headers),r.headers[\"content-type\"]=\"application/json\")}else r.headers={\"content-type\":\"application/json\"};e=r}return Uo(e,o,((e,t)=>{let o=null;if(null!=e)try{o=JSON.parse(Object(M.h)(e))}catch(n){Ho.throwError(\"invalid JSON\",u.b.errors.SERVER_ERROR,{body:e,error:n})}return r&&(o=r(o,t)),o}))}function Vo(e,t){return t||(t={}),null==(t=Object(c.g)(t)).floor&&(t.floor=0),null==t.ceiling&&(t.ceiling=1e4),null==t.interval&&(t.interval=250),new Promise((function(r,o){let n=null,a=!1;const i=()=>!a&&(a=!0,n&&clearTimeout(n),!0);t.timeout&&(n=setTimeout((()=>{i()&&o(new Error(\"timeout\"))}),t.timeout));const s=t.retryLimit;let l=0;!function n(){return e().then((function(e){if(void 0!==e)i()&&r(e);else if(t.oncePoll)t.oncePoll.once(\"poll\",n);else if(t.onceBlock)t.onceBlock.once(\"block\",n);else if(!a){if(l++,l>s)return void(i()&&o(new Error(\"retry limit reached\")));let e=t.interval*parseInt(String(Math.random()*Math.pow(2,l)));e<t.floor&&(e=t.floor),e>t.ceiling&&(e=t.ceiling),setTimeout(n,e)}return null}),(function(e){i()&&o(e)}))}()}))}var zo=r(\"vyt/\"),Zo=r.n(zo);const Ko=\"providers/5.1.0\";var Qo=r(\"wAtr\");const Yo=new u.b(Ko);class qo{constructor(){Yo.checkNew(new.target,qo),this.formats=this.getDefaultFormats()}getDefaultFormats(){const e={},t=this.address.bind(this),r=this.bigNumber.bind(this),o=this.blockTag.bind(this),n=this.data.bind(this),a=this.hash.bind(this),i=this.hex.bind(this),s=this.number.bind(this);return e.transaction={hash:a,type:qo.allowNull(s,null),accessList:qo.allowNull(this.accessList.bind(this),null),blockHash:qo.allowNull(a,null),blockNumber:qo.allowNull(s,null),transactionIndex:qo.allowNull(s,null),confirmations:qo.allowNull(s,null),from:t,gasPrice:r,gasLimit:r,to:qo.allowNull(t,null),value:r,nonce:s,data:n,r:qo.allowNull(this.uint256),s:qo.allowNull(this.uint256),v:qo.allowNull(s),creates:qo.allowNull(t,null),raw:qo.allowNull(n)},e.transactionRequest={from:qo.allowNull(t),nonce:qo.allowNull(s),gasLimit:qo.allowNull(r),gasPrice:qo.allowNull(r),to:qo.allowNull(t),value:qo.allowNull(r),data:qo.allowNull((e=>this.data(e,!0))),type:qo.allowNull(s),accessList:qo.allowNull(this.accessList.bind(this),null)},e.receiptLog={transactionIndex:s,blockNumber:s,transactionHash:a,address:t,topics:qo.arrayOf(a),data:n,logIndex:s,blockHash:a},e.receipt={to:qo.allowNull(this.address,null),from:qo.allowNull(this.address,null),contractAddress:qo.allowNull(t,null),transactionIndex:s,root:qo.allowNull(i),gasUsed:r,logsBloom:qo.allowNull(n),blockHash:a,transactionHash:a,logs:qo.arrayOf(this.receiptLog.bind(this)),blockNumber:s,confirmations:qo.allowNull(s,null),cumulativeGasUsed:r,status:qo.allowNull(s)},e.block={hash:a,parentHash:a,number:s,timestamp:s,nonce:qo.allowNull(i),difficulty:this.difficulty.bind(this),gasLimit:r,gasUsed:r,miner:t,extraData:n,transactions:qo.allowNull(qo.arrayOf(a))},e.blockWithTransactions=Object(c.g)(e.block),e.blockWithTransactions.transactions=qo.allowNull(qo.arrayOf(this.transactionResponse.bind(this))),e.filter={fromBlock:qo.allowNull(o,void 0),toBlock:qo.allowNull(o,void 0),blockHash:qo.allowNull(a,void 0),address:qo.allowNull(t,void 0),topics:qo.allowNull(this.topics.bind(this),void 0)},e.filterLog={blockNumber:qo.allowNull(s),blockHash:qo.allowNull(a),transactionIndex:s,removed:qo.allowNull(this.boolean.bind(this)),address:t,data:qo.allowFalsish(n,\"0x\"),topics:qo.arrayOf(a),transactionHash:a,logIndex:s},e}accessList(e){return Object(Ee.accessListify)(e||[])}number(e){return\"0x\"===e?0:l.a.from(e).toNumber()}bigNumber(e){return l.a.from(e)}boolean(e){if(\"boolean\"===typeof e)return e;if(\"string\"===typeof e){if(\"true\"===(e=e.toLowerCase()))return!0;if(\"false\"===e)return!1}throw new Error(\"invalid boolean - \"+e)}hex(e,t){return\"string\"===typeof e&&(t||\"0x\"===e.substring(0,2)||(e=\"0x\"+e),Object(s.l)(e))?e.toLowerCase():Yo.throwArgumentError(\"invalid hash\",\"value\",e)}data(e,t){const r=this.hex(e,t);if(r.length%2!==0)throw new Error(\"invalid data; odd-length - \"+e);return r}address(e){return Object(b.a)(e)}callAddress(e){if(!Object(s.l)(e,32))return null;const t=Object(b.a)(Object(s.e)(e,12));return t===Qo.a?null:t}contractAddress(e){return Object(b.b)(e)}blockTag(e){if(null==e)return\"latest\";if(\"earliest\"===e)return\"0x0\";if(\"latest\"===e||\"pending\"===e)return e;if(\"number\"===typeof e||Object(s.l)(e))return Object(s.g)(e);throw new Error(\"invalid blockTag\")}hash(e,t){const r=this.hex(e,t);return 32!==Object(s.d)(r)?Yo.throwArgumentError(\"invalid hash\",\"value\",e):r}difficulty(e){if(null==e)return null;const t=l.a.from(e);try{return t.toNumber()}catch(r){}return null}uint256(e){if(!Object(s.l)(e))throw new Error(\"invalid uint256\");return Object(s.h)(e,32)}_block(e,t){return null!=e.author&&null==e.miner&&(e.miner=e.author),qo.check(t,e)}block(e){return this._block(e,this.formats.block)}blockWithTransactions(e){return this._block(e,this.formats.blockWithTransactions)}transactionRequest(e){return qo.check(this.formats.transactionRequest,e)}transactionResponse(e){null!=e.gas&&null==e.gasLimit&&(e.gasLimit=e.gas),e.to&&l.a.from(e.to).isZero()&&(e.to=\"0x0000000000000000000000000000000000000000\"),null!=e.input&&null==e.data&&(e.data=e.input),null==e.to&&null==e.creates&&(e.creates=this.contractAddress(e)),1===e.type&&null==e.accessList&&(e.accessList=[]);const t=qo.check(this.formats.transaction,e);if(null!=e.chainId){let r=e.chainId;Object(s.l)(r)&&(r=l.a.from(r).toNumber()),t.chainId=r}else{let r=e.networkId;null==r&&null==t.v&&(r=e.chainId),Object(s.l)(r)&&(r=l.a.from(r).toNumber()),\"number\"!==typeof r&&null!=t.v&&(r=(t.v-35)/2,r<0&&(r=0),r=parseInt(r)),\"number\"!==typeof r&&(r=0),t.chainId=r}return t.blockHash&&\"x\"===t.blockHash.replace(/0/g,\"\")&&(t.blockHash=null),t}transaction(e){return Object(Ee.parse)(e)}receiptLog(e){return qo.check(this.formats.receiptLog,e)}receipt(e){const t=qo.check(this.formats.receipt,e);if(null!=t.root)if(t.root.length<=4){const e=l.a.from(t.root).toNumber();0===e||1===e?(null!=t.status&&t.status!==e&&Yo.throwArgumentError(\"alt-root-status/status mismatch\",\"value\",{root:t.root,status:t.status}),t.status=e,delete t.root):Yo.throwArgumentError(\"invalid alt-root-status\",\"value.root\",t.root)}else 66!==t.root.length&&Yo.throwArgumentError(\"invalid root hash\",\"value.root\",t.root);return null!=t.status&&(t.byzantium=!0),t}topics(e){return Array.isArray(e)?e.map((e=>this.topics(e))):null!=e?this.hash(e,!0):null}filter(e){return qo.check(this.formats.filter,e)}filterLog(e){return qo.check(this.formats.filterLog,e)}static check(e,t){const r={};for(const n in e)try{const o=e[n](t[n]);void 0!==o&&(r[n]=o)}catch(o){throw o.checkKey=n,o.checkValue=t[n],o}return r}static allowNull(e,t){return function(r){return null==r?t:e(r)}}static allowFalsish(e,t){return function(r){return r?e(r):t}}static arrayOf(e){return function(t){if(!Array.isArray(t))throw new Error(\"not an array\");const r=[];return t.forEach((function(t){r.push(e(t))})),r}}}function Wo(e){return e&&\"function\"===typeof e.isCommunityResource}function $o(e){return Wo(e)&&e.isCommunityResource()}let en=!1;function tn(){en||(en=!0,console.log(\"========= NOTICE =========\"),console.log(\"Request-Rate Exceeded  (this message will not be repeated)\"),console.log(\"\"),console.log(\"The default API keys for each service are provided as a highly-throttled,\"),console.log(\"community resource for low-traffic projects and early prototyping.\"),console.log(\"\"),console.log(\"While your application will continue to function, we highly recommended\"),console.log(\"signing up for your own API keys to improve performance, increase your\"),console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\"),console.log(\"\"),console.log(\"For more details: https://docs.ethers.io/api-keys/\"),console.log(\"==========================\"))}var rn=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const on=new u.b(Ko);function nn(e){return null==e?\"null\":(32!==Object(s.d)(e)&&on.throwArgumentError(\"invalid topic\",\"topic\",e),e.toLowerCase())}function an(e){for(e=e.slice();e.length>0&&null==e[e.length-1];)e.pop();return e.map((e=>{if(Array.isArray(e)){const t={};e.forEach((e=>{t[nn(e)]=!0}));const r=Object.keys(t);return r.sort(),r.join(\"|\")}return nn(e)})).join(\"&\")}function sn(e){if(\"string\"===typeof e){if(e=e.toLowerCase(),32===Object(s.d)(e))return\"tx:\"+e;if(-1===e.indexOf(\":\"))return e}else{if(Array.isArray(e))return\"filter:*:\"+an(e);if(fe.isForkEvent(e))throw on.warn(\"not implemented\"),new Error(\"not implemented\");if(e&&\"object\"===typeof e)return\"filter:\"+(e.address||\"*\")+\":\"+an(e.topics||[])}throw new Error(\"invalid event - \"+e)}function ln(){return(new Date).getTime()}const cn=[\"block\",\"network\",\"pending\",\"poll\"];class un{constructor(e,t,r){Object(c.d)(this,\"tag\",e),Object(c.d)(this,\"listener\",t),Object(c.d)(this,\"once\",r)}get event(){switch(this.type){case\"tx\":return this.hash;case\"filter\":return this.filter}return this.tag}get type(){return this.tag.split(\":\")[0]}get hash(){const e=this.tag.split(\":\");return\"tx\"!==e[0]?null:e[1]}get filter(){const e=this.tag.split(\":\");if(\"filter\"!==e[0])return null;const t=e[1],r=\"\"===(o=e[2])?[]:o.split(/&/g).map((e=>{if(\"\"===e)return[];const t=e.split(\"|\").map((e=>\"null\"===e?null:e));return 1===t.length?t[0]:t}));var o;const n={};return r.length>0&&(n.topics=r),t&&\"*\"!==t&&(n.address=t),n}pollable(){return this.tag.indexOf(\":\")>=0||cn.indexOf(this.tag)>=0}}const dn={0:{symbol:\"btc\",p2pkh:0,p2sh:5,prefix:\"bc\"},2:{symbol:\"ltc\",p2pkh:48,p2sh:50,prefix:\"ltc\"},3:{symbol:\"doge\",p2pkh:30,p2sh:22},60:{symbol:\"eth\",ilk:\"eth\"},61:{symbol:\"etc\",ilk:\"eth\"},700:{symbol:\"xdai\",ilk:\"eth\"}};function hn(e){return Object(s.h)(l.a.from(e).toHexString(),32)}function gn(e){return Tt.encode(Object(s.b)([e,Object(s.e)(Ct(Ct(e)),0,4)]))}class pn{constructor(e,t,r){Object(c.d)(this,\"provider\",e),Object(c.d)(this,\"name\",r),Object(c.d)(this,\"address\",e.formatter.address(t))}_fetchBytes(e,t){return rn(this,void 0,void 0,(function*(){const r={to:this.address,data:Object(s.c)([e,Ro(this.name),t||\"0x\"])},o=yield this.provider.call(r);if(\"0x\"===o)return null;const n=l.a.from(Object(s.e)(o,0,32)).toNumber(),a=l.a.from(Object(s.e)(o,n,n+32)).toNumber();return Object(s.e)(o,n+32,n+32+a)}))}_getAddress(e,t){const r=dn[String(e)];if(null==r&&on.throwError(`unsupported coin type: ${e}`,u.b.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${e})`}),\"eth\"===r.ilk)return this.provider.formatter.address(t);const o=Object(s.a)(t);if(null!=r.p2pkh){const e=t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(e){const t=parseInt(e[1],16);if(e[2].length===2*t&&t>=1&&t<=75)return gn(Object(s.b)([[r.p2pkh],\"0x\"+e[2]]))}}if(null!=r.p2sh){const e=t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(e){const t=parseInt(e[1],16);if(e[2].length===2*t&&t>=1&&t<=75)return gn(Object(s.b)([[r.p2sh],\"0x\"+e[2]]))}}if(null!=r.prefix){const e=o[1];let t=o[0];if(0===t?20!==e&&32!==e&&(t=-1):t=-1,t>=0&&o.length===2+e&&e>=1&&e<=75){const e=Zo.a.toWords(o.slice(2));return e.unshift(t),Zo.a.encode(r.prefix,e)}}return null}getAddress(e){return rn(this,void 0,void 0,(function*(){if(null==e&&(e=60),60===e){const e={to:this.address,data:\"0x3b3b57de\"+Ro(this.name).substring(2)},t=yield this.provider.call(e);return\"0x\"===t||t===vo.a?null:this.provider.formatter.callAddress(t)}const t=yield this._fetchBytes(\"0xf1cb7e06\",hn(e));if(null==t||\"0x\"===t)return null;const r=this._getAddress(e,t);return null==r&&on.throwError(\"invalid or unsupported coin data\",u.b.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${e})`,coinType:e,data:t}),r}))}getContentHash(){return rn(this,void 0,void 0,(function*(){const e=yield this._fetchBytes(\"0xbc1c58d1\");if(null==e||\"0x\"===e)return null;const t=e.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(t){const e=parseInt(t[3],16);if(t[4].length===2*e)return\"ipfs://\"+Tt.encode(\"0x\"+t[1])}const r=e.match(/^0xe40101fa011b20([0-9a-f]*)$/);return r&&64===r[1].length?\"bzz://\"+r[1]:on.throwError(\"invalid or unsupported content hash data\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"getContentHash()\",data:e})}))}getText(e){return rn(this,void 0,void 0,(function*(){let t=Object(M.f)(e);t=Object(s.b)([hn(64),hn(t.length),t]),t.length%32!==0&&(t=Object(s.b)([t,Object(s.h)(\"0x\",32-e.length%32)]));const r=yield this._fetchBytes(\"0x59d1d43c\",Object(s.i)(t));return null==r||\"0x\"===r?null:Object(M.h)(r)}))}}let fn=null,mn=1;class bn extends me{constructor(e){if(on.checkNew(new.target,me),super(),this._events=[],this._emitted={block:-2},this.formatter=new.target.getFormatter(),Object(c.d)(this,\"anyNetwork\",\"any\"===e),this.anyNetwork&&(e=this.detectNetwork()),e instanceof Promise)this._networkPromise=e,e.catch((e=>{})),this._ready().catch((e=>{}));else{const t=Object(c.e)(new.target,\"getNetwork\")(e);t?(Object(c.d)(this,\"_network\",t),this.emit(\"network\",t,null)):on.throwArgumentError(\"invalid network\",\"network\",e)}this._maxInternalBlockNumber=-1024,this._lastBlockNumber=-2,this._pollingInterval=4e3,this._fastQueryDate=0}_ready(){return rn(this,void 0,void 0,(function*(){if(null==this._network){let t=null;if(this._networkPromise)try{t=yield this._networkPromise}catch(e){}null==t&&(t=yield this.detectNetwork()),t||on.throwError(\"no network detected\",u.b.errors.UNKNOWN_ERROR,{}),null==this._network&&(this.anyNetwork?this._network=t:Object(c.d)(this,\"_network\",t),this.emit(\"network\",t,null))}return this._network}))}get ready(){return Vo((()=>this._ready().then((e=>e),(e=>{if(e.code!==u.b.errors.NETWORK_ERROR||\"noNetwork\"!==e.event)throw e}))))}static getFormatter(){return null==fn&&(fn=new qo),fn}static getNetwork(e){return bo(null==e?\"homestead\":e)}_getInternalBlockNumber(e){return rn(this,void 0,void 0,(function*(){if(yield this._ready(),e>0)for(;this._internalBlockNumber;){const t=this._internalBlockNumber;try{const r=yield t;if(ln()-r.respTime<=e)return r.blockNumber;break}catch(o){if(this._internalBlockNumber===t)break}}const t=ln(),r=Object(c.f)({blockNumber:this.perform(\"getBlockNumber\",{}),networkError:this.getNetwork().then((e=>null),(e=>e))}).then((({blockNumber:e,networkError:o})=>{if(o)throw this._internalBlockNumber===r&&(this._internalBlockNumber=null),o;const n=ln();return(e=l.a.from(e).toNumber())<this._maxInternalBlockNumber&&(e=this._maxInternalBlockNumber),this._maxInternalBlockNumber=e,this._setFastBlockNumber(e),{blockNumber:e,reqTime:t,respTime:n}}));return this._internalBlockNumber=r,r.catch((e=>{this._internalBlockNumber===r&&(this._internalBlockNumber=null)})),(yield r).blockNumber}))}poll(){return rn(this,void 0,void 0,(function*(){const e=mn++,t=[];let r=null;try{r=yield this._getInternalBlockNumber(100+this.pollingInterval/2)}catch(o){return void this.emit(\"error\",o)}if(this._setFastBlockNumber(r),this.emit(\"poll\",e,r),r!==this._lastBlockNumber){if(-2===this._emitted.block&&(this._emitted.block=r-1),Math.abs(this._emitted.block-r)>1e3)on.warn(\"network block skew detected; skipping block events\"),this.emit(\"error\",on.makeError(\"network block skew detected\",u.b.errors.NETWORK_ERROR,{blockNumber:r,event:\"blockSkew\",previousBlockNumber:this._emitted.block})),this.emit(\"block\",r);else for(let e=this._emitted.block+1;e<=r;e++)this.emit(\"block\",e);this._emitted.block!==r&&(this._emitted.block=r,Object.keys(this._emitted).forEach((e=>{if(\"block\"===e)return;const t=this._emitted[e];\"pending\"!==t&&r-t>12&&delete this._emitted[e]}))),-2===this._lastBlockNumber&&(this._lastBlockNumber=r-1),this._events.forEach((e=>{switch(e.type){case\"tx\":{const r=e.hash;let o=this.getTransactionReceipt(r).then((e=>e&&null!=e.blockNumber?(this._emitted[\"t:\"+r]=e.blockNumber,this.emit(r,e),null):null)).catch((e=>{this.emit(\"error\",e)}));t.push(o);break}case\"filter\":{const o=e.filter;o.fromBlock=this._lastBlockNumber+1,o.toBlock=r;const n=this.getLogs(o).then((e=>{0!==e.length&&e.forEach((e=>{this._emitted[\"b:\"+e.blockHash]=e.blockNumber,this._emitted[\"t:\"+e.transactionHash]=e.blockNumber,this.emit(o,e)}))})).catch((e=>{this.emit(\"error\",e)}));t.push(n);break}}})),this._lastBlockNumber=r,Promise.all(t).then((()=>{this.emit(\"didPoll\",e)})).catch((e=>{this.emit(\"error\",e)}))}else this.emit(\"didPoll\",e)}))}resetEventsBlock(e){this._lastBlockNumber=e-1,this.polling&&this.poll()}get network(){return this._network}detectNetwork(){return rn(this,void 0,void 0,(function*(){return on.throwError(\"provider does not support network detection\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"provider.detectNetwork\"})}))}getNetwork(){return rn(this,void 0,void 0,(function*(){const e=yield this._ready(),t=yield this.detectNetwork();if(e.chainId!==t.chainId){if(this.anyNetwork)return this._network=t,this._lastBlockNumber=-2,this._fastBlockNumber=null,this._fastBlockNumberPromise=null,this._fastQueryDate=0,this._emitted.block=-2,this._maxInternalBlockNumber=-1024,this._internalBlockNumber=null,this.emit(\"network\",t,e),yield(r=0,new Promise((e=>{setTimeout(e,r)}))),this._network;const o=on.makeError(\"underlying network changed\",u.b.errors.NETWORK_ERROR,{event:\"changed\",network:e,detectedNetwork:t});throw this.emit(\"error\",o),o}var r;return e}))}get blockNumber(){return this._getInternalBlockNumber(100+this.pollingInterval/2).then((e=>{this._setFastBlockNumber(e)}),(e=>{})),null!=this._fastBlockNumber?this._fastBlockNumber:-1}get polling(){return null!=this._poller}set polling(e){e&&!this._poller?(this._poller=setInterval((()=>{this.poll()}),this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout((()=>{this.poll(),this._bootstrapPoll=setTimeout((()=>{this._poller||this.poll(),this._bootstrapPoll=null}),this.pollingInterval)}),0))):!e&&this._poller&&(clearInterval(this._poller),this._poller=null)}get pollingInterval(){return this._pollingInterval}set pollingInterval(e){if(\"number\"!==typeof e||e<=0||parseInt(String(e))!=e)throw new Error(\"invalid polling interval\");this._pollingInterval=e,this._poller&&(clearInterval(this._poller),this._poller=setInterval((()=>{this.poll()}),this._pollingInterval))}_getFastBlockNumber(){const e=ln();return e-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=e,this._fastBlockNumberPromise=this.getBlockNumber().then((e=>((null==this._fastBlockNumber||e>this._fastBlockNumber)&&(this._fastBlockNumber=e),this._fastBlockNumber)))),this._fastBlockNumberPromise}_setFastBlockNumber(e){null!=this._fastBlockNumber&&e<this._fastBlockNumber||(this._fastQueryDate=ln(),(null==this._fastBlockNumber||e>this._fastBlockNumber)&&(this._fastBlockNumber=e,this._fastBlockNumberPromise=Promise.resolve(e)))}waitForTransaction(e,t,r){return rn(this,void 0,void 0,(function*(){null==t&&(t=1);const o=yield this.getTransactionReceipt(e);return(o?o.confirmations:0)>=t?o:new Promise(((o,n)=>{let a=null,i=!1;const s=r=>{r.confirmations<t||(a&&clearTimeout(a),i||(i=!0,this.removeListener(e,s),o(r)))};this.on(e,s),\"number\"===typeof r&&r>0&&(a=setTimeout((()=>{i||(a=null,i=!0,this.removeListener(e,s),n(on.makeError(\"timeout exceeded\",u.b.errors.TIMEOUT,{timeout:r})))}),r),a.unref&&a.unref())}))}))}getBlockNumber(){return rn(this,void 0,void 0,(function*(){return this._getInternalBlockNumber(0)}))}getGasPrice(){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield this.perform(\"getGasPrice\",{});try{return l.a.from(e)}catch(t){return on.throwError(\"bad result from backend\",u.b.errors.SERVER_ERROR,{method:\"getGasPrice\",result:e,error:t})}}))}getBalance(e,t){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Object(c.f)({address:this._getAddress(e),blockTag:this._getBlockTag(t)}),o=yield this.perform(\"getBalance\",r);try{return l.a.from(o)}catch(n){return on.throwError(\"bad result from backend\",u.b.errors.SERVER_ERROR,{method:\"getBalance\",params:r,result:o,error:n})}}))}getTransactionCount(e,t){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Object(c.f)({address:this._getAddress(e),blockTag:this._getBlockTag(t)}),o=yield this.perform(\"getTransactionCount\",r);try{return l.a.from(o).toNumber()}catch(n){return on.throwError(\"bad result from backend\",u.b.errors.SERVER_ERROR,{method:\"getTransactionCount\",params:r,result:o,error:n})}}))}getCode(e,t){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Object(c.f)({address:this._getAddress(e),blockTag:this._getBlockTag(t)}),o=yield this.perform(\"getCode\",r);try{return Object(s.i)(o)}catch(n){return on.throwError(\"bad result from backend\",u.b.errors.SERVER_ERROR,{method:\"getCode\",params:r,result:o,error:n})}}))}getStorageAt(e,t,r){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const o=yield Object(c.f)({address:this._getAddress(e),blockTag:this._getBlockTag(r),position:Promise.resolve(t).then((e=>Object(s.g)(e)))}),n=yield this.perform(\"getStorageAt\",o);try{return Object(s.i)(n)}catch(a){return on.throwError(\"bad result from backend\",u.b.errors.SERVER_ERROR,{method:\"getStorageAt\",params:o,result:n,error:a})}}))}_wrapTransaction(e,t){if(null!=t&&32!==Object(s.d)(t))throw new Error(\"invalid response - sendTransaction\");const r=e;return null!=t&&e.hash!==t&&on.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\",u.b.errors.UNKNOWN_ERROR,{expectedHash:e.hash,returnedHash:t}),r.wait=t=>rn(this,void 0,void 0,(function*(){0!==t&&(this._emitted[\"t:\"+e.hash]=\"pending\");const r=yield this.waitForTransaction(e.hash,t);return null==r&&0===t?null:(this._emitted[\"t:\"+e.hash]=r.blockNumber,0===r.status&&on.throwError(\"transaction failed\",u.b.errors.CALL_EXCEPTION,{transactionHash:e.hash,transaction:e,receipt:r}),r)})),r}sendTransaction(e){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield Promise.resolve(e).then((e=>Object(s.i)(e))),r=this.formatter.transaction(e);try{const e=yield this.perform(\"sendTransaction\",{signedTransaction:t});return this._wrapTransaction(r,e)}catch(o){throw o.transaction=r,o.transactionHash=r.hash,o}}))}_getTransactionRequest(e){return rn(this,void 0,void 0,(function*(){const t=yield e,r={};return[\"from\",\"to\"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>e?this._getAddress(e):null)))})),[\"gasLimit\",\"gasPrice\",\"value\"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>e?l.a.from(e):null)))})),[\"type\"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>null!=e?e:null)))})),t.accessList&&(r.accessList=this.formatter.accessList(t.accessList)),[\"data\"].forEach((e=>{null!=t[e]&&(r[e]=Promise.resolve(t[e]).then((e=>e?Object(s.i)(e):null)))})),this.formatter.transactionRequest(yield Object(c.f)(r))}))}_getFilter(e){return rn(this,void 0,void 0,(function*(){e=yield e;const t={};return null!=e.address&&(t.address=this._getAddress(e.address)),[\"blockHash\",\"topics\"].forEach((r=>{null!=e[r]&&(t[r]=e[r])})),[\"fromBlock\",\"toBlock\"].forEach((r=>{null!=e[r]&&(t[r]=this._getBlockTag(e[r]))})),this.formatter.filter(yield Object(c.f)(t))}))}call(e,t){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Object(c.f)({transaction:this._getTransactionRequest(e),blockTag:this._getBlockTag(t)}),o=yield this.perform(\"call\",r);try{return Object(s.i)(o)}catch(n){return on.throwError(\"bad result from backend\",u.b.errors.SERVER_ERROR,{method:\"call\",params:r,result:o,error:n})}}))}estimateGas(e){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield Object(c.f)({transaction:this._getTransactionRequest(e)}),r=yield this.perform(\"estimateGas\",t);try{return l.a.from(r)}catch(o){return on.throwError(\"bad result from backend\",u.b.errors.SERVER_ERROR,{method:\"estimateGas\",params:t,result:r,error:o})}}))}_getAddress(e){return rn(this,void 0,void 0,(function*(){const t=yield this.resolveName(e);return null==t&&on.throwError(\"ENS name not configured\",u.b.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(e)})`}),t}))}_getBlock(e,t){return rn(this,void 0,void 0,(function*(){yield this.getNetwork(),e=yield e;let r=-128;const o={includeTransactions:!!t};if(Object(s.l)(e,32))o.blockHash=e;else try{o.blockTag=this.formatter.blockTag(yield this._getBlockTag(e)),Object(s.l)(o.blockTag)&&(r=parseInt(o.blockTag.substring(2),16))}catch(n){on.throwArgumentError(\"invalid block hash or block tag\",\"blockHashOrBlockTag\",e)}return Vo((()=>rn(this,void 0,void 0,(function*(){const e=yield this.perform(\"getBlock\",o);if(null==e)return null!=o.blockHash&&null==this._emitted[\"b:\"+o.blockHash]||null!=o.blockTag&&r>this._emitted.block?null:void 0;if(t){let t=null;for(let r=0;r<e.transactions.length;r++){const o=e.transactions[r];if(null==o.blockNumber)o.confirmations=0;else if(null==o.confirmations){null==t&&(t=yield this._getInternalBlockNumber(100+2*this.pollingInterval));let e=t-o.blockNumber+1;e<=0&&(e=1),o.confirmations=e}}return this.formatter.blockWithTransactions(e)}return this.formatter.block(e)}))),{oncePoll:this})}))}getBlock(e){return this._getBlock(e,!1)}getBlockWithTransactions(e){return this._getBlock(e,!0)}getTransaction(e){return rn(this,void 0,void 0,(function*(){yield this.getNetwork(),e=yield e;const t={transactionHash:this.formatter.hash(e,!0)};return Vo((()=>rn(this,void 0,void 0,(function*(){const r=yield this.perform(\"getTransaction\",t);if(null==r)return null==this._emitted[\"t:\"+e]?null:void 0;const o=this.formatter.transactionResponse(r);if(null==o.blockNumber)o.confirmations=0;else if(null==o.confirmations){let e=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-o.blockNumber+1;e<=0&&(e=1),o.confirmations=e}return this._wrapTransaction(o)}))),{oncePoll:this})}))}getTransactionReceipt(e){return rn(this,void 0,void 0,(function*(){yield this.getNetwork(),e=yield e;const t={transactionHash:this.formatter.hash(e,!0)};return Vo((()=>rn(this,void 0,void 0,(function*(){const r=yield this.perform(\"getTransactionReceipt\",t);if(null==r)return null==this._emitted[\"t:\"+e]?null:void 0;if(null==r.blockHash)return;const o=this.formatter.receipt(r);if(null==o.blockNumber)o.confirmations=0;else if(null==o.confirmations){let e=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-o.blockNumber+1;e<=0&&(e=1),o.confirmations=e}return o}))),{oncePoll:this})}))}getLogs(e){return rn(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield Object(c.f)({filter:this._getFilter(e)}),r=yield this.perform(\"getLogs\",t);return r.forEach((e=>{null==e.removed&&(e.removed=!1)})),qo.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)}))}getEtherPrice(){return rn(this,void 0,void 0,(function*(){return yield this.getNetwork(),this.perform(\"getEtherPrice\",{})}))}_getBlockTag(e){return rn(this,void 0,void 0,(function*(){if(\"number\"===typeof(e=yield e)&&e<0){e%1&&on.throwArgumentError(\"invalid BlockTag\",\"blockTag\",e);let t=yield this._getInternalBlockNumber(100+2*this.pollingInterval);return t+=e,t<0&&(t=0),this.formatter.blockTag(t)}return this.formatter.blockTag(e)}))}getResolver(e){return rn(this,void 0,void 0,(function*(){const t=yield this._getResolver(e);return null==t?null:new pn(this,t,e)}))}_getResolver(e){return rn(this,void 0,void 0,(function*(){const t=yield this.getNetwork();t.ensAddress||on.throwError(\"network does not support ENS\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"ENS\",network:t.name});const r={to:t.ensAddress,data:\"0x0178b8bf\"+Ro(e).substring(2)};return this.formatter.callAddress(yield this.call(r))}))}resolveName(e){return rn(this,void 0,void 0,(function*(){e=yield e;try{return Promise.resolve(this.formatter.address(e))}catch(r){if(Object(s.l)(e))throw r}\"string\"!==typeof e&&on.throwArgumentError(\"invalid ENS name\",\"name\",e);const t=yield this.getResolver(e);return t?yield t.getAddress():null}))}lookupAddress(e){return rn(this,void 0,void 0,(function*(){e=yield e;const t=(e=this.formatter.address(e)).substring(2).toLowerCase()+\".addr.reverse\",r=yield this._getResolver(t);if(!r)return null;let o=Object(s.a)(yield this.call({to:r,data:\"0x691f3431\"+Ro(t).substring(2)}));if(o.length<32||!l.a.from(o.slice(0,32)).eq(32))return null;if(o=o.slice(32),o.length<32)return null;const n=l.a.from(o.slice(0,32)).toNumber();if(o=o.slice(32),n>o.length)return null;const a=Object(M.h)(o.slice(0,n));return(yield this.resolveName(a))!=e?null:a}))}perform(e,t){return on.throwError(e+\" not implemented\",u.b.errors.NOT_IMPLEMENTED,{operation:e})}_startEvent(e){this.polling=this._events.filter((e=>e.pollable())).length>0}_stopEvent(e){this.polling=this._events.filter((e=>e.pollable())).length>0}_addEventListener(e,t,r){const o=new un(sn(e),t,r);return this._events.push(o),this._startEvent(o),this}on(e,t){return this._addEventListener(e,t,!1)}once(e,t){return this._addEventListener(e,t,!0)}emit(e,...t){let r=!1,o=[],n=sn(e);return this._events=this._events.filter((e=>e.tag!==n||(setTimeout((()=>{e.listener.apply(this,t)}),0),r=!0,!e.once||(o.push(e),!1)))),o.forEach((e=>{this._stopEvent(e)})),r}listenerCount(e){if(!e)return this._events.length;let t=sn(e);return this._events.filter((e=>e.tag===t)).length}listeners(e){if(null==e)return this._events.map((e=>e.listener));let t=sn(e);return this._events.filter((e=>e.tag===t)).map((e=>e.listener))}off(e,t){if(null==t)return this.removeAllListeners(e);const r=[];let o=!1,n=sn(e);return this._events=this._events.filter((e=>e.tag!==n||e.listener!=t||(!!o||(o=!0,r.push(e),!1)))),r.forEach((e=>{this._stopEvent(e)})),this}removeAllListeners(e){let t=[];if(null==e)t=this._events,this._events=[];else{const r=sn(e);this._events=this._events.filter((e=>e.tag!==r||(t.push(e),!1)))}return t.forEach((e=>{this._stopEvent(e)})),this}}var vn=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const Tn=new u.b(Ko),An=[\"call\",\"estimateGas\"];function yn(e,t,r){if(\"call\"===e&&t.code===u.b.errors.SERVER_ERROR){const e=t.error;if(e&&e.message.match(\"reverted\")&&Object(s.l)(e.data))return e.data}let o=t.message;t.code===u.b.errors.SERVER_ERROR&&t.error&&\"string\"===typeof t.error.message?o=t.error.message:\"string\"===typeof t.body?o=t.body:\"string\"===typeof t.responseText&&(o=t.responseText),o=(o||\"\").toLowerCase();const n=r.transaction||r.signedTransaction;throw o.match(/insufficient funds/)&&Tn.throwError(\"insufficient funds for intrinsic transaction cost\",u.b.errors.INSUFFICIENT_FUNDS,{error:t,method:e,transaction:n}),o.match(/nonce too low/)&&Tn.throwError(\"nonce has already been used\",u.b.errors.NONCE_EXPIRED,{error:t,method:e,transaction:n}),o.match(/replacement transaction underpriced/)&&Tn.throwError(\"replacement fee too low\",u.b.errors.REPLACEMENT_UNDERPRICED,{error:t,method:e,transaction:n}),An.indexOf(e)>=0&&o.match(/gas required exceeds allowance|always failing transaction|execution reverted/)&&Tn.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\",u.b.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,method:e,transaction:n}),t}function Sn(e){return new Promise((function(t){setTimeout(t,e)}))}function En(e){if(e.error){const t=new Error(e.error.message);throw t.code=e.error.code,t.data=e.error.data,t}return e.result}function On(e){return e?e.toLowerCase():e}const Cn={};class kn extends ye{constructor(e,t,r){if(Tn.checkNew(new.target,kn),super(),e!==Cn)throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");Object(c.d)(this,\"provider\",t),null==r&&(r=0),\"string\"===typeof r?(Object(c.d)(this,\"_address\",this.provider.formatter.address(r)),Object(c.d)(this,\"_index\",null)):\"number\"===typeof r?(Object(c.d)(this,\"_index\",r),Object(c.d)(this,\"_address\",null)):Tn.throwArgumentError(\"invalid address or index\",\"addressOrIndex\",r)}connect(e){return Tn.throwError(\"cannot alter JSON-RPC Signer connection\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"connect\"})}connectUnchecked(){return new Fn(Cn,this.provider,this._address||this._index)}getAddress(){return this._address?Promise.resolve(this._address):this.provider.send(\"eth_accounts\",[]).then((e=>(e.length<=this._index&&Tn.throwError(\"unknown account #\"+this._index,u.b.errors.UNSUPPORTED_OPERATION,{operation:\"getAddress\"}),this.provider.formatter.address(e[this._index]))))}sendUncheckedTransaction(e){e=Object(c.g)(e);const t=this.getAddress().then((e=>(e&&(e=e.toLowerCase()),e)));if(null==e.gasLimit){const r=Object(c.g)(e);r.from=t,e.gasLimit=this.provider.estimateGas(r)}return Object(c.f)({tx:Object(c.f)(e),sender:t}).then((({tx:t,sender:r})=>{null!=t.from?t.from.toLowerCase()!==r&&Tn.throwArgumentError(\"from address mismatch\",\"transaction\",e):t.from=r;const o=this.provider.constructor.hexlifyTransaction(t,{from:!0});return this.provider.send(\"eth_sendTransaction\",[o]).then((e=>e),(e=>yn(\"sendTransaction\",e,o)))}))}signTransaction(e){return Tn.throwError(\"signing transactions is unsupported\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"signTransaction\"})}sendTransaction(e){return this.sendUncheckedTransaction(e).then((e=>Vo((()=>this.provider.getTransaction(e).then((t=>{if(null!==t)return this.provider._wrapTransaction(t,e)}))),{onceBlock:this.provider}).catch((t=>{throw t.transactionHash=e,t}))))}signMessage(e){return vn(this,void 0,void 0,(function*(){const t=\"string\"===typeof e?Object(M.f)(e):e,r=yield this.getAddress();return yield this.provider.send(\"eth_sign\",[r.toLowerCase(),Object(s.i)(t)])}))}_signTypedData(e,t,r){return vn(this,void 0,void 0,(function*(){const o=yield bt.resolveNames(e,t,r,(e=>this.provider.resolveName(e))),n=yield this.getAddress();return yield this.provider.send(\"eth_signTypedData_v4\",[n.toLowerCase(),JSON.stringify(bt.getPayload(o.domain,t,o.value))])}))}unlock(e){return vn(this,void 0,void 0,(function*(){const t=this.provider,r=yield this.getAddress();return t.send(\"personal_unlockAccount\",[r.toLowerCase(),e,null])}))}}class Fn extends kn{sendTransaction(e){return this.sendUncheckedTransaction(e).then((e=>({hash:e,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:t=>this.provider.waitForTransaction(e,t)})))}}const Jn={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0};class Bn extends bn{constructor(e,t){Tn.checkNew(new.target,Bn);let r=t;null==r&&(r=new Promise(((e,t)=>{setTimeout((()=>{this.detectNetwork().then((t=>{e(t)}),(e=>{t(e)}))}),0)}))),super(r),e||(e=Object(c.e)(this.constructor,\"defaultUrl\")()),\"string\"===typeof e?Object(c.d)(this,\"connection\",Object.freeze({url:e})):Object(c.d)(this,\"connection\",Object.freeze(Object(c.g)(e))),this._nextId=42}static defaultUrl(){return\"http://localhost:8545\"}detectNetwork(){return vn(this,void 0,void 0,(function*(){yield Sn(0);let e=null;try{e=yield this.send(\"eth_chainId\",[])}catch(t){try{e=yield this.send(\"net_version\",[])}catch(t){}}if(null!=e){const r=Object(c.e)(this.constructor,\"getNetwork\");try{return r(l.a.from(e).toNumber())}catch(t){return Tn.throwError(\"could not detect network\",u.b.errors.NETWORK_ERROR,{chainId:e,event:\"invalidNetwork\",serverError:t})}}return Tn.throwError(\"could not detect network\",u.b.errors.NETWORK_ERROR,{event:\"noNetwork\"})}))}getSigner(e){return new kn(Cn,this,e)}getUncheckedSigner(e){return this.getSigner(e).connectUnchecked()}listAccounts(){return this.send(\"eth_accounts\",[]).then((e=>e.map((e=>this.formatter.address(e)))))}send(e,t){const r={method:e,params:t,id:this._nextId++,jsonrpc:\"2.0\"};return this.emit(\"debug\",{action:\"request\",request:Object(c.c)(r),provider:this}),xo(this.connection,JSON.stringify(r),En).then((e=>(this.emit(\"debug\",{action:\"response\",request:r,response:e,provider:this}),e)),(e=>{throw this.emit(\"debug\",{action:\"response\",error:e,request:r,provider:this}),e}))}prepareRequest(e,t){switch(e){case\"getBlockNumber\":return[\"eth_blockNumber\",[]];case\"getGasPrice\":return[\"eth_gasPrice\",[]];case\"getBalance\":return[\"eth_getBalance\",[On(t.address),t.blockTag]];case\"getTransactionCount\":return[\"eth_getTransactionCount\",[On(t.address),t.blockTag]];case\"getCode\":return[\"eth_getCode\",[On(t.address),t.blockTag]];case\"getStorageAt\":return[\"eth_getStorageAt\",[On(t.address),t.position,t.blockTag]];case\"sendTransaction\":return[\"eth_sendRawTransaction\",[t.signedTransaction]];case\"getBlock\":return t.blockTag?[\"eth_getBlockByNumber\",[t.blockTag,!!t.includeTransactions]]:t.blockHash?[\"eth_getBlockByHash\",[t.blockHash,!!t.includeTransactions]]:null;case\"getTransaction\":return[\"eth_getTransactionByHash\",[t.transactionHash]];case\"getTransactionReceipt\":return[\"eth_getTransactionReceipt\",[t.transactionHash]];case\"call\":return[\"eth_call\",[Object(c.e)(this.constructor,\"hexlifyTransaction\")(t.transaction,{from:!0}),t.blockTag]];case\"estimateGas\":return[\"eth_estimateGas\",[Object(c.e)(this.constructor,\"hexlifyTransaction\")(t.transaction,{from:!0})]];case\"getLogs\":return t.filter&&null!=t.filter.address&&(t.filter.address=On(t.filter.address)),[\"eth_getLogs\",[t.filter]]}return null}perform(e,t){return vn(this,void 0,void 0,(function*(){const r=this.prepareRequest(e,t);null==r&&Tn.throwError(e+\" not implemented\",u.b.errors.NOT_IMPLEMENTED,{operation:e});try{return yield this.send(r[0],r[1])}catch(o){return yn(e,o,t)}}))}_startEvent(e){\"pending\"===e.tag&&this._startPending(),super._startEvent(e)}_startPending(){if(null!=this._pendingFilter)return;const e=this,t=this.send(\"eth_newPendingTransactionFilter\",[]);this._pendingFilter=t,t.then((function(r){return function o(){e.send(\"eth_getFilterChanges\",[r]).then((function(r){if(e._pendingFilter!=t)return null;let o=Promise.resolve();return r.forEach((function(t){e._emitted[\"t:\"+t.toLowerCase()]=\"pending\",o=o.then((function(){return e.getTransaction(t).then((function(t){return e.emit(\"pending\",t),null}))}))})),o.then((function(){return Sn(1e3)}))})).then((function(){if(e._pendingFilter==t)return setTimeout((function(){o()}),0),null;e.send(\"eth_uninstallFilter\",[r])})).catch((e=>{}))}(),r})).catch((e=>{}))}_stopEvent(e){\"pending\"===e.tag&&0===this.listenerCount(\"pending\")&&(this._pendingFilter=null),super._stopEvent(e)}static hexlifyTransaction(e,t){const r=Object(c.g)(Jn);if(t)for(const n in t)t[n]&&(r[n]=!0);Object(c.b)(e,r);const o={};return[\"gasLimit\",\"gasPrice\",\"type\",\"nonce\",\"value\"].forEach((function(t){if(null==e[t])return;const r=Object(s.g)(e[t]);\"gasLimit\"===t&&(t=\"gas\"),o[t]=r})),[\"from\",\"to\",\"data\"].forEach((function(t){null!=e[t]&&(o[t]=Object(s.i)(e[t]))})),e.accessList&&(o.accessList=Object(Ee.accessListify)(e.accessList)),o}}let Ln=null;try{if(Ln=WebSocket,null==Ln)throw new Error(\"inject please\")}catch(Wa){const e=new u.b(Ko);Ln=function(){e.throwError(\"WebSockets not supported in this environment\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"new WebSocket()\"})}}var wn=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const Pn=new u.b(Ko);let Mn=1;class Rn extends Bn{constructor(e,t){\"any\"===t&&Pn.throwError(\"WebSocketProvider does not support 'any' network yet\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"network:any\"}),super(e,t),this._pollingInterval=-1,this._wsReady=!1,Object(c.d)(this,\"_websocket\",new Ln(this.connection.url)),Object(c.d)(this,\"_requests\",{}),Object(c.d)(this,\"_subs\",{}),Object(c.d)(this,\"_subIds\",{}),Object(c.d)(this,\"_detectNetwork\",super.detectNetwork()),this._websocket.onopen=()=>{this._wsReady=!0,Object.keys(this._requests).forEach((e=>{this._websocket.send(this._requests[e].payload)}))},this._websocket.onmessage=e=>{const t=e.data,r=JSON.parse(t);if(null!=r.id){const e=String(r.id),o=this._requests[e];if(delete this._requests[e],void 0!==r.result)o.callback(null,r.result),this.emit(\"debug\",{action:\"response\",request:JSON.parse(o.payload),response:r.result,provider:this});else{let e=null;r.error?(e=new Error(r.error.message||\"unknown error\"),Object(c.d)(e,\"code\",r.error.code||null),Object(c.d)(e,\"response\",t)):e=new Error(\"unknown error\"),o.callback(e,void 0),this.emit(\"debug\",{action:\"response\",error:e,request:JSON.parse(o.payload),provider:this})}}else if(\"eth_subscription\"===r.method){const e=this._subs[r.params.subscription];e&&e.processFunc(r.params.result)}else console.warn(\"this should not happen\")};const r=setInterval((()=>{this.emit(\"poll\")}),1e3);r.unref&&r.unref()}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(e){Pn.throwError(\"cannot reset events block on WebSocketProvider\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"resetEventBlock\"})}set pollingInterval(e){Pn.throwError(\"cannot set polling interval on WebSocketProvider\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"setPollingInterval\"})}poll(){return wn(this,void 0,void 0,(function*(){return null}))}set polling(e){e&&Pn.throwError(\"cannot set polling on WebSocketProvider\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"setPolling\"})}send(e,t){const r=Mn++;return new Promise(((o,n)=>{const a=JSON.stringify({method:e,params:t,id:r,jsonrpc:\"2.0\"});this.emit(\"debug\",{action:\"request\",request:JSON.parse(a),provider:this}),this._requests[String(r)]={callback:function(e,t){return e?n(e):o(t)},payload:a},this._wsReady&&this._websocket.send(a)}))}static defaultUrl(){return\"ws://localhost:8546\"}_subscribe(e,t,r){return wn(this,void 0,void 0,(function*(){let o=this._subIds[e];null==o&&(o=Promise.all(t).then((e=>this.send(\"eth_subscribe\",e))),this._subIds[e]=o);const n=yield o;this._subs[n]={tag:e,processFunc:r}}))}_startEvent(e){switch(e.type){case\"block\":this._subscribe(\"block\",[\"newHeads\"],(e=>{const t=l.a.from(e.number).toNumber();this._emitted.block=t,this.emit(\"block\",t)}));break;case\"pending\":this._subscribe(\"pending\",[\"newPendingTransactions\"],(e=>{this.emit(\"pending\",e)}));break;case\"filter\":this._subscribe(e.tag,[\"logs\",this._getFilter(e.filter)],(t=>{null==t.removed&&(t.removed=!1),this.emit(e.filter,this.formatter.filterLog(t))}));break;case\"tx\":{const t=e=>{const t=e.hash;this.getTransactionReceipt(t).then((e=>{e&&this.emit(t,e)}))};t(e),this._subscribe(\"tx\",[\"newHeads\"],(e=>{this._events.filter((e=>\"tx\"===e.type)).forEach(t)}));break}case\"debug\":case\"poll\":case\"willPoll\":case\"didPoll\":case\"error\":break;default:console.log(\"unhandled:\",e)}}_stopEvent(e){let t=e.tag;if(\"tx\"===e.type){if(this._events.filter((e=>\"tx\"===e.type)).length)return;t=\"tx\"}else if(this.listenerCount(e.event))return;const r=this._subIds[t];r&&(delete this._subIds[t],r.then((e=>{this._subs[e]&&(delete this._subs[e],this.send(\"eth_unsubscribe\",[e]))})))}destroy(){return wn(this,void 0,void 0,(function*(){this._websocket.readyState===Ln.CONNECTING&&(yield new Promise((e=>{this._websocket.onopen=function(){e(!0)},this._websocket.onerror=function(){e(!1)}}))),this._websocket.close(1e3)}))}}var Dn=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const Nn=new u.b(Ko);class jn extends Bn{detectNetwork(){const e=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return Dn(this,void 0,void 0,(function*(){let t=this.network;return null==t&&(t=yield e.detectNetwork.call(this),t||Nn.throwError(\"no network detected\",u.b.errors.UNKNOWN_ERROR,{}),null==this._network&&(Object(c.d)(this,\"_network\",t),this.emit(\"network\",t,null))),t}))}}class Xn extends jn{constructor(e,t){Nn.checkAbstract(new.target,Xn),e=Object(c.e)(new.target,\"getNetwork\")(e),t=Object(c.e)(new.target,\"getApiKey\")(t);super(Object(c.e)(new.target,\"getUrl\")(e,t),e),\"string\"===typeof t?Object(c.d)(this,\"apiKey\",t):null!=t&&Object.keys(t).forEach((e=>{Object(c.d)(this,e,t[e])}))}_startPending(){Nn.warn(\"WARNING: API provider does not support pending filters\")}isCommunityResource(){return!1}getSigner(e){return Nn.throwError(\"API provider does not support signing\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"getSigner\"})}listAccounts(){return Promise.resolve([])}static getApiKey(e){return e}static getUrl(e,t){return Nn.throwError(\"not implemented; sub-classes must override getUrl\",u.b.errors.NOT_IMPLEMENTED,{operation:\"getUrl\"})}}const In=new u.b(Ko),Hn=\"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";class _n extends Rn{constructor(e,t){const r=new Gn(e,t);super(r.connection.url.replace(/^http/i,\"ws\").replace(\".alchemyapi.\",\".ws.alchemyapi.\"),r.network),Object(c.d)(this,\"apiKey\",r.apiKey)}isCommunityResource(){return this.apiKey===Hn}}class Gn extends Xn{static getWebSocketProvider(e,t){return new _n(e,t)}static getApiKey(e){return null==e?Hn:(e&&\"string\"!==typeof e&&In.throwArgumentError(\"invalid apiKey\",\"apiKey\",e),e)}static getUrl(e,t){let r=null;switch(e.name){case\"homestead\":r=\"eth-mainnet.alchemyapi.io/v2/\";break;case\"ropsten\":r=\"eth-ropsten.alchemyapi.io/v2/\";break;case\"rinkeby\":r=\"eth-rinkeby.alchemyapi.io/v2/\";break;case\"goerli\":r=\"eth-goerli.alchemyapi.io/v2/\";break;case\"kovan\":r=\"eth-kovan.alchemyapi.io/v2/\";break;default:In.throwArgumentError(\"unsupported network\",\"network\",arguments[0])}return{allowGzip:!0,url:\"https://\"+r+t,throttleCallback:(e,r)=>(t===Hn&&tn(),Promise.resolve(!0))}}isCommunityResource(){return this.apiKey===Hn}}var Un=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const xn=new u.b(Ko);class Vn extends Xn{static getApiKey(e){return null!=e&&xn.throwArgumentError(\"apiKey not supported for cloudflare\",\"apiKey\",e),null}static getUrl(e,t){let r=null;switch(e.name){case\"homestead\":r=\"https://cloudflare-eth.com/\";break;default:xn.throwArgumentError(\"unsupported network\",\"network\",arguments[0])}return r}perform(e,t){const r=Object.create(null,{perform:{get:()=>super.perform}});return Un(this,void 0,void 0,(function*(){if(\"getBlockNumber\"===e){return(yield r.perform.call(this,\"getBlock\",{blockTag:\"latest\"})).number}return r.perform.call(this,e,t)}))}}var zn=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const Zn=new u.b(Ko);function Kn(e){const t={};for(let r in e){if(null==e[r])continue;let o=e[r];o={type:!0,gasLimit:!0,gasPrice:!0,nonce:!0,value:!0}[r]?Object(s.g)(Object(s.i)(o)):\"accessList\"===r?o:Object(s.i)(o),t[r]=o}return t}function Qn(e){if(0==e.status&&(\"No records found\"===e.message||\"No transactions found\"===e.message))return e.result;if(1!=e.status||\"OK\"!=e.message){const t=new Error(\"invalid response\");throw t.result=JSON.stringify(e),(e.result||\"\").toLowerCase().indexOf(\"rate limit\")>=0&&(t.throttleRetry=!0),t}return e.result}function Yn(e){if(e&&0==e.status&&\"NOTOK\"==e.message&&(e.result||\"\").toLowerCase().indexOf(\"rate limit\")>=0){const t=new Error(\"throttled response\");throw t.result=JSON.stringify(e),t.throttleRetry=!0,t}if(\"2.0\"!=e.jsonrpc){const t=new Error(\"invalid response\");throw t.result=JSON.stringify(e),t}if(e.error){const t=new Error(e.error.message||\"unknown error\");throw e.error.code&&(t.code=e.error.code),e.error.data&&(t.data=e.error.data),t}return e.result}function qn(e){if(\"pending\"===e)throw new Error(\"pending not supported\");return\"latest\"===e?e:parseInt(e.substring(2),16)}const Wn=\"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";function $n(e,t,r){if(\"call\"===e&&t.code===u.b.errors.SERVER_ERROR){const e=t.error;if(e&&e.message.match(\"reverted\")&&Object(s.l)(e.data))return e.data}let o=t.message;throw t.code===u.b.errors.SERVER_ERROR&&(t.error&&\"string\"===typeof t.error.message?o=t.error.message:\"string\"===typeof t.body?o=t.body:\"string\"===typeof t.responseText&&(o=t.responseText)),o=(o||\"\").toLowerCase(),o.match(/insufficient funds/)&&Zn.throwError(\"insufficient funds for intrinsic transaction cost\",u.b.errors.INSUFFICIENT_FUNDS,{error:t,method:e,transaction:r}),o.match(/same hash was already imported|transaction nonce is too low/)&&Zn.throwError(\"nonce has already been used\",u.b.errors.NONCE_EXPIRED,{error:t,method:e,transaction:r}),o.match(/another transaction with same nonce/)&&Zn.throwError(\"replacement fee too low\",u.b.errors.REPLACEMENT_UNDERPRICED,{error:t,method:e,transaction:r}),o.match(/execution failed due to an exception/)&&Zn.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\",u.b.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,method:e,transaction:r}),t}class ea extends bn{constructor(e,t){Zn.checkNew(new.target,ea),super(e);let r=\"invalid\";this.network&&(r=this.network.name);let o=null;switch(r){case\"homestead\":o=\"https://api.etherscan.io\";break;case\"ropsten\":o=\"https://api-ropsten.etherscan.io\";break;case\"rinkeby\":o=\"https://api-rinkeby.etherscan.io\";break;case\"kovan\":o=\"https://api-kovan.etherscan.io\";break;case\"goerli\":o=\"https://api-goerli.etherscan.io\";break;default:throw new Error(\"unsupported network\")}Object(c.d)(this,\"baseUrl\",o),Object(c.d)(this,\"apiKey\",t||Wn)}detectNetwork(){return zn(this,void 0,void 0,(function*(){return this.network}))}perform(e,t){const r=Object.create(null,{perform:{get:()=>super.perform}});return zn(this,void 0,void 0,(function*(){let o=this.baseUrl+\"/api\",n=\"\";this.apiKey&&(n+=\"&apikey=\"+this.apiKey);const a=(e,t,r)=>zn(this,void 0,void 0,(function*(){this.emit(\"debug\",{action:\"request\",request:e,provider:this});const o={url:e,throttleSlotInterval:1e3,throttleCallback:(e,t)=>(this.isCommunityResource()&&tn(),Promise.resolve(!0))};let n=null;t&&(o.headers={\"content-type\":\"application/x-www-form-urlencoded; charset=UTF-8\"},n=Object.keys(t).map((e=>`${e}=${t[e]}`)).join(\"&\"));const a=yield xo(o,n,r||Yn);return this.emit(\"debug\",{action:\"response\",request:e,response:Object(c.c)(a),provider:this}),a}));switch(e){case\"getBlockNumber\":return o+=\"?module=proxy&action=eth_blockNumber\"+n,a(o,null);case\"getGasPrice\":return o+=\"?module=proxy&action=eth_gasPrice\"+n,a(o,null);case\"getBalance\":return o+=\"?module=account&action=balance&address=\"+t.address,o+=\"&tag=\"+t.blockTag+n,a(o,null,Qn);case\"getTransactionCount\":return o+=\"?module=proxy&action=eth_getTransactionCount&address=\"+t.address,o+=\"&tag=\"+t.blockTag+n,a(o,null);case\"getCode\":return o+=\"?module=proxy&action=eth_getCode&address=\"+t.address,o+=\"&tag=\"+t.blockTag+n,a(o,null);case\"getStorageAt\":return o+=\"?module=proxy&action=eth_getStorageAt&address=\"+t.address,o+=\"&position=\"+t.position,o+=\"&tag=\"+t.blockTag+n,a(o,null);case\"sendTransaction\":return a(o,{module:\"proxy\",action:\"eth_sendRawTransaction\",hex:t.signedTransaction,apikey:this.apiKey}).catch((e=>$n(\"sendTransaction\",e,t.signedTransaction)));case\"getBlock\":if(t.blockTag)return o+=\"?module=proxy&action=eth_getBlockByNumber&tag=\"+t.blockTag,t.includeTransactions?o+=\"&boolean=true\":o+=\"&boolean=false\",o+=n,a(o,null);throw new Error(\"getBlock by blockHash not implemented\");case\"getTransaction\":return o+=\"?module=proxy&action=eth_getTransactionByHash&txhash=\"+t.transactionHash,o+=n,a(o,null);case\"getTransactionReceipt\":return o+=\"?module=proxy&action=eth_getTransactionReceipt&txhash=\"+t.transactionHash,o+=n,a(o,null);case\"call\":{if(null!=t.transaction.type&&Zn.throwError(\"Etherscan does not currently support Berlin\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"call\",transaction:t.transaction}),\"latest\"!==t.blockTag)throw new Error(\"EtherscanProvider does not support blockTag for call\");const e=Kn(t.transaction);e.module=\"proxy\",e.action=\"eth_call\",e.apikey=this.apiKey;try{return yield a(o,e)}catch(Wa){return $n(\"call\",Wa,t.transaction)}}case\"estimateGas\":{null!=t.transaction.type&&Zn.throwError(\"Etherscan does not currently support Berlin\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"estimateGas\",transaction:t.transaction});const e=Kn(t.transaction);e.module=\"proxy\",e.action=\"eth_estimateGas\",e.apikey=this.apiKey;try{return yield a(o,e)}catch(Wa){return $n(\"estimateGas\",Wa,t.transaction)}}case\"getLogs\":{if(o+=\"?module=logs&action=getLogs\",t.filter.fromBlock&&(o+=\"&fromBlock=\"+qn(t.filter.fromBlock)),t.filter.toBlock&&(o+=\"&toBlock=\"+qn(t.filter.toBlock)),t.filter.address&&(o+=\"&address=\"+t.filter.address),t.filter.topics&&t.filter.topics.length>0&&(t.filter.topics.length>1&&Zn.throwError(\"unsupported topic count\",u.b.errors.UNSUPPORTED_OPERATION,{topics:t.filter.topics}),1===t.filter.topics.length)){const e=t.filter.topics[0];\"string\"===typeof e&&66===e.length||Zn.throwError(\"unsupported topic format\",u.b.errors.UNSUPPORTED_OPERATION,{topic0:e}),o+=\"&topic0=\"+e}o+=n;const e=yield a(o,null,Qn);let r={};for(let t=0;t<e.length;t++){const o=e[t];if(null==o.blockHash){if(null==r[o.blockNumber]){const e=yield this.getBlock(o.blockNumber);e&&(r[o.blockNumber]=e.hash)}o.blockHash=r[o.blockNumber]}}return e}case\"getEtherPrice\":return\"homestead\"!==this.network.name?0:(o+=\"?module=stats&action=ethprice\",o+=n,parseFloat((yield a(o,null,Qn)).ethusd))}return r.perform.call(this,e,t)}))}getHistory(e,t,r){let o=this.baseUrl,n=\"\";return this.apiKey&&(n+=\"&apikey=\"+this.apiKey),null==t&&(t=0),null==r&&(r=99999999),this.resolveName(e).then((e=>{o+=\"/api?module=account&action=txlist&address=\"+e,o+=\"&startblock=\"+t,o+=\"&endblock=\"+r,o+=\"&sort=asc\"+n,this.emit(\"debug\",{action:\"request\",request:o,provider:this});return xo({url:o,throttleSlotInterval:1e3,throttleCallback:(e,t)=>(this.apiKey===Wn&&tn(),Promise.resolve(!0))},null,Qn).then((e=>{this.emit(\"debug\",{action:\"response\",request:o,response:Object(c.c)(e),provider:this});let t=[];return e.forEach((e=>{[\"contractAddress\",\"to\"].forEach((function(t){\"\"==e[t]&&delete e[t]})),null==e.creates&&null!=e.contractAddress&&(e.creates=e.contractAddress);let r=this.formatter.transactionResponse(e);e.timeStamp&&(r.timestamp=parseInt(e.timeStamp)),t.push(r)})),t}))}))}isCommunityResource(){return this.apiKey===Wn}}function ta(e){for(let t=(e=e.slice()).length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1)),o=e[t];e[t]=e[r],e[r]=o}return e}var ra=function(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const oa=new u.b(Ko);function na(){return(new Date).getTime()}function aa(e){let t=null;for(let r=0;r<e.length;r++){const o=e[r];if(null==o)return null;t?t.name===o.name&&t.chainId===o.chainId&&(t.ensAddress===o.ensAddress||null==t.ensAddress&&null==o.ensAddress)||oa.throwArgumentError(\"provider mismatch\",\"networks\",e):t=o}return t}function ia(e,t){e=e.slice().sort();const r=Math.floor(e.length/2);if(e.length%2)return e[r];const o=e[r-1],n=e[r];return null!=t&&Math.abs(o-n)>t?null:(o+n)/2}function sa(e){if(null===e)return\"null\";if(\"number\"===typeof e||\"boolean\"===typeof e)return JSON.stringify(e);if(\"string\"===typeof e)return e;if(l.a.isBigNumber(e))return e.toString();if(Array.isArray(e))return JSON.stringify(e.map((e=>sa(e))));if(\"object\"===typeof e){const t=Object.keys(e);return t.sort(),\"{\"+t.map((t=>{let r=e[t];return r=\"function\"===typeof r?\"[function]\":sa(r),JSON.stringify(t)+\":\"+r})).join(\",\")+\"}\"}throw new Error(\"unknown value type: \"+typeof e)}let la=1;function ca(e){let t=null,r=null,o=new Promise((o=>{t=function(){r&&(clearTimeout(r),r=null),o()},r=setTimeout(t,e)}));return{cancel:t,getPromise:function(){return o},wait:e=>(o=o.then(e),o)}}const ua=[u.b.errors.CALL_EXCEPTION,u.b.errors.INSUFFICIENT_FUNDS,u.b.errors.NONCE_EXPIRED,u.b.errors.REPLACEMENT_UNDERPRICED,u.b.errors.UNPREDICTABLE_GAS_LIMIT],da=[\"address\",\"args\",\"errorArgs\",\"errorSignature\",\"method\",\"transaction\"];function ha(e,t){const r={weight:e.weight};return Object.defineProperty(r,\"provider\",{get:()=>e.provider}),e.start&&(r.start=e.start),t&&(r.duration=t-e.start),e.done&&(e.error?r.error=e.error:r.result=e.result||null),r}function ga(e,t,r){let o=sa;switch(t){case\"getBlockNumber\":return function(t){const r=t.map((e=>e.result));let o=ia(t.map((e=>e.result)),2);if(null!=o)return o=Math.ceil(o),r.indexOf(o+1)>=0&&o++,o>=e._highestBlockNumber&&(e._highestBlockNumber=o),e._highestBlockNumber};case\"getGasPrice\":return function(e){const t=e.map((e=>e.result));return t.sort(),t[Math.floor(t.length/2)]};case\"getEtherPrice\":return function(e){return ia(e.map((e=>e.result)))};case\"getBalance\":case\"getTransactionCount\":case\"getCode\":case\"getStorageAt\":case\"call\":case\"estimateGas\":case\"getLogs\":break;case\"getTransaction\":case\"getTransactionReceipt\":o=function(e){return null==e?null:((e=Object(c.g)(e)).confirmations=-1,sa(e))};break;case\"getBlock\":o=r.includeTransactions?function(e){return null==e?null:((e=Object(c.g)(e)).transactions=e.transactions.map((e=>((e=Object(c.g)(e)).confirmations=-1,e))),sa(e))}:function(e){return null==e?null:sa(e)};break;default:throw new Error(\"unknown method: \"+t)}return function(e,t){return function(r){const o={};r.forEach((t=>{const r=e(t.result);o[r]||(o[r]={count:0,result:t.result}),o[r].count++}));const n=Object.keys(o);for(let e=0;e<n.length;e++){const r=o[n[e]];if(r.count>=t)return r.result}}}(o,e.quorum)}function pa(e,t){return ra(this,void 0,void 0,(function*(){const r=e.provider;return null!=r.blockNumber&&r.blockNumber>=t||-1===t?r:Vo((()=>new Promise(((o,n)=>{setTimeout((function(){return r.blockNumber>=t?o(r):e.cancelled?o(null):o(void 0)}),0)}))),{oncePoll:r})}))}function fa(e,t,r,o){return ra(this,void 0,void 0,(function*(){let n=e.provider;switch(r){case\"getBlockNumber\":case\"getGasPrice\":return n[r]();case\"getEtherPrice\":if(n.getEtherPrice)return n.getEtherPrice();break;case\"getBalance\":case\"getTransactionCount\":case\"getCode\":return o.blockTag&&Object(s.l)(o.blockTag)&&(n=yield pa(e,t)),n[r](o.address,o.blockTag||\"latest\");case\"getStorageAt\":return o.blockTag&&Object(s.l)(o.blockTag)&&(n=yield pa(e,t)),n.getStorageAt(o.address,o.position,o.blockTag||\"latest\");case\"getBlock\":return o.blockTag&&Object(s.l)(o.blockTag)&&(n=yield pa(e,t)),n[o.includeTransactions?\"getBlockWithTransactions\":\"getBlock\"](o.blockTag||o.blockHash);case\"call\":case\"estimateGas\":return o.blockTag&&Object(s.l)(o.blockTag)&&(n=yield pa(e,t)),n[r](o.transaction);case\"getTransaction\":case\"getTransactionReceipt\":return n[r](o.transactionHash);case\"getLogs\":{let r=o.filter;return(r.fromBlock&&Object(s.l)(r.fromBlock)||r.toBlock&&Object(s.l)(r.toBlock))&&(n=yield pa(e,t)),n.getLogs(r)}}return oa.throwError(\"unknown method error\",u.b.errors.UNKNOWN_ERROR,{method:r,params:o})}))}class ma extends bn{constructor(e,t){oa.checkNew(new.target,ma),0===e.length&&oa.throwArgumentError(\"missing providers\",\"providers\",e);const r=e.map(((e,t)=>{if(me.isProvider(e)){const t=$o(e)?2e3:750,r=1;return Object.freeze({provider:e,weight:1,stallTimeout:t,priority:r})}const r=Object(c.g)(e);null==r.priority&&(r.priority=1),null==r.stallTimeout&&(r.stallTimeout=$o(e)?2e3:750),null==r.weight&&(r.weight=1);const o=r.weight;return(o%1||o>512||o<1)&&oa.throwArgumentError(\"invalid weight; must be integer in [1, 512]\",`providers[${t}].weight`,o),Object.freeze(r)})),o=r.reduce(((e,t)=>e+t.weight),0);null==t?t=o/2:t>o&&oa.throwArgumentError(\"quorum will always fail; larger than total weight\",\"quorum\",t);let n=aa(r.map((e=>e.provider.network)));null==n&&(n=new Promise(((e,t)=>{setTimeout((()=>{this.detectNetwork().then(e,t)}),0)}))),super(n),Object(c.d)(this,\"providerConfigs\",Object.freeze(r)),Object(c.d)(this,\"quorum\",t),this._highestBlockNumber=-1}detectNetwork(){return ra(this,void 0,void 0,(function*(){return aa(yield Promise.all(this.providerConfigs.map((e=>e.provider.getNetwork()))))}))}perform(e,t){return ra(this,void 0,void 0,(function*(){if(\"sendTransaction\"===e){const e=yield Promise.all(this.providerConfigs.map((e=>e.provider.sendTransaction(t.signedTransaction).then((e=>e.hash),(e=>e)))));for(let t=0;t<e.length;t++){const r=e[t];if(\"string\"===typeof r)return r}throw e[0]}-1===this._highestBlockNumber&&\"getBlockNumber\"!==e&&(yield this.getBlockNumber());const r=ga(this,e,t),o=ta(this.providerConfigs.map(c.g));o.sort(((e,t)=>e.priority-t.priority));const n=this._highestBlockNumber;let a=0,i=!0;for(;;){const s=na();let l=o.filter((e=>e.runner&&s-e.start<e.stallTimeout)).reduce(((e,t)=>e+t.weight),0);for(;l<this.quorum&&a<o.length;){const r=o[a++],i=la++;r.start=na(),r.staller=ca(r.stallTimeout),r.staller.wait((()=>{r.staller=null})),r.runner=fa(r,n,e,t).then((o=>{r.done=!0,r.result=o,this.listenerCount(\"debug\")&&this.emit(\"debug\",{action:\"request\",rid:i,backend:ha(r,na()),request:{method:e,params:Object(c.c)(t)},provider:this})}),(o=>{r.done=!0,r.error=o,this.listenerCount(\"debug\")&&this.emit(\"debug\",{action:\"request\",rid:i,backend:ha(r,na()),request:{method:e,params:Object(c.c)(t)},provider:this})})),this.listenerCount(\"debug\")&&this.emit(\"debug\",{action:\"request\",rid:i,backend:ha(r,null),request:{method:e,params:Object(c.c)(t)},provider:this}),l+=r.weight}const u=[];o.forEach((e=>{!e.done&&e.runner&&(u.push(e.runner),e.staller&&u.push(e.staller.getPromise()))})),u.length&&(yield Promise.race(u));const d=o.filter((e=>e.done&&null==e.error));if(d.length>=this.quorum){const e=r(d);if(void 0!==e)return o.forEach((e=>{e.staller&&e.staller.cancel(),e.cancelled=!0})),e;i||(yield ca(100).getPromise()),i=!1}const h=o.reduce(((e,t)=>{if(!t.done||null==t.error)return e;const r=t.error.code;return ua.indexOf(r)>=0&&(e[r]||(e[r]={error:t.error,weight:0}),e[r].weight+=t.weight),e}),{});if(Object.keys(h).forEach((e=>{const t=h[e];if(t.weight<this.quorum)return;o.forEach((e=>{e.staller&&e.staller.cancel(),e.cancelled=!0}));const r=t.error,n={};da.forEach((e=>{null!=r[e]&&(n[e]=r[e])})),oa.throwError(r.reason||r.message,e,n)})),0===o.filter((e=>!e.done)).length)break}return o.forEach((e=>{e.staller&&e.staller.cancel(),e.cancelled=!0})),oa.throwError(\"failed to meet quorum\",u.b.errors.SERVER_ERROR,{method:e,params:t,results:o.map((e=>ha(e))),provider:this})}))}}const ba=null,va=new u.b(Ko),Ta=\"84842078b09946638c03157f83405213\";class Aa extends Rn{constructor(e,t){const r=new ya(e,t),o=r.connection;o.password&&va.throwError(\"INFURA WebSocket project secrets unsupported\",u.b.errors.UNSUPPORTED_OPERATION,{operation:\"InfuraProvider.getWebSocketProvider()\"});super(o.url.replace(/^http/i,\"ws\").replace(\"/v3/\",\"/ws/v3/\"),e),Object(c.d)(this,\"apiKey\",r.projectId),Object(c.d)(this,\"projectId\",r.projectId),Object(c.d)(this,\"projectSecret\",r.projectSecret)}isCommunityResource(){return this.projectId===Ta}}class ya extends Xn{static getWebSocketProvider(e,t){return new Aa(e,t)}static getApiKey(e){const t={apiKey:Ta,projectId:Ta,projectSecret:null};return null==e||(\"string\"===typeof e?t.projectId=e:null!=e.projectSecret?(va.assertArgument(\"string\"===typeof e.projectId,\"projectSecret requires a projectId\",\"projectId\",e.projectId),va.assertArgument(\"string\"===typeof e.projectSecret,\"invalid projectSecret\",\"projectSecret\",\"[REDACTED]\"),t.projectId=e.projectId,t.projectSecret=e.projectSecret):e.projectId&&(t.projectId=e.projectId),t.apiKey=t.projectId),t}static getUrl(e,t){let r=null;switch(e?e.name:\"unknown\"){case\"homestead\":r=\"mainnet.infura.io\";break;case\"ropsten\":r=\"ropsten.infura.io\";break;case\"rinkeby\":r=\"rinkeby.infura.io\";break;case\"kovan\":r=\"kovan.infura.io\";break;case\"goerli\":r=\"goerli.infura.io\";break;default:va.throwError(\"unsupported network\",u.b.errors.INVALID_ARGUMENT,{argument:\"network\",value:e})}const o={allowGzip:!0,url:\"https://\"+r+\"/v3/\"+t.projectId,throttleCallback:(e,r)=>(t.projectId===Ta&&tn(),Promise.resolve(!0))};return null!=t.projectSecret&&(o.user=\"\",o.password=t.projectSecret),o}isCommunityResource(){return this.projectId===Ta}}const Sa=new u.b(Ko);class Ea extends Xn{static getApiKey(e){return e&&\"string\"!==typeof e&&Sa.throwArgumentError(\"invalid apiKey\",\"apiKey\",e),e||\"ETHERS_JS_SHARED\"}static getUrl(e,t){Sa.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");let r=null;switch(e.name){case\"homestead\":r=\"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";break;case\"ropsten\":r=\"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";break;case\"rinkeby\":r=\"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";break;case\"goerli\":r=\"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";break;case\"kovan\":r=\"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";break;default:Sa.throwArgumentError(\"unsupported network\",\"network\",arguments[0])}return r+\"?apiKey=\"+t}}const Oa=new u.b(Ko),Ca={homestead:\"6004bcd10040261633ade990\",ropsten:\"6004bd4d0040261633ade991\",rinkeby:\"6004bda20040261633ade994\",goerli:\"6004bd860040261633ade992\"};class ka extends Xn{constructor(e,t){if(null==t){const r=Object(c.e)(new.target,\"getNetwork\")(e);if(r){const e=Ca[r.name];e&&(t={applicationId:e,loadBalancer:!0})}null==t&&Oa.throwError(\"unsupported network\",u.b.errors.INVALID_ARGUMENT,{argument:\"network\",value:e})}super(e,t)}static getApiKey(e){null==e&&Oa.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\",\"apiKey\",e);const t={applicationId:null,loadBalancer:!1,applicationSecretKey:null};return\"string\"===typeof e?t.applicationId=e:null!=e.applicationSecretKey?(Oa.assertArgument(\"string\"===typeof e.applicationId,\"applicationSecretKey requires an applicationId\",\"applicationId\",e.applicationId),Oa.assertArgument(\"string\"===typeof e.applicationSecretKey,\"invalid applicationSecretKey\",\"applicationSecretKey\",\"[REDACTED]\"),t.applicationId=e.applicationId,t.applicationSecretKey=e.applicationSecretKey,t.loadBalancer=!!e.loadBalancer):e.applicationId?(Oa.assertArgument(\"string\"===typeof e.applicationId,\"apiKey.applicationId must be a string\",\"apiKey.applicationId\",e.applicationId),t.applicationId=e.applicationId,t.loadBalancer=!!e.loadBalancer):Oa.throwArgumentError(\"unsupported PocketProvider apiKey\",\"apiKey\",e),t}static getUrl(e,t){let r=null;switch(e?e.name:\"unknown\"){case\"homestead\":r=\"eth-mainnet.gateway.pokt.network\";break;case\"ropsten\":r=\"eth-ropsten.gateway.pokt.network\";break;case\"rinkeby\":r=\"eth-rinkeby.gateway.pokt.network\";break;case\"goerli\":r=\"eth-goerli.gateway.pokt.network\";break;default:Oa.throwError(\"unsupported network\",u.b.errors.INVALID_ARGUMENT,{argument:\"network\",value:e})}let o=null;o=t.loadBalancer?`https://${r}/v1/lb/${t.applicationId}`:`https://${r}/v1/${t.applicationId}`;const n={url:o,headers:{}};return null!=t.applicationSecretKey&&(n.user=\"\",n.password=t.applicationSecretKey),n}isCommunityResource(){return this.applicationId===Ca[this.network.name]}}const Fa=new u.b(Ko);let Ja=1;function Ba(e,t){return function(r,o){\"eth_sign\"==r&&(e.isMetaMask||e.isStatus)&&(r=\"personal_sign\",o=[o[1],o[0]]);const n={method:r,params:o,id:Ja++,jsonrpc:\"2.0\"};return new Promise(((e,r)=>{t(n,(function(t,o){if(t)return r(t);if(o.error){const e=new Error(o.error.message);return e.code=o.error.code,e.data=o.error.data,r(e)}e(o.result)}))}))}}class La extends Bn{constructor(e,t){Fa.checkNew(new.target,La),null==e&&Fa.throwArgumentError(\"missing provider\",\"provider\",e);let r=null,o=null,n=null;\"function\"===typeof e?(r=\"unknown:\",o=e):(r=e.host||e.path||\"\",!r&&e.isMetaMask&&(r=\"metamask\"),n=e,e.request?(\"\"===r&&(r=\"eip-1193:\"),o=function(e){return function(t,r){return null==r&&(r=[]),\"eth_sign\"==t&&(e.isMetaMask||e.isStatus)&&(t=\"personal_sign\",r=[r[1],r[0]]),e.request({method:t,params:r})}}(e)):e.sendAsync?o=Ba(e,e.sendAsync.bind(e)):e.send?o=Ba(e,e.send.bind(e)):Fa.throwArgumentError(\"unsupported provider\",\"provider\",e),r||(r=\"unknown:\")),super(r,t),Object(c.d)(this,\"jsonRpcFetchFunc\",o),Object(c.d)(this,\"provider\",n)}send(e,t){return this.jsonRpcFetchFunc(e,t)}}const wa=new u.b(Ko);function Pa(e,t){if(null==e&&(e=\"homestead\"),\"string\"===typeof e){const t=e.match(/^(ws|http)s?:/i);if(t)switch(t[1]){case\"http\":return new Bn(e);case\"ws\":return new Rn(e);default:wa.throwArgumentError(\"unsupported URL scheme\",\"network\",e)}}const r=bo(e);return r&&r._defaultProvider||wa.throwError(\"unsupported getDefaultProvider network\",u.b.errors.NETWORK_ERROR,{operation:\"getDefaultProvider\",network:e}),r._defaultProvider({FallbackProvider:ma,AlchemyProvider:Gn,CloudflareProvider:Vn,EtherscanProvider:ea,InfuraProvider:ya,JsonRpcProvider:Bn,NodesmithProvider:Ea,PocketProvider:ka,Web3Provider:La,IpcProvider:ba},t)}const Ma=new RegExp(\"^bytes([0-9]+)$\"),Ra=new RegExp(\"^(u?int)([0-9]*)$\"),Da=new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");function Na(e,t,r){switch(e){case\"address\":return r?Object(s.p)(t,32):Object(s.a)(t);case\"string\":return Object(M.f)(t);case\"bytes\":return Object(s.a)(t);case\"bool\":return t=t?\"0x01\":\"0x00\",r?Object(s.p)(t,32):Object(s.a)(t)}let o=e.match(Ra);if(o){let n=parseInt(o[2]||\"256\");if(o[2]&&String(n)!==o[2]||n%8!==0||0===n||n>256)throw new Error(\"invalid number type - \"+e);return r&&(n=256),t=l.a.from(t).toTwos(n),Object(s.p)(t,n/8)}if(o=e.match(Ma),o){const n=parseInt(o[1]);if(String(n)!==o[1]||0===n||n>32)throw new Error(\"invalid bytes type - \"+e);if(Object(s.a)(t).byteLength!==n)throw new Error(\"invalid value for \"+e);return r?Object(s.a)((t+\"0000000000000000000000000000000000000000000000000000000000000000\").substring(0,66)):t}if(o=e.match(Da),o&&Array.isArray(t)){const r=o[1];if(parseInt(o[2]||String(t.length))!=t.length)throw new Error(\"invalid value for \"+e);const n=[];return t.forEach((function(e){n.push(Na(r,e,!0))})),Object(s.b)(n)}throw new Error(\"invalid type - \"+e)}function ja(e,t){if(e.length!=t.length)throw new Error(\"type/value count mismatch\");const r=[];return e.forEach((function(e,o){r.push(Na(e,t[o]))})),Object(s.i)(Object(s.b)(r))}function Xa(e,t){return Object(T.a)(ja(e,t))}function Ia(e,t){return Ct(ja(e,t))}var Ha=r(\"4WVH\");function _a(e){const t=Object(M.f)(e);if(t.length>31)throw new Error(\"bytes32 string must be less than 32 bytes\");return Object(s.i)(Object(s.b)([t,vo.a]).slice(0,32))}function Ga(e){const t=Object(s.a)(e);if(32!==t.length)throw new Error(\"invalid bytes32 - not 32 bytes long\");if(0!==t[31])throw new Error(\"invalid bytes32 string - no null terminator\");let r=31;for(;0===t[r-1];)r--;return Object(M.h)(t.slice(0,r))}const Ua=new u.b(\"units/5.1.0\"),xa=[\"wei\",\"kwei\",\"mwei\",\"gwei\",\"szabo\",\"finney\",\"ether\"];function Va(e){const t=String(e).split(\".\");(t.length>2||!t[0].match(/^-?[0-9]*$/)||t[1]&&!t[1].match(/^[0-9]*$/)||\".\"===e||\"-.\"===e)&&Ua.throwArgumentError(\"invalid value\",\"value\",e);let r=t[0],o=\"\";for(\"-\"===r.substring(0,1)&&(o=\"-\",r=r.substring(1));\"0\"===r.substring(0,1);)r=r.substring(1);\"\"===r&&(r=\"0\");let n=\"\";for(2===t.length&&(n=\".\"+(t[1]||\"0\"));n.length>2&&\"0\"===n[n.length-1];)n=n.substring(0,n.length-1);const a=[];for(;r.length;){if(r.length<=3){a.unshift(r);break}{const e=r.length-3;a.unshift(r.substring(e)),r=r.substring(0,e)}}return o+a.join(\",\")+n}function za(e,t){if(\"string\"===typeof t){const e=xa.indexOf(t);-1!==e&&(t=3*e)}return Ke(e,null!=t?t:18)}function Za(e,t){if(\"string\"!==typeof e&&Ua.throwArgumentError(\"value must be a string\",\"value\",e),\"string\"===typeof t){const e=xa.indexOf(t);-1!==e&&(t=3*e)}return Qe(e,null!=t?t:18)}function Ka(e){return za(e,18)}function Qa(e){return Za(e,18)}const Ya=\"ethers/5.1.0\",qa=new u.b(Ya);try{const e=window;null==e._ethers&&(e._ethers=i)}catch(Wa){}}}]);","map":{"version":3,"sources":["static/chunks/acc75a57ee76cfdb54e227aa069563d70b97b875.0afbc3eb2daf7ed3d498.js"],"names":["window","push","+6Dn","module","__webpack_exports__","__webpack_require__","esm_extends","clsx_m","react","react_default","n","classNameBuilders","getUnhandledProps","getElementType","factories","GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","Object","rest","ElementType","a","createElement","handledProps","propTypes","create","Grid_GridColumn","GridRow","centered","columns","divided","reversed","Grid_GridRow","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","/wnW","d","version","1g5y","exports","utils","common","rotl32","sum32","sum32_3","sum32_4","BlockHash","RIPEMD160","this","call","h","endian","f","j","x","y","z","K","Kh","inherits","ripemd160","blockSize","outSize","hmacStrength","padLength","prototype","_update","msg","start","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","r","s","rh","sh","_digest","enc","toHex32","split32","2t7c","shaCommon","sum32_5","ft_1","sha1_K","SHA1","W","Array","i","length","b","c","e","t","7YYO","assert","Hmac","hash","key","Hash","inner","outer","_init","toArray","update","digest","ANg/","htonl","w","zero2","word","zero8","isArray","slice","res","replace","parseInt","charCodeAt","hi","lo","toHex","toString","join32","end","len","k","m","rotr32","sum64","buf","pos","ah","al","bh","sum64_hi","bl","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","rotr64_lo","shr64_hi","shr64_lo","SHcd","HashZero","To1g","SHA512","SHA384","UPaY","pending","pendingTotal","constructor","_delta8","_delta32","concat","_pad","bytes","Z1Ib","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","g","T1","T2","bkUu","global","randomBytes","_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__","_ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__","_version__WEBPACK_IMPORTED_MODULE_2__","logger","anyGlobal","Error","error","crypto","msCrypto","throwArgumentError","result","Uint8Array","getRandomValues","warn","buffer","throwError","errors","UNSUPPORTED_OPERATION","operation","cke4","root","checkInt","value","checkInts","arrayish","coerceArray","arg","copy","ArrayBuffer","isView","name","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","encodeURI","substr","fromBytes","String","fromCharCode","join","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","defineProperty","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","hex","utf8","padding","pkcs7","pad","data","padder","strip","_arrayTest","icAF","SHA224","j0Hh","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","kLRD","lBBE","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","tGuN","addresses","bignumbers","hashes","EtherSymbol","tH0i","p32","vyt/","ALPHABET","ALPHABET_MAP","charAt","undefined","TypeError","polymodStep","pre","prefixChk","prefix","chk","__decode","str","LIMIT","lowered","toLowerCase","uppered","toUpperCase","split","lastIndexOf","wordChars","words","convert","inBits","outBits","bits","maxV","decodeUnsafe","apply","arguments","decode","encode","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","wAtr","AddressZero","wDBh","ethers_namespaceObject","providers_lib_esm_namespaceObject","lib_esm_Provider","base_provider_BaseProvider","base_provider_Resolver","url_json_rpc_provider_UrlJsonRpcProvider","fallback_provider_FallbackProvider","alchemy_provider_AlchemyProvider","alchemy_provider_AlchemyWebSocketProvider","cloudflare_provider_CloudflareProvider","etherscan_provider_EtherscanProvider","infura_provider_InfuraProvider","infura_provider_InfuraWebSocketProvider","json_rpc_provider_JsonRpcProvider","nodesmith_provider_NodesmithProvider","pocket_provider_PocketProvider","url_json_rpc_provider_StaticJsonRpcProvider","web3_provider_Web3Provider","websocket_provider_WebSocketProvider","IpcProvider","json_rpc_provider_JsonRpcSigner","getDefaultProvider","lib_esm_getNetwork","isCommunityResource","isCommunityResourcable","showThrottleMessage","formatter_Formatter","base64_lib_esm_namespaceObject","lib_esm_utils_namespaceObject","abi_coder_AbiCoder","defaultAbiCoder","fragments_Fragment","EventFragment","fragments_FunctionFragment","fragments_ParamType","FormatTypes","checkResultErrors","logger_lib_esm","rlp_lib_esm","_fetchData","fetchJson","poll","properties_lib_esm","lib_esm","defaultPath","lib_esm_HDNode","signing_key_lib_esm","interface_Interface","interface_LogDescription","interface_TransactionDescription","Base58","nameprep","formatBytes32String","parseBytes32String","hashMessage","namehash","isValidName","lib_esm_id","typed_data_TypedDataEncoder","address_lib_esm","formatEther","parseEther","formatUnits","parseUnits","commify","computeHmac","keccak256_lib_esm","random","shuffled","lib_esm_pack","keccak256","lib_esm_sha256","transactions_lib_esm","getJsonWalletAddress","verifyMessage","verifyTypedData","mnemonicToEntropy","entropyToMnemonic","isValidMnemonic","mnemonicToSeed","SupportedAlgorithm","interface_Indexed","lib_esm_Signer","lib_esm_Wallet","lib_esm_VoidSigner","lib_esm_BaseContract","Contract","lib_esm_ContractFactory","bignumber","fixednumber_FixedNumber","constants_lib_esm","ethers_logger","wordlists","ethers_lib_esm_version_version","wordlist_Wordlist","_version_version","abstract_coder_logger","checkErrors","path","object","childPath","Coder","[object Object]","type","localName","dynamic","message","abstract_coder_Writer","wordSize","_data","_dataLength","_padding","writer","_writeData","paddingOffset","from","BUFFER_OVERRUN","offset","_getValue","abstract_coder_Reader","coerceFunc","allowLoose","_offset","consumed","match","toNumber","_coerceFunc","coerce","loose","alignedLength","Math","ceil","_peekBytes","readBytes","address_AddressCoder","super","_throwError","writeValue","reader","readValue","toHexString","anonymous_AnonymousCoder","coder","defaultValue","array_logger","pack","coders","values","arrayValues","unique","map","INVALID_ARGUMENT","argument","staticWriter","dynamicWriter","updateFuncs","forEach","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","code","baseType","uniqueNames","reduce","accum","get","freeze","array_ArrayCoder","defaultChild","count","checkArgumentCount","boolean_BooleanCoder","isZero","bytes_DynamicBytesCoder","writeBytes","bytes_BytesCoder","fixed_bytes_FixedBytesCoder","size","substring","null_NullCoder","number_NumberCoder","signed","maxUintValue","mask","bounds","gt","lt","add","mul","toTwos","fromTwos","string_StringCoder","tuple_TupleCoder","types","fragments_logger","_constructorGuard","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","populate","params","sighash","minimal","full","json","paramTypeArray","RegExp","constructorGuard","arrayLength","arrayChildren","fromObject","components","_isParamType","format","indexed","comp","JSON","parse","stringify","allowIndexed","fromString","isParamType","verifyType","node","param","originalParam","newNode","parent","state","allowType","allowParams","child","allowName","allowArray","sibling","readArray","parseParamType","parseParams","allowIndex","trim","depth","splitNesting","_isFragment","isFragment","fragments_ConstructorFragment","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","comps","parseModifiers","constant","payable","stateMutability","console","log","verifyState","isConstructorFragment","parens","outputs","output","isFunctionFragment","returns","regexIdentifier","abi_coder_logger","paramTypeBytes","paramTypeNumber","checkNew","_getCoder","component","_getWordSize","_getWriter","_getReader","interface_logger","_isIndexed","wrapAccessError","property","wrap","fragments","abi","fragment","filter","bucket","deploy","functions","events","signature","address","functionFragment","eventFragment","nameOrSignatureOrSighash","getSighash","matching","keys","nameOrSignatureOrTopic","topichash","getEventTopic","getFunction","getEvent","_abiCoder","_encodeParams","_decodeParams","reason","errorSignature","CALL_EXCEPTION","method","errorArgs","UNEXPECTED_ARGUMENT","topics","encodeTopic","pop","dataTypes","dataValues","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","tx","args","topic","decodeEventLog","_isInterface","lib_esm_logger","lib_esm_ForkEvent","_isForkEvent","checkAbstract","eventName","listener","on","off","_isProvider","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","abstract_signer_lib_esm_logger","allowedTransactionKeys","forwardErrors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","blockTag","_checkProvider","provider","getBalance","getAddress","getTransactionCount","transaction","checkTransaction","estimateGas","populateTransaction","signTransaction","signedTx","sendTransaction","getNetwork","chainId","getGasPrice","resolveName","all","to","gasPrice","nonce","gasLimit","catch","UNPREDICTABLE_GAS_LIMIT","getChainId","results","_isSigner","_fail","domain","lib_esm_awaiter","contracts_lib_esm_logger","lib_esm_allowedTransactionKeys","accessList","lib_esm_resolveName","resolver","nameOrPromise","resolveAddresses","paramType","contract","overrides","signer","override","check","resolved","resolvedAddress","interface","encodeFunctionData","ro","intrinsic","roValue","leftovers","l","buildCall","collapseSimple","signerOrProvider","deployTransaction","_deployed","decodeFunctionResult","buildDefault","txRequest","wait","bind","confirmations","receipt","logs","event","parsed","parseLog","eventSignature","removeListener","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildSend","getEventTag","lib_esm_RunningEvent","tag","_listeners","once","item","listenerCount","argsCopy","setTimeout","ErrorRunningEvent","lib_esm_FragmentRunningEvent","contractInterface","prepareEvent","decodeError","lib_esm_WildcardRunningEvent","addressOrName","isSigner","isProvider","uniqueFilters","filters","encodeFilterTopics","uniqueSignatures","callStatic","buildPopulate","buildEstimate","signatures","isInterface","_deployedPromise","getCode","contractAddress","deployed","isIndexed","runningEvent","_runningEvents","_normalizeRunningEvent","emit","_wrappedEmits","_checkRunningEvents","addListener","wrappedEmit","_wrapEvent","getEmit","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","bytecode","bytecodeHex","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","MISSING_ARGUMENT","evm","getInterface","_version","fixednumber_logger","fixednumber_constructorGuard","Zero","NegativeOne","throwFault","fault","NUMERIC_FAULT","zeros","getMultiplier","decimals","formatFixed","multiplier","negative","fraction","mod","whole","div","parseFixed","wholeValue","fractionValue","wei","fixednumber_FixedFormat","_multiplier","_hex","_value","_isFixedNumber","other","_checkFormat","fromValue","sub","hasFraction","isNegative","subUnsafe","ONE","addUnsafe","factor","mulUnsafe","BUMP","floor","divUnsafe","parseFloat","fixedFormat","numeric","decimal","hash_lib_esm_version_version","typed_data_awaiter","typed_data_logger","fill","typed_data_NegativeOne","typed_data_Zero","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","padOffset","hexPadRight","encodeType","fields","links","parents","subtypes","field","primaryTypes","checkCircular","found","subtype","primaryType","st","sort","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","unshift","encodeData","hashStruct","callback","_visit","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","lib_esm_BaseX","alphabet","_alphabetMap","source","digits","base","string","_leader","q","byte","reverse","lib_hash","hash_default","sha2_logger","algorithm","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","DK","block1","U","destPos","wordlist_logger","locale","mnemonic","wordlist","getWord","getWordIndex","lang","lang_cz_wordlist","loadWords","langCz","register","lang_en_wordlist","lang_en_loadWords","langEn","lookup","lang_es_wordlist","dropDiacritic","checkNormalize","normalize","lang_es_loadWords","expand","langEs","lang_fr_wordlist","lang_fr_lookup","lang_fr_dropDiacritic","lang_fr_loadWords","lang_fr_expand","langFr","lang_ja_data","lang_ja_wordlist","lang_ja_hex","lang_ja_loadWords","transform","kana","target","tmp","langJa","lang_ko_data","lang_ko_wordlist","lang_ko_loadWords","langKo","lang_it_wordlist","lang_it_loadWords","langIt","lang_zh_data","lang_zh_wordlist","zh_cn","zh_tw","Checks","lang_zh_codes","lang_zh_loadWords","deltaOffset","lang_zh_LangZh","country","langZhCn","langZhTw","cz","en","es","fr","it","ja","ko","hdnode_lib_esm_logger","lib_esm_N","MasterSecret","HardenedBit","getUpperMask","bytes32","base58check","getWordlist","lib_esm_constructorGuard","privateKey","publicKey","parentFingerprint","chainCode","mnemonicOrPath","signingKey","compressedPublicKey","extendedKey","I","IL","IR","ki","Ki","_addPoint","srcMnemonic","phrase","fingerprint","shift","_derive","seed","seedArray","_fromSeed","NFKD","entropy","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","checksum","aes_js","aes_js_default","scrypt","scrypt_default","looseArrayify","hexString","zpad","getPassword","NFKC","searchPath","currentChild","matchingChild","uuidV4","json_wallets_lib_esm_version_version","keystore_awaiter","keystore_logger","hasMnemonic","keystore_KeystoreAccount","_isKeystoreAccount","_getAccount","aesCtr","_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","fromMnemonic","derivePath","pbkdf2Sync","passwordBytes","dkLen","prfFunc","keystore_pbkdf2","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","N","p","prf","crowdsale_logger","crowdsale_CrowdsaleAccount","_isCrowdsaleAccount","crowdsale_decrypt","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","decryptJsonWallet","decryptJsonWalletSync","syncScrypt","decryptSync","wallet_lib_esm_awaiter","wallet_lib_esm_logger","lib_esm_hasMnemonic","isSigningKey","curve","_mnemonic","_signingKey","signDigest","populated","resolveNames","options","client","uuidRandom","uuid","derivedKey","macPrefix","mac","id","Crypto","cipher","cipherparams","kdfparams","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","extraEntropy","networks_lib_esm_logger","ethDefaultProvider","network","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","skip","alchemy","PocketProvider","CloudflareProvider","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","classic","classicMorden","classicTestnet","classicKotti","standard","defaultProvider","createTable","pair","createRangeTable","matchMap","ranges","range","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","codes","codesTableB2","codepoint","_nameprepTableB2","namehash_logger","Zeros","Partition","partition","label","textData","atob","btoa","geturl_awaiter","getUrl","href","request","headers","body","mode","cache","credentials","redirect","referrer","response","fetch","arrayBuffer","statusCode","status","statusMessage","statusText","web_lib_esm_awaiter","web_lib_esm_logger","staller","duration","bodyify","connection","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","flatHeaders","header","runningTimeout","timer","promise","makeError","TIMEOUT","requestBody","requestMethod","cancel","clearTimeout","runningFetch","attempt","tryAgain","stall","retryAfter","pow","SERVER_ERROR","serverError","throttleRetry","race","updated","content-type","ceiling","interval","retryLimit","oncePoll","onceBlock","bech32","bech32_default","providers_lib_esm_version_version","formatter_logger","formats","getDefaultFormats","bigNumber","number","allowNull","blockNumber","transactionIndex","uint256","creates","raw","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","removed","boolean","allowFalsish","strict","author","_block","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","array","throttleMessage","base_provider_awaiter","base_provider_logger","checkTopic","serializeTopics","sorted","base_provider_getEventTag","isForkEvent","getTime","PollableEvents","base_provider_Event","coinInfos","0","symbol","p2pkh","p2sh","2","3","60","ilk","61","700","bytes32ify","base58Encode","formatter","selector","parameters","coinType","hexBytes","coinInfo","callAddress","_fetchBytes","_getAddress","ipfs","swarm","keyBytes","defaultFormatter","nextPollId","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","ready","NETWORK_ERROR","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","getBlockNumber","handler","unref","_getBlockTag","position","expectedHash","returnedHash","waitForTransaction","signedTransaction","hexTx","_wrapTransaction","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","_getBlock","_getFilter","_getResolver","getResolver","reverseName","resolverAddress","eq","NOT_IMPLEMENTED","pollable","_startEvent","stopped","eventTag","_stopEvent","json_rpc_provider_awaiter","json_rpc_provider_logger","errorGas","checkError","responseText","json_rpc_provider_timer","getResult","payload","getLowerCase","json_rpc_provider_constructorGuard","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","sender","hexlifyTransaction","sendUncheckedTransaction","getPayload","json_rpc_provider_allowedTransactionKeys","networkOrReady","_nextId","getSigner","connectUnchecked","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","seq","allowExtra","allowed","WS","WebSocket","websocket_provider_awaiter","websocket_provider_logger","NextId","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_detectNetwork","rid","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","url_json_rpc_provider_awaiter","url_json_rpc_provider_logger","_super","apiKey","alchemy_provider_logger","defaultApiKey","host","cloudflare_provider_awaiter","cloudflare_provider_logger","etherscan_provider_awaiter","etherscan_provider_logger","getTransactionPostData","etherscan_provider_getResult","getJsonResult","checkLogTag","etherscan_provider_defaultApiKey","etherscan_provider_checkError","baseUrl","procFunc","payloadStr","apikey","postData","topic0","blocks","ethusd","startBlock","endBlock","timeStamp","fallback_provider_awaiter","fallback_provider_logger","fallback_provider_now","checkNetworks","median","maxDelta","middle","serialize","isBigNumber","nextRid","fallback_provider_stall","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","getProcessFunc","configs","_highestBlockNumber","tally","normalizedTally","waitForSync","cancelled","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","total","first","t0","inflightWeight","backend","waiting","errorCode","infura_provider_logger","defaultProjectId","projectId","projectSecret","apiKeyObj","nodesmith_provider_logger","pocket_provider_logger","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","web3_provider_logger","buildWeb3LegacyFetcher","sendFunc","isMetaMask","isStatus","jsonRpcFetchFunc","subprovider","buildEip1193Fetcher","sendAsync","providers_lib_esm_logger","NodesmithProvider","Web3Provider","regexBytes","regexNumber","regexArray","_pack","byteLength","tight","units_lib_esm_logger","names","suffix","formatted","unitName","ether","_ethers"],"mappings":"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"},"name":"static/chunks/acc75a57ee76cfdb54e227aa069563d70b97b875.0afbc3eb2daf7ed3d498.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[7],{\n\n/***/ \"+6Dn\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(\"wx14\");\n\n// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js\nvar clsx_m = __webpack_require__(\"iuhU\");\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(\"17x9\");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/semantic-ui-react/dist/es/lib/classNameBuilders.js\nvar classNameBuilders = __webpack_require__(\"ZeOK\");\n\n// EXTERNAL MODULE: ./node_modules/semantic-ui-react/dist/es/lib/getUnhandledProps.js\nvar getUnhandledProps = __webpack_require__(\"ICNK\");\n\n// EXTERNAL MODULE: ./node_modules/semantic-ui-react/dist/es/lib/getElementType.js\nvar getElementType = __webpack_require__(\"Y53p\");\n\n// EXTERNAL MODULE: ./node_modules/semantic-ui-react/dist/es/lib/factories.js + 5 modules\nvar factories = __webpack_require__(\"MZgk\");\n\n// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js\n\n\n\n\n\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = Object(clsx_m[\"a\" /* default */])(color, Object(classNameBuilders[\"a\" /* useKeyOnly */])(stretched, 'stretched'), Object(classNameBuilders[\"c\" /* useMultipleProp */])(only, 'only'), Object(classNameBuilders[\"d\" /* useTextAlignProp */])(textAlign), Object(classNameBuilders[\"e\" /* useValueAndKey */])(floated, 'floated'), Object(classNameBuilders[\"f\" /* useVerticalAlignProp */])(verticalAlign), Object(classNameBuilders[\"g\" /* useWidthProp */])(computer, 'wide computer'), Object(classNameBuilders[\"g\" /* useWidthProp */])(largeScreen, 'wide large screen'), Object(classNameBuilders[\"g\" /* useWidthProp */])(mobile, 'wide mobile'), Object(classNameBuilders[\"g\" /* useWidthProp */])(tablet, 'wide tablet'), Object(classNameBuilders[\"g\" /* useWidthProp */])(widescreen, 'wide widescreen'), Object(classNameBuilders[\"g\" /* useWidthProp */])(width, 'wide'), 'column', className);\n  var rest = Object(getUnhandledProps[\"a\" /* default */])(GridColumn, props);\n  var ElementType = Object(getElementType[\"a\" /* default */])(GridColumn, props);\n  return /*#__PURE__*/react_default.a.createElement(ElementType, Object(esm_extends[\"a\" /* default */])({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes =  false ? undefined : {};\nGridColumn.create = Object(factories[\"e\" /* createShorthandFactory */])(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\n/* harmony default export */ var Grid_GridColumn = (GridColumn);\n// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js\n\n\n\n\n\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = Object(clsx_m[\"a\" /* default */])(color, Object(classNameBuilders[\"a\" /* useKeyOnly */])(centered, 'centered'), Object(classNameBuilders[\"a\" /* useKeyOnly */])(divided, 'divided'), Object(classNameBuilders[\"a\" /* useKeyOnly */])(stretched, 'stretched'), Object(classNameBuilders[\"c\" /* useMultipleProp */])(only, 'only'), Object(classNameBuilders[\"c\" /* useMultipleProp */])(reversed, 'reversed'), Object(classNameBuilders[\"d\" /* useTextAlignProp */])(textAlign), Object(classNameBuilders[\"f\" /* useVerticalAlignProp */])(verticalAlign), Object(classNameBuilders[\"g\" /* useWidthProp */])(columns, 'column', true), 'row', className);\n  var rest = Object(getUnhandledProps[\"a\" /* default */])(GridRow, props);\n  var ElementType = Object(getElementType[\"a\" /* default */])(GridRow, props);\n  return /*#__PURE__*/react_default.a.createElement(ElementType, Object(esm_extends[\"a\" /* default */])({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes =  false ? undefined : {};\n/* harmony default export */ var Grid_GridRow = (GridRow);\n// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js\n\n\n\n\n\n\n\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = Object(clsx_m[\"a\" /* default */])('ui', Object(classNameBuilders[\"a\" /* useKeyOnly */])(centered, 'centered'), Object(classNameBuilders[\"a\" /* useKeyOnly */])(container, 'container'), Object(classNameBuilders[\"a\" /* useKeyOnly */])(doubling, 'doubling'), Object(classNameBuilders[\"a\" /* useKeyOnly */])(inverted, 'inverted'), Object(classNameBuilders[\"a\" /* useKeyOnly */])(stackable, 'stackable'), Object(classNameBuilders[\"a\" /* useKeyOnly */])(stretched, 'stretched'), Object(classNameBuilders[\"b\" /* useKeyOrValueAndKey */])(celled, 'celled'), Object(classNameBuilders[\"b\" /* useKeyOrValueAndKey */])(divided, 'divided'), Object(classNameBuilders[\"b\" /* useKeyOrValueAndKey */])(padded, 'padded'), Object(classNameBuilders[\"b\" /* useKeyOrValueAndKey */])(relaxed, 'relaxed'), Object(classNameBuilders[\"c\" /* useMultipleProp */])(reversed, 'reversed'), Object(classNameBuilders[\"d\" /* useTextAlignProp */])(textAlign), Object(classNameBuilders[\"f\" /* useVerticalAlignProp */])(verticalAlign), Object(classNameBuilders[\"g\" /* useWidthProp */])(columns, 'column', true), 'grid', className);\n  var rest = Object(getUnhandledProps[\"a\" /* default */])(Grid, props);\n  var ElementType = Object(getElementType[\"a\" /* default */])(Grid, props);\n  return /*#__PURE__*/react_default.a.createElement(ElementType, Object(esm_extends[\"a\" /* default */])({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = Grid_GridColumn;\nGrid.Row = Grid_GridRow;\nGrid.propTypes =  false ? undefined : {};\n/* harmony default export */ var Grid_Grid = __webpack_exports__[\"a\"] = (Grid);\n\n/***/ }),\n\n/***/ \"/wnW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return version; });\nconst version = \"random/5.1.0\";\n//# sourceMappingURL=_version.js.map\n\n/***/ }),\n\n/***/ \"1g5y\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar common = __webpack_require__(\"UPaY\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n\n/***/ }),\n\n/***/ \"2t7c\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar common = __webpack_require__(\"UPaY\");\nvar shaCommon = __webpack_require__(\"tH0i\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n/***/ }),\n\n/***/ \"7YYO\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar assert = __webpack_require__(\"2j6C\");\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n\n/***/ }),\n\n/***/ \"ANg/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar assert = __webpack_require__(\"2j6C\");\nvar inherits = __webpack_require__(\"P7XM\");\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n\n\n/***/ }),\n\n/***/ \"SHcd\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return HashZero; });\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map\n\n/***/ }),\n\n/***/ \"To1g\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\n\nvar SHA512 = __webpack_require__(\"lBBE\");\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\n\n/***/ }),\n\n/***/ \"UPaY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar assert = __webpack_require__(\"2j6C\");\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\n\n/***/ }),\n\n/***/ \"Z1Ib\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar common = __webpack_require__(\"UPaY\");\nvar shaCommon = __webpack_require__(\"tH0i\");\nvar assert = __webpack_require__(\"2j6C\");\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n/***/ }),\n\n/***/ \"bkUu\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return randomBytes; });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"VJ7P\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"/7J2\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"/wnW\");\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__[/* Logger */ \"b\"](_version__WEBPACK_IMPORTED_MODULE_2__[/* version */ \"a\"]);\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__[/* Logger */ \"b\"].errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nfunction randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1)) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return Object(_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__[/* arrayify */ \"a\"])(result);\n}\n;\n//# sourceMappingURL=random.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"ntbh\")))\n\n/***/ }),\n\n/***/ \"cke4\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (true) {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else {}\n\n\n})(this);\n\n\n/***/ }),\n\n/***/ \"icAF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar SHA256 = __webpack_require__(\"Z1Ib\");\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n\n\n/***/ }),\n\n/***/ \"j0Hh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar hash = exports;\n\nhash.utils = __webpack_require__(\"ANg/\");\nhash.common = __webpack_require__(\"UPaY\");\nhash.sha = __webpack_require__(\"kLRD\");\nhash.ripemd = __webpack_require__(\"1g5y\");\nhash.hmac = __webpack_require__(\"7YYO\");\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n\n/***/ }),\n\n/***/ \"kLRD\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.sha1 = __webpack_require__(\"2t7c\");\nexports.sha224 = __webpack_require__(\"icAF\");\nexports.sha256 = __webpack_require__(\"Z1Ib\");\nexports.sha384 = __webpack_require__(\"To1g\");\nexports.sha512 = __webpack_require__(\"lBBE\");\n\n\n/***/ }),\n\n/***/ \"lBBE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar common = __webpack_require__(\"UPaY\");\nvar assert = __webpack_require__(\"2j6C\");\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\n\n/***/ }),\n\n/***/ \"tGuN\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"AddressZero\", function() { return /* reexport */ addresses[\"a\" /* AddressZero */]; });\n__webpack_require__.d(__webpack_exports__, \"NegativeOne\", function() { return /* reexport */ bignumbers[\"b\" /* NegativeOne */]; });\n__webpack_require__.d(__webpack_exports__, \"Zero\", function() { return /* reexport */ bignumbers[\"f\" /* Zero */]; });\n__webpack_require__.d(__webpack_exports__, \"One\", function() { return /* reexport */ bignumbers[\"c\" /* One */]; });\n__webpack_require__.d(__webpack_exports__, \"Two\", function() { return /* reexport */ bignumbers[\"d\" /* Two */]; });\n__webpack_require__.d(__webpack_exports__, \"WeiPerEther\", function() { return /* reexport */ bignumbers[\"e\" /* WeiPerEther */]; });\n__webpack_require__.d(__webpack_exports__, \"MaxUint256\", function() { return /* reexport */ bignumbers[\"a\" /* MaxUint256 */]; });\n__webpack_require__.d(__webpack_exports__, \"HashZero\", function() { return /* reexport */ hashes[\"a\" /* HashZero */]; });\n__webpack_require__.d(__webpack_exports__, \"EtherSymbol\", function() { return /* reexport */ EtherSymbol; });\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/constants/lib.esm/addresses.js\nvar addresses = __webpack_require__(\"wAtr\");\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/constants/lib.esm/bignumbers.js\nvar bignumbers = __webpack_require__(\"nVZa\");\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/constants/lib.esm/hashes.js\nvar hashes = __webpack_require__(\"SHcd\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/constants/lib.esm/strings.js\n// NFKC (composed)             // (decomposed)\nconst EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/constants/lib.esm/index.js\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"tH0i\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"ANg/\");\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n\n\n/***/ }),\n\n/***/ \"vyt/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n\n\n/***/ }),\n\n/***/ \"wAtr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AddressZero; });\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map\n\n/***/ }),\n\n/***/ \"wDBh\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* reexport */ ethers_namespaceObject; });\n\n// UNUSED EXPORTS: Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, version, Wordlist\n\n// NAMESPACE OBJECT: ./node_modules/@ethersproject/providers/lib.esm/index.js\nvar providers_lib_esm_namespaceObject = {};\n__webpack_require__.r(providers_lib_esm_namespaceObject);\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"Provider\", function() { return lib_esm_Provider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"BaseProvider\", function() { return base_provider_BaseProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"Resolver\", function() { return base_provider_Resolver; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"UrlJsonRpcProvider\", function() { return url_json_rpc_provider_UrlJsonRpcProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"FallbackProvider\", function() { return fallback_provider_FallbackProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"AlchemyProvider\", function() { return alchemy_provider_AlchemyProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"AlchemyWebSocketProvider\", function() { return alchemy_provider_AlchemyWebSocketProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"CloudflareProvider\", function() { return cloudflare_provider_CloudflareProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"EtherscanProvider\", function() { return etherscan_provider_EtherscanProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"InfuraProvider\", function() { return infura_provider_InfuraProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"InfuraWebSocketProvider\", function() { return infura_provider_InfuraWebSocketProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"JsonRpcProvider\", function() { return json_rpc_provider_JsonRpcProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"NodesmithProvider\", function() { return nodesmith_provider_NodesmithProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"PocketProvider\", function() { return pocket_provider_PocketProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"StaticJsonRpcProvider\", function() { return url_json_rpc_provider_StaticJsonRpcProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"Web3Provider\", function() { return web3_provider_Web3Provider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"WebSocketProvider\", function() { return websocket_provider_WebSocketProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"IpcProvider\", function() { return IpcProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"JsonRpcSigner\", function() { return json_rpc_provider_JsonRpcSigner; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"getDefaultProvider\", function() { return getDefaultProvider; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"getNetwork\", function() { return lib_esm_getNetwork; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"isCommunityResource\", function() { return isCommunityResource; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"isCommunityResourcable\", function() { return isCommunityResourcable; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"showThrottleMessage\", function() { return showThrottleMessage; });\n__webpack_require__.d(providers_lib_esm_namespaceObject, \"Formatter\", function() { return formatter_Formatter; });\n\n// NAMESPACE OBJECT: ./node_modules/@ethersproject/base64/lib.esm/index.js\nvar base64_lib_esm_namespaceObject = {};\n__webpack_require__.r(base64_lib_esm_namespaceObject);\n__webpack_require__.d(base64_lib_esm_namespaceObject, \"decode\", function() { return decode; });\n__webpack_require__.d(base64_lib_esm_namespaceObject, \"encode\", function() { return encode; });\n\n// NAMESPACE OBJECT: ./node_modules/ethers/lib.esm/utils.js\nvar lib_esm_utils_namespaceObject = {};\n__webpack_require__.r(lib_esm_utils_namespaceObject);\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"AbiCoder\", function() { return abi_coder_AbiCoder; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"defaultAbiCoder\", function() { return defaultAbiCoder; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"Fragment\", function() { return fragments_Fragment; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"EventFragment\", function() { return EventFragment; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"FunctionFragment\", function() { return fragments_FunctionFragment; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"ParamType\", function() { return fragments_ParamType; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"FormatTypes\", function() { return FormatTypes; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"checkResultErrors\", function() { return checkResultErrors; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"Logger\", function() { return logger_lib_esm[\"b\" /* Logger */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"RLP\", function() { return rlp_lib_esm; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"_fetchData\", function() { return _fetchData; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"fetchJson\", function() { return fetchJson; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"poll\", function() { return poll; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"checkProperties\", function() { return properties_lib_esm[\"b\" /* checkProperties */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"deepCopy\", function() { return properties_lib_esm[\"c\" /* deepCopy */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"defineReadOnly\", function() { return properties_lib_esm[\"d\" /* defineReadOnly */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"getStatic\", function() { return properties_lib_esm[\"e\" /* getStatic */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"resolveProperties\", function() { return properties_lib_esm[\"f\" /* resolveProperties */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"shallowCopy\", function() { return properties_lib_esm[\"g\" /* shallowCopy */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"arrayify\", function() { return lib_esm[\"a\" /* arrayify */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"concat\", function() { return lib_esm[\"b\" /* concat */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"stripZeros\", function() { return lib_esm[\"o\" /* stripZeros */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"zeroPad\", function() { return lib_esm[\"p\" /* zeroPad */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"isBytes\", function() { return lib_esm[\"j\" /* isBytes */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"isBytesLike\", function() { return lib_esm[\"k\" /* isBytesLike */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"defaultPath\", function() { return defaultPath; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"HDNode\", function() { return lib_esm_HDNode; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"SigningKey\", function() { return signing_key_lib_esm[\"a\" /* SigningKey */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"Interface\", function() { return interface_Interface; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"LogDescription\", function() { return interface_LogDescription; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"TransactionDescription\", function() { return interface_TransactionDescription; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"base58\", function() { return Base58; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"base64\", function() { return base64_lib_esm_namespaceObject; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hexlify\", function() { return lib_esm[\"i\" /* hexlify */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"isHexString\", function() { return lib_esm[\"l\" /* isHexString */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hexConcat\", function() { return lib_esm[\"c\" /* hexConcat */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hexStripZeros\", function() { return lib_esm[\"f\" /* hexStripZeros */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hexValue\", function() { return lib_esm[\"g\" /* hexValue */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hexZeroPad\", function() { return lib_esm[\"h\" /* hexZeroPad */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hexDataLength\", function() { return lib_esm[\"d\" /* hexDataLength */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hexDataSlice\", function() { return lib_esm[\"e\" /* hexDataSlice */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"nameprep\", function() { return nameprep; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"_toEscapedUtf8String\", function() { return utf8[\"d\" /* _toEscapedUtf8String */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"toUtf8Bytes\", function() { return utf8[\"f\" /* toUtf8Bytes */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"toUtf8CodePoints\", function() { return utf8[\"g\" /* toUtf8CodePoints */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"toUtf8String\", function() { return utf8[\"h\" /* toUtf8String */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"Utf8ErrorFuncs\", function() { return utf8[\"b\" /* Utf8ErrorFuncs */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"formatBytes32String\", function() { return formatBytes32String; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"parseBytes32String\", function() { return parseBytes32String; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"hashMessage\", function() { return hashMessage; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"namehash\", function() { return namehash; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"isValidName\", function() { return isValidName; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"id\", function() { return lib_esm_id[\"a\" /* id */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"_TypedDataEncoder\", function() { return typed_data_TypedDataEncoder; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"getAddress\", function() { return address_lib_esm[\"a\" /* getAddress */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"getIcapAddress\", function() { return address_lib_esm[\"d\" /* getIcapAddress */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"getContractAddress\", function() { return address_lib_esm[\"b\" /* getContractAddress */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"getCreate2Address\", function() { return address_lib_esm[\"c\" /* getCreate2Address */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"isAddress\", function() { return address_lib_esm[\"e\" /* isAddress */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"formatEther\", function() { return formatEther; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"parseEther\", function() { return parseEther; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"formatUnits\", function() { return formatUnits; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"parseUnits\", function() { return parseUnits; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"commify\", function() { return commify; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"computeHmac\", function() { return computeHmac; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"keccak256\", function() { return keccak256_lib_esm[\"a\" /* keccak256 */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"ripemd160\", function() { return ripemd160; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"sha256\", function() { return sha256; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"sha512\", function() { return sha512; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"randomBytes\", function() { return random[\"a\" /* randomBytes */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"shuffled\", function() { return shuffled; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"solidityPack\", function() { return lib_esm_pack; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"solidityKeccak256\", function() { return keccak256; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"soliditySha256\", function() { return lib_esm_sha256; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"splitSignature\", function() { return lib_esm[\"n\" /* splitSignature */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"joinSignature\", function() { return lib_esm[\"m\" /* joinSignature */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"accessListify\", function() { return transactions_lib_esm[\"accessListify\"]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"parseTransaction\", function() { return transactions_lib_esm[\"parse\"]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"serializeTransaction\", function() { return transactions_lib_esm[\"serialize\"]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"getJsonWalletAddress\", function() { return getJsonWalletAddress; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"computeAddress\", function() { return transactions_lib_esm[\"computeAddress\"]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"recoverAddress\", function() { return transactions_lib_esm[\"recoverAddress\"]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"computePublicKey\", function() { return signing_key_lib_esm[\"b\" /* computePublicKey */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"recoverPublicKey\", function() { return signing_key_lib_esm[\"c\" /* recoverPublicKey */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"verifyMessage\", function() { return verifyMessage; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"verifyTypedData\", function() { return verifyTypedData; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"mnemonicToEntropy\", function() { return mnemonicToEntropy; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"entropyToMnemonic\", function() { return entropyToMnemonic; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"isValidMnemonic\", function() { return isValidMnemonic; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"mnemonicToSeed\", function() { return mnemonicToSeed; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"SupportedAlgorithm\", function() { return SupportedAlgorithm; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"UnicodeNormalizationForm\", function() { return utf8[\"a\" /* UnicodeNormalizationForm */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"Utf8ErrorReason\", function() { return utf8[\"c\" /* Utf8ErrorReason */]; });\n__webpack_require__.d(lib_esm_utils_namespaceObject, \"Indexed\", function() { return interface_Indexed; });\n\n// NAMESPACE OBJECT: ./node_modules/ethers/lib.esm/ethers.js\nvar ethers_namespaceObject = {};\n__webpack_require__.r(ethers_namespaceObject);\n__webpack_require__.d(ethers_namespaceObject, \"Signer\", function() { return lib_esm_Signer; });\n__webpack_require__.d(ethers_namespaceObject, \"Wallet\", function() { return lib_esm_Wallet; });\n__webpack_require__.d(ethers_namespaceObject, \"VoidSigner\", function() { return lib_esm_VoidSigner; });\n__webpack_require__.d(ethers_namespaceObject, \"getDefaultProvider\", function() { return getDefaultProvider; });\n__webpack_require__.d(ethers_namespaceObject, \"providers\", function() { return providers_lib_esm_namespaceObject; });\n__webpack_require__.d(ethers_namespaceObject, \"BaseContract\", function() { return lib_esm_BaseContract; });\n__webpack_require__.d(ethers_namespaceObject, \"Contract\", function() { return Contract; });\n__webpack_require__.d(ethers_namespaceObject, \"ContractFactory\", function() { return lib_esm_ContractFactory; });\n__webpack_require__.d(ethers_namespaceObject, \"BigNumber\", function() { return bignumber[\"a\" /* BigNumber */]; });\n__webpack_require__.d(ethers_namespaceObject, \"FixedNumber\", function() { return fixednumber_FixedNumber; });\n__webpack_require__.d(ethers_namespaceObject, \"constants\", function() { return constants_lib_esm; });\n__webpack_require__.d(ethers_namespaceObject, \"errors\", function() { return logger_lib_esm[\"a\" /* ErrorCode */]; });\n__webpack_require__.d(ethers_namespaceObject, \"logger\", function() { return ethers_logger; });\n__webpack_require__.d(ethers_namespaceObject, \"utils\", function() { return lib_esm_utils_namespaceObject; });\n__webpack_require__.d(ethers_namespaceObject, \"wordlists\", function() { return wordlists; });\n__webpack_require__.d(ethers_namespaceObject, \"version\", function() { return ethers_lib_esm_version_version; });\n__webpack_require__.d(ethers_namespaceObject, \"Wordlist\", function() { return wordlist_Wordlist; });\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/bytes/lib.esm/index.js + 1 modules\nvar lib_esm = __webpack_require__(\"VJ7P\");\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(\"4218\");\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/properties/lib.esm/index.js + 1 modules\nvar properties_lib_esm = __webpack_require__(\"m9oY\");\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/logger/lib.esm/index.js + 1 modules\nvar logger_lib_esm = __webpack_require__(\"/7J2\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/_version.js\nconst _version_version = \"abi/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\n\n\n\n\n\n\nconst abstract_coder_logger = new logger_lib_esm[\"b\" /* Logger */](_version_version);\nfunction checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nclass Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        abstract_coder_logger.throwArgumentError(message, this.localName, value);\n    }\n}\nclass abstract_coder_Writer {\n    constructor(wordSize) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return Object(lib_esm[\"c\" /* hexConcat */])(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(Object(lib_esm[\"b\" /* concat */])(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = Object(lib_esm[\"a\" /* arrayify */])(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = Object(lib_esm[\"b\" /* concat */])([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = Object(lib_esm[\"a\" /* arrayify */])(bignumber[\"a\" /* BigNumber */].from(value));\n        if (bytes.length > this.wordSize) {\n            abstract_coder_logger.throwError(\"value out-of-bounds\", logger_lib_esm[\"b\" /* Logger */].errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = Object(lib_esm[\"b\" /* concat */])([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nclass abstract_coder_Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_data\", Object(lib_esm[\"a\" /* arrayify */])(data));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"wordSize\", wordSize || 32);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_coerceFunc\", coerceFunc);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return Object(lib_esm[\"i\" /* hexlify */])(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return abstract_coder_Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                abstract_coder_logger.throwError(\"data out-of-bounds\", logger_lib_esm[\"b\" /* Logger */].errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new abstract_coder_Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return bignumber[\"a\" /* BigNumber */].from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/address/lib.esm/index.js + 1 modules\nvar address_lib_esm = __webpack_require__(\"Oxwv\");\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/hash/lib.esm/id.js\nvar lib_esm_id = __webpack_require__(\"NaiW\");\n\n// EXTERNAL MODULE: ./node_modules/@ethersproject/keccak256/lib.esm/index.js\nvar keccak256_lib_esm = __webpack_require__(\"b1pR\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/address.js\n\n\n\n\nclass address_AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            Object(address_lib_esm[\"a\" /* getAddress */])(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return Object(address_lib_esm[\"a\" /* getAddress */])(Object(lib_esm[\"h\" /* hexZeroPad */])(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js\n\n\n// Clones the functionality of an existing Coder, but without a localName\nclass anonymous_AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/array.js\n\n\n\nconst array_logger = new logger_lib_esm[\"b\" /* Logger */](_version_version);\n\n\nfunction pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                array_logger.throwError(\"cannot encode object for signature with missing names\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                array_logger.throwError(\"cannot encode object for signature with duplicate names\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        array_logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        array_logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new abstract_coder_Writer(writer.wordSize);\n    let dynamicWriter = new abstract_coder_Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nfunction unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === logger_lib_esm[\"b\" /* Logger */].errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === logger_lib_esm[\"b\" /* Logger */].errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nclass array_ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        array_logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new anonymous_AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js\n\n\nclass boolean_BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js\n\n\n\nclass bytes_DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = Object(lib_esm[\"a\" /* arrayify */])(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nclass bytes_BytesCoder extends bytes_DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, Object(lib_esm[\"i\" /* hexlify */])(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js\n\n\n\n// @TODO: Merge this with bytes\nclass fixed_bytes_FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = Object(lib_esm[\"a\" /* arrayify */])(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, Object(lib_esm[\"i\" /* hexlify */])(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/null.js\n\n\nclass null_NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/constants/lib.esm/bignumbers.js\nvar bignumbers = __webpack_require__(\"nVZa\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/number.js\n\n\n\n\nclass number_NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = bignumber[\"a\" /* BigNumber */].from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = bignumbers[\"a\" /* MaxUint256 */].mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(bignumbers[\"c\" /* One */]).mul(bignumbers[\"b\" /* NegativeOne */]))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(bignumbers[\"f\" /* Zero */]) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/strings/lib.esm/utf8.js + 1 modules\nvar utf8 = __webpack_require__(\"UnNr\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/string.js\n\n\n\nclass string_StringCoder extends bytes_DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, Object(utf8[\"f\" /* toUtf8Bytes */])(value));\n    }\n    decode(reader) {\n        return Object(utf8[\"h\" /* toUtf8String */])(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js\n\n\n\nclass tuple_TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/fragments.js\n\n\n\n\n\nconst fragments_logger = new logger_lib_esm[\"b\" /* Logger */](_version_version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        fragments_logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        fragments_logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        fragments_logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(object, key, params[key]);\n    }\n}\nconst FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readble with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nclass fragments_ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            fragments_logger.throwError(\"use fromString\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: fragments_ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, addres bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            fragments_logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return fragments_ParamType.fromString(value, allowIndexed);\n        }\n        return fragments_ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (fragments_ParamType.isParamType(value)) {\n            return value;\n        }\n        return new fragments_ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(fragments_ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return fragments_ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => fragments_ParamType.fromString(param, allowIndex));\n}\nclass fragments_Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            fragments_logger.throwError(\"use a static from method\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (fragments_Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return fragments_Fragment.fromString(value);\n        }\n        return fragments_Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (fragments_Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return fragments_FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return fragments_ConstructorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return fragments_logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return fragments_FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return fragments_ConstructorFragment.fromString(value.trim());\n        }\n        return fragments_logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nclass EventFragment extends fragments_Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            fragments_logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            fragments_logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(fragments_ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            fragments_logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    fragments_logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            fragments_logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            fragments_logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = bignumber[\"a\" /* BigNumber */].from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                fragments_logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                fragments_logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            fragments_logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            fragments_logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        fragments_logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nclass fragments_ConstructorFragment extends fragments_Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            fragments_logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            fragments_logger.throwError(\"cannot format a constructor for sighash\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return fragments_ConstructorFragment.fromString(value);\n        }\n        return fragments_ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (fragments_ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            fragments_logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            fragments_logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(fragments_ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? bignumber[\"a\" /* BigNumber */].from(value.gas) : null)\n        };\n        return new fragments_ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            fragments_logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return fragments_ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nclass fragments_FunctionFragment extends fragments_ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            fragments_logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return fragments_FunctionFragment.fromString(value);\n        }\n        return fragments_FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (fragments_FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            fragments_logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(fragments_ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(fragments_ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? bignumber[\"a\" /* BigNumber */].from(value.gas) : null)\n        };\n        return new fragments_FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            fragments_logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            fragments_logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                fragments_logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return fragments_FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class ErrorFragment extends Fragment {\n//}\n//export class StructFragment extends Fragment {\n//}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\nconst regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        fragments_logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    fragments_logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\n\n\n\nconst abi_coder_logger = new logger_lib_esm[\"b\" /* Logger */](_version_version);\n\n\n\n\n\n\n\n\n\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nclass abi_coder_AbiCoder {\n    constructor(coerceFunc) {\n        abi_coder_logger.checkNew(new.target, abi_coder_AbiCoder);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new address_AddressCoder(param.name);\n            case \"bool\":\n                return new boolean_BooleanCoder(param.name);\n            case \"string\":\n                return new string_StringCoder(param.name);\n            case \"bytes\":\n                return new bytes_BytesCoder(param.name);\n            case \"array\":\n                return new array_ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new tuple_TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new null_NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                abi_coder_logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new number_NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                abi_coder_logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new fixed_bytes_FixedBytesCoder(size, param.name);\n        }\n        return abi_coder_logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new abstract_coder_Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new abstract_coder_Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(fragments_ParamType.from(type)));\n        const coder = new tuple_TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            abi_coder_logger.throwError(\"types/values length mismatch\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(fragments_ParamType.from(type)));\n        const coder = (new tuple_TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(fragments_ParamType.from(type)));\n        const coder = new tuple_TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(Object(lib_esm[\"a\" /* arrayify */])(data), loose));\n    }\n}\nconst defaultAbiCoder = new abi_coder_AbiCoder();\n//# sourceMappingURL=abi-coder.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abi/lib.esm/interface.js\n\n\n\n\n\n\n\n\n\n\n\n\nconst interface_logger = new logger_lib_esm[\"b\" /* Logger */](_version_version);\n\nclass interface_LogDescription extends properties_lib_esm[\"a\" /* Description */] {\n}\nclass interface_TransactionDescription extends properties_lib_esm[\"a\" /* Description */] {\n}\nclass interface_Indexed extends properties_lib_esm[\"a\" /* Description */] {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nclass interface_Interface {\n    constructor(fragments) {\n        interface_logger.checkNew(new.target, interface_Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"fragments\", abi.map((fragment) => {\n            return fragments_Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_abiCoder\", Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getAbiCoder\")());\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"functions\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"errors\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"events\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        interface_logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                interface_logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"deploy\", fragments_ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            interface_logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return Object(address_lib_esm[\"a\" /* getAddress */])(address);\n    }\n    static getSighash(functionFragment) {\n        return Object(lib_esm[\"e\" /* hexDataSlice */])(Object(lib_esm_id[\"a\" /* id */])(functionFragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return Object(lib_esm_id[\"a\" /* id */])(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (Object(lib_esm[\"l\" /* isHexString */])(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            interface_logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                interface_logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                interface_logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.functions[fragments_FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            interface_logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (Object(lib_esm[\"l\" /* isHexString */])(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            interface_logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                interface_logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                interface_logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            interface_logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(functionFragment) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"getSighash\")(functionFragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = Object(lib_esm[\"a\" /* arrayify */])(data);\n        if (Object(lib_esm[\"i\" /* hexlify */])(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            interface_logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", Object(lib_esm[\"i\" /* hexlify */])(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return Object(lib_esm[\"i\" /* hexlify */])(Object(lib_esm[\"b\" /* concat */])([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = Object(lib_esm[\"a\" /* arrayify */])(data);\n        let reason = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4:\n                if (Object(lib_esm[\"i\" /* hexlify */])(bytes.slice(0, 4)) === \"0x08c379a0\") {\n                    errorSignature = \"Error(string)\";\n                    reason = this._abiCoder.decode([\"string\"], bytes.slice(4))[0];\n                }\n                break;\n        }\n        return interface_logger.throwError(\"call revert exception\", logger_lib_esm[\"b\" /* Logger */].errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorSignature: errorSignature,\n            errorArgs: [reason],\n            reason: reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return Object(lib_esm[\"i\" /* hexlify */])(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            interface_logger.throwError(\"too many arguments for \" + eventFragment.format(), logger_lib_esm[\"b\" /* Logger */].errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return Object(lib_esm_id[\"a\" /* id */])(value);\n            }\n            else if (param.type === \"bytes\") {\n                return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(lib_esm[\"i\" /* hexlify */])(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return Object(lib_esm[\"h\" /* hexZeroPad */])(Object(lib_esm[\"i\" /* hexlify */])(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    interface_logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                interface_logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            interface_logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(Object(lib_esm_id[\"a\" /* id */])(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(Object(keccak256_lib_esm[\"a\" /* keccak256 */])(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TOOD\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!Object(lib_esm[\"l\" /* isHexString */])(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                interface_logger.throwError(\"fragment/topic mismatch\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(fragments_ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, Object(lib_esm[\"b\" /* concat */])(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new interface_Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new interface_Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new interface_TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: bignumber[\"a\" /* BigNumber */].from(tx.value || \"0\"),\n        });\n    }\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe jsut a fragment?\n        return new interface_LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js\nconst lib_esm_version_version = \"abstract-provider/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-provider/lib.esm/index.js\n\n\n\n\n\nconst lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](lib_esm_version_version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nclass lib_esm_ForkEvent extends properties_lib_esm[\"a\" /* Description */] {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nclass lib_esm_BlockForkEvent extends lib_esm_ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!Object(lib_esm[\"l\" /* isHexString */])(blockHash, 32)) {\n            lib_esm_logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nclass lib_esm_TransactionForkEvent extends lib_esm_ForkEvent {\n    constructor(hash, expiry) {\n        if (!Object(lib_esm[\"l\" /* isHexString */])(hash, 32)) {\n            lib_esm_logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nclass lib_esm_TransactionOrderForkEvent extends lib_esm_ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!Object(lib_esm[\"l\" /* isHexString */])(beforeHash, 32)) {\n            lib_esm_logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!Object(lib_esm[\"l\" /* isHexString */])(afterHash, 32)) {\n            lib_esm_logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nclass lib_esm_Provider {\n    constructor() {\n        lib_esm_logger.checkAbstract(new.target, lib_esm_Provider);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_isProvider\", true);\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js\nconst abstract_signer_lib_esm_version_version = \"abstract-signer/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-signer/lib.esm/index.js\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nconst abstract_signer_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](abstract_signer_lib_esm_version_version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    logger_lib_esm[\"b\" /* Logger */].errors.INSUFFICIENT_FUNDS,\n    logger_lib_esm[\"b\" /* Logger */].errors.NONCE_EXPIRED,\n    logger_lib_esm[\"b\" /* Logger */].errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nclass lib_esm_Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        abstract_signer_lib_esm_logger.checkAbstract(new.target, lib_esm_Signer);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transation\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transation\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        this._checkProvider(\"sendTransaction\");\n        return this.populateTransaction(transaction).then((tx) => {\n            return this.signTransaction(tx).then((signedTx) => {\n                return this.provider.sendTransaction(signedTx);\n            });\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                abstract_signer_lib_esm_logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = Object(properties_lib_esm[\"g\" /* shallowCopy */])(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    abstract_signer_lib_esm_logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        abstract_signer_lib_esm_logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n            }\n            if (tx.gasPrice == null) {\n                tx.gasPrice = this.getGasPrice();\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return abstract_signer_lib_esm_logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_lib_esm[\"b\" /* Logger */].errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        abstract_signer_lib_esm_logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield Object(properties_lib_esm[\"f\" /* resolveProperties */])(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            abstract_signer_lib_esm_logger.throwError(\"missing provider\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nclass lib_esm_VoidSigner extends lib_esm_Signer {\n    constructor(address, provider) {\n        abstract_signer_lib_esm_logger.checkNew(new.target, lib_esm_VoidSigner);\n        super();\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", address);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            abstract_signer_lib_esm_logger.throwError(message, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new lib_esm_VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/transactions/lib.esm/index.js + 1 modules\nvar transactions_lib_esm = __webpack_require__(\"WsP5\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/contracts/lib.esm/_version.js\nconst contracts_lib_esm_version_version = \"contracts/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/contracts/lib.esm/index.js\n\nvar lib_esm_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\nconst contracts_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](contracts_lib_esm_version_version);\n;\n;\n///////////////////////////////\nconst lib_esm_allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n};\nfunction lib_esm_resolveName(resolver, nameOrPromise) {\n    return lib_esm_awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return Object(address_lib_esm[\"a\" /* getAddress */])(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            contracts_lib_esm_logger.throwError(\"a provider or signer is needed to resolve ENS names\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            contracts_lib_esm_logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return lib_esm_awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield lib_esm_resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(new Error(\"invalid value for array\"));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return lib_esm_awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = Object(properties_lib_esm[\"g\" /* shallowCopy */])(args.pop());\n        }\n        // Make sure the parameter count matches\n        contracts_lib_esm_logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                    override: lib_esm_resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => lib_esm_awaiter(this, void 0, void 0, function* () {\n                    if (Object(address_lib_esm[\"a\" /* getAddress */])(check.signer) !== check.override) {\n                        contracts_lib_esm_logger.throwError(\"Contract with a Signer cannot override from\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = lib_esm_resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (Object(properties_lib_esm[\"f\" /* resolveProperties */])(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = bignumber[\"a\" /* BigNumber */].from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = bignumber[\"a\" /* BigNumber */].from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = bignumber[\"a\" /* BigNumber */].from(ro.gasPrice);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = Object(transactions_lib_esm[\"accessListify\"])(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Conmpute the intrinisic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = Object(lib_esm[\"a\" /* arrayify */])(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = bignumber[\"a\" /* BigNumber */].from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = bignumber[\"a\" /* BigNumber */].from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                contracts_lib_esm_logger.throwError(\"non-payable method cannot override value\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        // Remvoe the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            contracts_lib_esm_logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return lib_esm_awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                contracts_lib_esm_logger.throwError(\"estimate require a provider or signer\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return lib_esm_awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = Object(properties_lib_esm[\"g\" /* shallowCopy */])(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === logger_lib_esm[\"b\" /* Logger */].errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return lib_esm_awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                contracts_lib_esm_logger.throwError(\"sending a transaction requires a signer\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is minded\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tw.wait so the receipt has extra properties\n            const wait = tx.wait.bind(tx);\n            tx.wait = (confirmations) => {\n                return wait(confirmations).then((receipt) => {\n                    receipt.events = receipt.logs.map((log) => {\n                        let event = Object(properties_lib_esm[\"c\" /* deepCopy */])(log);\n                        let parsed = null;\n                        try {\n                            parsed = contract.interface.parseLog(log);\n                        }\n                        catch (e) { }\n                        // Successfully parsed the event log; include it\n                        if (parsed) {\n                            event.args = parsed.args;\n                            event.decode = (data, topics) => {\n                                return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                            };\n                            event.event = parsed.name;\n                            event.eventSignature = parsed.signature;\n                        }\n                        // Useful operations\n                        event.removeListener = () => { return contract.provider; };\n                        event.getBlock = () => {\n                            return contract.provider.getBlock(receipt.blockHash);\n                        };\n                        event.getTransaction = () => {\n                            return contract.provider.getTransaction(receipt.transactionHash);\n                        };\n                        event.getTransactionReceipt = () => {\n                            return Promise.resolve(receipt);\n                        };\n                        return event;\n                    });\n                    return receipt;\n                });\n            };\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass lib_esm_RunningEvent {\n    constructor(tag, filter) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"tag\", tag);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends lib_esm_RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additioanlly dereference the arguments when emitting\nclass lib_esm_FragmentRunningEvent extends lib_esm_RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                contracts_lib_esm_logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", address);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"interface\", contractInterface);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass lib_esm_WildcardRunningEvent extends lib_esm_RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", address);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nclass lib_esm_BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        contracts_lib_esm_logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"interface\", Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", null);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"signer\", null);\n        }\n        else if (lib_esm_Signer.isSigner(signerOrProvider)) {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", signerOrProvider.provider || null);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"signer\", signerOrProvider);\n        }\n        else if (lib_esm_Provider.isProvider(signerOrProvider)) {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", signerOrProvider);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"signer\", null);\n        }\n        else {\n            contracts_lib_esm_logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"callStatic\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"estimateGas\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"functions\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"populateTransaction\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    contracts_lib_esm_logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_runningEvents\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            contracts_lib_esm_logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", addressOrName);\n        if (this.provider) {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"resolvedAddress\", lib_esm_resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"resolvedAddress\", Promise.resolve(Object(address_lib_esm[\"a\" /* getAddress */])(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                contracts_lib_esm_logger.throwError(\"provider is required to use ENS name as contract address\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                contracts_lib_esm_logger.warn(`Duplicate ABI entry for ${JSON.stringify(name)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[name]) {\n                    uniqueNames[name] = [];\n                }\n                uniqueNames[name].push(signature);\n            }\n            if (this[signature] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return Object(address_lib_esm[\"b\" /* getContractAddress */])(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (interface_Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new interface_Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        contracts_lib_esm_logger.throwError(\"contract not deployed\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            contracts_lib_esm_logger.throwError(\"sending a transactions require a signer\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = Object(properties_lib_esm[\"g\" /* shallowCopy */])(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            contracts_lib_esm_logger.throwError(\"cannot override \" + key, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new lib_esm_VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return interface_Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new lib_esm_RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new lib_esm_WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new lib_esm_FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new lib_esm_FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new lib_esm_RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new lib_esm_WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = Object(properties_lib_esm[\"c\" /* deepCopy */])(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            contracts_lib_esm_logger.throwError(\"events require a provider or a signer with a provider\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = Object(properties_lib_esm[\"g\" /* shallowCopy */])(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && Object(lib_esm[\"l\" /* isHexString */])(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                contracts_lib_esm_logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nclass Contract extends lib_esm_BaseContract {\n}\nclass lib_esm_ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (Object(lib_esm[\"j\" /* isBytes */])(bytecode)) {\n            bytecodeHex = Object(lib_esm[\"i\" /* hexlify */])(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!Object(lib_esm[\"l\" /* isHexString */])(bytecodeHex) || (bytecodeHex.length % 2)) {\n            contracts_lib_esm_logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !lib_esm_Signer.isSigner(signer)) {\n            contracts_lib_esm_logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"bytecode\", bytecodeHex);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"interface\", Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getInterface\")(contractInterface));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populteTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = Object(properties_lib_esm[\"g\" /* shallowCopy */])(args.pop());\n            for (const key in tx) {\n                if (!lib_esm_allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            contracts_lib_esm_logger.throwError(\"cannot override \" + key, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        // Make sure the call matches the constructor signature\n        contracts_lib_esm_logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = Object(lib_esm[\"i\" /* hexlify */])(Object(lib_esm[\"b\" /* concat */])([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return lib_esm_awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            contracts_lib_esm_logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"getContractAddress\")(tx);\n            const contract = Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            contracts_lib_esm_logger.throwError(\"missing compiler output\", logger_lib_esm[\"b\" /* Logger */].errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return Object(address_lib_esm[\"b\" /* getContractAddress */])(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/_version.js\nvar _version = __webpack_require__(\"qWAS\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js\n\n\n\n\nconst fixednumber_logger = new logger_lib_esm[\"b\" /* Logger */](_version[\"a\" /* version */]);\n\nconst fixednumber_constructorGuard = {};\nconst Zero = bignumber[\"a\" /* BigNumber */].from(0);\nconst NegativeOne = bignumber[\"a\" /* BigNumber */].from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return fixednumber_logger.throwError(message, logger_lib_esm[\"b\" /* Logger */].errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = bignumber[\"a\" /* BigNumber */].from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return fixednumber_logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nfunction formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = bignumber[\"a\" /* BigNumber */].from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    value = whole + \".\" + fraction;\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nfunction parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n        fixednumber_logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    if (multiplier.length - 1 === 0) {\n        return bignumber[\"a\" /* BigNumber */].from(value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        fixednumber_logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        fixednumber_logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Prevent underflow\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = bignumber[\"a\" /* BigNumber */].from(whole);\n    const fractionValue = bignumber[\"a\" /* BigNumber */].from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nclass fixednumber_FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== fixednumber_constructorGuard) {\n            fixednumber_logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof fixednumber_FixedFormat) {\n            return value;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else if (value != null) {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    fixednumber_logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    fixednumber_logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            fixednumber_logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            fixednumber_logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new fixednumber_FixedFormat(fixednumber_constructorGuard, signed, width, decimals);\n    }\n}\nclass fixednumber_FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        fixednumber_logger.checkNew(new.target, fixednumber_FixedNumber);\n        if (constructorGuard !== fixednumber_constructorGuard) {\n            fixednumber_logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            fixednumber_logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return fixednumber_FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return fixednumber_FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return fixednumber_FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return fixednumber_FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        let comps = this.toString().split(\".\");\n        let result = fixednumber_FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE);\n        }\n        return result;\n    }\n    ceiling() {\n        let comps = this.toString().split(\".\");\n        let result = fixednumber_FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE);\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        let comps = this.toString().split(\".\");\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            fixednumber_logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = fixednumber_FixedNumber.from(\"1\" + zeros.substring(0, decimals));\n        return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            fixednumber_logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = bignumber[\"a\" /* BigNumber */].from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return Object(lib_esm[\"h\" /* hexZeroPad */])(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return fixednumber_FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !Object(bignumber[\"d\" /* isBigNumberish */])(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return fixednumber_FixedNumber.fromString(formatFixed(value, decimals), fixednumber_FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = fixednumber_FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = Object(lib_esm[\"h\" /* hexZeroPad */])(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new fixednumber_FixedNumber(fixednumber_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = fixednumber_FixedFormat.from(format);\n        if (Object(lib_esm[\"a\" /* arrayify */])(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = bignumber[\"a\" /* BigNumber */].from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new fixednumber_FixedNumber(fixednumber_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return fixednumber_FixedNumber.fromString(value, format);\n        }\n        if (Object(lib_esm[\"j\" /* isBytes */])(value)) {\n            return fixednumber_FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return fixednumber_FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return fixednumber_logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = fixednumber_FixedNumber.from(1);\nconst BUMP = fixednumber_FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/message.js\n\n\n\nconst messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nfunction hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = Object(utf8[\"f\" /* toUtf8Bytes */])(message);\n    }\n    return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(lib_esm[\"b\" /* concat */])([\n        Object(utf8[\"f\" /* toUtf8Bytes */])(messagePrefix),\n        Object(utf8[\"f\" /* toUtf8Bytes */])(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/_version.js\nconst hash_lib_esm_version_version = \"hash/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/typed-data.js\nvar typed_data_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\nconst typed_data_logger = new logger_lib_esm[\"b\" /* Logger */](hash_lib_esm_version_version);\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst typed_data_NegativeOne = bignumber[\"a\" /* BigNumber */].from(-1);\nconst typed_data_Zero = bignumber[\"a\" /* BigNumber */].from(0);\nconst One = bignumber[\"a\" /* BigNumber */].from(1);\nconst MaxUint256 = bignumber[\"a\" /* BigNumber */].from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = Object(lib_esm[\"a\" /* arrayify */])(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return Object(lib_esm[\"c\" /* hexConcat */])([bytes, padding.slice(padOffset)]);\n    }\n    return Object(lib_esm[\"i\" /* hexlify */])(bytes);\n}\nconst hexTrue = Object(lib_esm[\"h\" /* hexZeroPad */])(One.toHexString(), 32);\nconst hexFalse = Object(lib_esm[\"h\" /* hexZeroPad */])(typed_data_Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            typed_data_logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return bignumber[\"a\" /* BigNumber */].from(value).toString();\n        }\n        catch (error) { }\n        return typed_data_logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return Object(address_lib_esm[\"a\" /* getAddress */])(value).toLowerCase();\n        }\n        catch (error) { }\n        return typed_data_logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = Object(lib_esm[\"a\" /* arrayify */])(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return Object(lib_esm[\"i\" /* hexlify */])(bytes);\n        }\n        catch (error) { }\n        return typed_data_logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                typed_data_logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(typed_data_NegativeOne) : typed_data_Zero;\n            return function (value) {\n                const v = bignumber[\"a\" /* BigNumber */].from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    typed_data_logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return Object(lib_esm[\"h\" /* hexZeroPad */])(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                typed_data_logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = Object(lib_esm[\"a\" /* arrayify */])(value);\n                if (bytes.length !== width) {\n                    typed_data_logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return Object(lib_esm[\"h\" /* hexZeroPad */])(Object(address_lib_esm[\"a\" /* getAddress */])(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(value);\n        };\n        case \"string\": return function (value) {\n            return Object(lib_esm_id[\"a\" /* id */])(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nclass typed_data_TypedDataEncoder {\n    constructor(types) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"types\", Object.freeze(Object(properties_lib_esm[\"c\" /* deepCopy */])(types)));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_encoderCache\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    typed_data_logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    typed_data_logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    typed_data_logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            typed_data_logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            typed_data_logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                typed_data_logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    typed_data_logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256_lib_esm[\"a\" /* keccak256 */]);\n                }\n                return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(lib_esm[\"c\" /* hexConcat */])(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = Object(lib_esm_id[\"a\" /* id */])(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return Object(lib_esm[\"c\" /* hexConcat */])(values);\n            };\n        }\n        return typed_data_logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            typed_data_logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                typed_data_logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return typed_data_logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new typed_data_TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return typed_data_TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return typed_data_TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                typed_data_logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return typed_data_TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return Object(lib_esm[\"c\" /* hexConcat */])([\n            \"0x1901\",\n            typed_data_TypedDataEncoder.hashDomain(domain),\n            typed_data_TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(typed_data_TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return typed_data_awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = Object(properties_lib_esm[\"g\" /* shallowCopy */])(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !Object(lib_esm[\"l\" /* isHexString */])(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = typed_data_TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !Object(lib_esm[\"l\" /* isHexString */])(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        typed_data_TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = typed_data_TypedDataEncoder.from(types);\n        const typesWithDomain = Object(properties_lib_esm[\"g\" /* shallowCopy */])(types);\n        if (typesWithDomain.EIP712Domain) {\n            typed_data_logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return Object(lib_esm[\"i\" /* hexlify */])(Object(lib_esm[\"a\" /* arrayify */])(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return bignumber[\"a\" /* BigNumber */].from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            typed_data_logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return typed_data_logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/basex/lib.esm/index.js\n/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\n\nclass lib_esm_BaseX {\n    constructor(alphabet) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"alphabet\", alphabet);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"base\", alphabet.length);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_alphabetMap\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = Object(lib_esm[\"a\" /* arrayify */])(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return Object(lib_esm[\"a\" /* arrayify */])(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new lib_esm_BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new lib_esm_BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash.js\nvar lib_hash = __webpack_require__(\"j0Hh\");\nvar hash_default = /*#__PURE__*/__webpack_require__.n(lib_hash);\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/sha2/lib.esm/types.js\nvar SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/sha2/lib.esm/_version.js\nconst sha2_lib_esm_version_version = \"sha2/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/sha2/lib.esm/sha2.js\n\n\n//const _ripemd160 = _hash.ripemd160;\n\n\n\n\nconst sha2_logger = new logger_lib_esm[\"b\" /* Logger */](sha2_lib_esm_version_version);\nfunction ripemd160(data) {\n    return \"0x\" + (hash_default.a.ripemd160().update(Object(lib_esm[\"a\" /* arrayify */])(data)).digest(\"hex\"));\n}\nfunction sha256(data) {\n    return \"0x\" + (hash_default.a.sha256().update(Object(lib_esm[\"a\" /* arrayify */])(data)).digest(\"hex\"));\n}\nfunction sha512(data) {\n    return \"0x\" + (hash_default.a.sha512().update(Object(lib_esm[\"a\" /* arrayify */])(data)).digest(\"hex\"));\n}\nfunction computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        sha2_logger.throwError(\"unsupported algorithm \" + algorithm, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash_default.a.hmac(hash_default.a[algorithm], Object(lib_esm[\"a\" /* arrayify */])(key)).update(Object(lib_esm[\"a\" /* arrayify */])(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js\n\n\n\nfunction pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = Object(lib_esm[\"a\" /* arrayify */])(password);\n    salt = Object(lib_esm[\"a\" /* arrayify */])(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = Object(lib_esm[\"a\" /* arrayify */])(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = Object(lib_esm[\"a\" /* arrayify */])(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(Object(lib_esm[\"a\" /* arrayify */])(T).slice(0, len), destPos);\n    }\n    return Object(lib_esm[\"i\" /* hexlify */])(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/signing-key/lib.esm/index.js + 1 modules\nvar signing_key_lib_esm = __webpack_require__(\"rhxT\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/_version.js\nconst wordlists_lib_esm_version_version = \"wordlists/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\n\n\n\nconst wordlist_logger = new logger_lib_esm[\"b\" /* Logger */](wordlists_lib_esm_version_version);\nclass wordlist_Wordlist {\n    constructor(locale) {\n        wordlist_logger.checkAbstract(new.target, wordlist_Wordlist);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return Object(lib_esm_id[\"a\" /* id */])(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-cz.js\n\n\nconst lang_cz_words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\nlet lang_cz_wordlist = null;\nfunction loadWords(lang) {\n    if (lang_cz_wordlist != null) {\n        return;\n    }\n    lang_cz_wordlist = lang_cz_words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n        lang_cz_wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass lang_cz_LangCz extends wordlist_Wordlist {\n    constructor() {\n        super(\"cz\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return lang_cz_wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return lang_cz_wordlist.indexOf(word);\n    }\n}\nconst langCz = new lang_cz_LangCz();\nwordlist_Wordlist.register(langCz);\n\n//# sourceMappingURL=lang-cz.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js\n\n\nconst lang_en_words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet lang_en_wordlist = null;\nfunction lang_en_loadWords(lang) {\n    if (lang_en_wordlist != null) {\n        return;\n    }\n    lang_en_wordlist = lang_en_words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        lang_en_wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass lang_en_LangEn extends wordlist_Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        lang_en_loadWords(this);\n        return lang_en_wordlist[index];\n    }\n    getWordIndex(word) {\n        lang_en_loadWords(this);\n        return lang_en_wordlist.indexOf(word);\n    }\n}\nconst langEn = new lang_en_LangEn();\nwordlist_Wordlist.register(langEn);\n\n//# sourceMappingURL=lang-en.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-es.js\n\n\n\nconst lang_es_words = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\nconst lookup = {};\nlet lang_es_wordlist = null;\nfunction dropDiacritic(word) {\n    wordlist_logger.checkNormalize();\n    return Object(utf8[\"h\" /* toUtf8String */])(Array.prototype.filter.call(Object(utf8[\"f\" /* toUtf8Bytes */])(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    const output = [];\n    Array.prototype.forEach.call(Object(utf8[\"f\" /* toUtf8Bytes */])(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // n-tilde\n        }\n        else if (c === 126) {\n            output.push(110);\n            output.push(204);\n            output.push(131);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return Object(utf8[\"h\" /* toUtf8String */])(output);\n}\nfunction lang_es_loadWords(lang) {\n    if (lang_es_wordlist != null) {\n        return;\n    }\n    lang_es_wordlist = lang_es_words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    lang_es_wordlist.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n        lang_es_wordlist = null;\n        throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n    }\n}\nclass lang_es_LangEs extends wordlist_Wordlist {\n    constructor() {\n        super(\"es\");\n    }\n    getWord(index) {\n        lang_es_loadWords(this);\n        return lang_es_wordlist[index];\n    }\n    getWordIndex(word) {\n        lang_es_loadWords(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\nconst langEs = new lang_es_LangEs();\nwordlist_Wordlist.register(langEs);\n\n//# sourceMappingURL=lang-es.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-fr.js\n\n\n\nconst lang_fr_words = \"\";\nlet lang_fr_wordlist = null;\nconst lang_fr_lookup = {};\nfunction lang_fr_dropDiacritic(word) {\n    wordlist_logger.checkNormalize();\n    return Object(utf8[\"h\" /* toUtf8String */])(Array.prototype.filter.call(Object(utf8[\"f\" /* toUtf8Bytes */])(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction lang_fr_expand(word) {\n    const output = [];\n    Array.prototype.forEach.call(Object(utf8[\"f\" /* toUtf8Bytes */])(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // Grave accent\n        }\n        else if (c === 45) {\n            output.push(204);\n            output.push(128);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return Object(utf8[\"h\" /* toUtf8String */])(output);\n}\nfunction lang_fr_loadWords(lang) {\n    if (lang_fr_wordlist != null) {\n        return;\n    }\n    lang_fr_wordlist = lang_fr_words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => lang_fr_expand(w));\n    lang_fr_wordlist.forEach((word, index) => {\n        lang_fr_lookup[lang_fr_dropDiacritic(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n        lang_fr_wordlist = null;\n        throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n    }\n}\nclass lang_fr_LangFr extends wordlist_Wordlist {\n    constructor() {\n        super(\"fr\");\n    }\n    getWord(index) {\n        lang_fr_loadWords(this);\n        return lang_fr_wordlist[index];\n    }\n    getWordIndex(word) {\n        lang_fr_loadWords(this);\n        return lang_fr_lookup[lang_fr_dropDiacritic(word)];\n    }\n}\nconst langFr = new lang_fr_LangFr();\nwordlist_Wordlist.register(langFr);\n\n//# sourceMappingURL=lang-fr.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-ja.js\n\n\n\n\nconst lang_ja_data = [\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet lang_ja_wordlist = null;\nfunction lang_ja_hex(word) {\n    return Object(lib_esm[\"i\" /* hexlify */])(Object(utf8[\"f\" /* toUtf8Bytes */])(word));\n}\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\nfunction lang_ja_loadWords(lang) {\n    if (lang_ja_wordlist !== null) {\n        return;\n    }\n    lang_ja_wordlist = [];\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform = {};\n    // Delete the diacritic marks\n    transform[Object(utf8[\"h\" /* toUtf8String */])([227, 130, 154])] = false;\n    transform[Object(utf8[\"h\" /* toUtf8String */])([227, 130, 153])] = false;\n    // Some simple transforms that sort out most of the order\n    transform[Object(utf8[\"h\" /* toUtf8String */])([227, 130, 133])] = Object(utf8[\"h\" /* toUtf8String */])([227, 130, 134]);\n    transform[Object(utf8[\"h\" /* toUtf8String */])([227, 129, 163])] = Object(utf8[\"h\" /* toUtf8String */])([227, 129, 164]);\n    transform[Object(utf8[\"h\" /* toUtf8String */])([227, 130, 131])] = Object(utf8[\"h\" /* toUtf8String */])([227, 130, 132]);\n    transform[Object(utf8[\"h\" /* toUtf8String */])([227, 130, 135])] = Object(utf8[\"h\" /* toUtf8String */])([227, 130, 136]);\n    // Normalize words using the transform\n    function normalize(word) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) {\n                continue;\n            }\n            if (target) {\n                kana = target;\n            }\n            result += kana;\n        }\n        return result;\n    }\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a, b) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = lang_ja_data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word = [];\n            for (let i = 0; i < length; i++) {\n                const k = mapping.indexOf(d[offset + i]);\n                word.push(227);\n                word.push((k & 0x40) ? 130 : 129);\n                word.push((k & 0x3f) + 128);\n            }\n            lang_ja_wordlist.push(Object(utf8[\"h\" /* toUtf8String */])(word));\n        }\n    }\n    lang_ja_wordlist.sort(sortJapanese);\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n    // This should ignore \"if\", but that doesn't work here??\n    /* istanbul ignore next */\n    if (lang_ja_hex(lang_ja_wordlist[442]) === KiYoKu && lang_ja_hex(lang_ja_wordlist[443]) === KyoKu) {\n        const tmp = lang_ja_wordlist[442];\n        lang_ja_wordlist[442] = lang_ja_wordlist[443];\n        lang_ja_wordlist[443] = tmp;\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        lang_ja_wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n}\nclass lang_ja_LangJa extends wordlist_Wordlist {\n    constructor() {\n        super(\"ja\");\n    }\n    getWord(index) {\n        lang_ja_loadWords(this);\n        return lang_ja_wordlist[index];\n    }\n    getWordIndex(word) {\n        lang_ja_loadWords(this);\n        return lang_ja_wordlist.indexOf(word);\n    }\n    split(mnemonic) {\n        wordlist_logger.checkNormalize();\n        return mnemonic.split(/(?:\\u3000| )+/g);\n    }\n    join(words) {\n        return words.join(\"\\u3000\");\n    }\n}\nconst langJa = new lang_ja_LangJa();\nwordlist_Wordlist.register(langJa);\n\n//# sourceMappingURL=lang-ja.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-ko.js\n\n\n\nconst lang_ko_data = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n];\nconst lang_ko_codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\nfunction getHangul(code) {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    }\n    else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n    return Object(utf8[\"h\" /* toUtf8String */])([225, (code >> 6) + 132, (code & 0x3f) + 128]);\n}\nlet lang_ko_wordlist = null;\nfunction lang_ko_loadWords(lang) {\n    if (lang_ko_wordlist != null) {\n        return;\n    }\n    lang_ko_wordlist = [];\n    lang_ko_data.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(lang_ko_codes.indexOf(data[i + j]));\n            }\n            lang_ko_wordlist.push(word);\n        }\n    });\n    lang_ko_wordlist.sort();\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        lang_ko_wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n}\nclass lang_ko_LangKo extends wordlist_Wordlist {\n    constructor() {\n        super(\"ko\");\n    }\n    getWord(index) {\n        lang_ko_loadWords(this);\n        return lang_ko_wordlist[index];\n    }\n    getWordIndex(word) {\n        lang_ko_loadWords(this);\n        return lang_ko_wordlist.indexOf(word);\n    }\n}\nconst langKo = new lang_ko_LangKo();\nwordlist_Wordlist.register(langKo);\n\n//# sourceMappingURL=lang-ko.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-it.js\n\n\nconst lang_it_words = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\nlet lang_it_wordlist = null;\nfunction lang_it_loadWords(lang) {\n    if (lang_it_wordlist != null) {\n        return;\n    }\n    lang_it_wordlist = lang_it_words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n        lang_it_wordlist = null;\n        throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n    }\n}\nclass lang_it_LangIt extends wordlist_Wordlist {\n    constructor() {\n        super(\"it\");\n    }\n    getWord(index) {\n        lang_it_loadWords(this);\n        return lang_it_wordlist[index];\n    }\n    getWordIndex(word) {\n        lang_it_loadWords(this);\n        return lang_it_wordlist.indexOf(word);\n    }\n}\nconst langIt = new lang_it_LangIt();\nwordlist_Wordlist.register(langIt);\n\n//# sourceMappingURL=lang-it.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-zh.js\n\n\n\nconst lang_zh_data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n// @TODO: Load lazily\nconst lang_zh_wordlist = {\n    zh_cn: null,\n    zh_tw: null\n};\nconst Checks = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst lang_zh_codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\nfunction lang_zh_loadWords(lang) {\n    if (lang_zh_wordlist[lang.locale] !== null) {\n        return;\n    }\n    lang_zh_wordlist[lang.locale] = [];\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(lang_zh_data[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + lang_zh_codes.indexOf(lang_zh_data[i * 3 + 1]),\n            128 + lang_zh_codes.indexOf(lang_zh_data[i * 3 + 2]),\n        ];\n        if (lang.locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = lang_zh_codes.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228 : 128);\n            }\n        }\n        lang_zh_wordlist[lang.locale].push(Object(utf8[\"h\" /* toUtf8String */])(bytes));\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (wordlist_Wordlist.check(lang) !== Checks[lang.locale]) {\n        lang_zh_wordlist[lang.locale] = null;\n        throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n    }\n}\nclass lang_zh_LangZh extends wordlist_Wordlist {\n    constructor(country) {\n        super(\"zh_\" + country);\n    }\n    getWord(index) {\n        lang_zh_loadWords(this);\n        return lang_zh_wordlist[this.locale][index];\n    }\n    getWordIndex(word) {\n        lang_zh_loadWords(this);\n        return lang_zh_wordlist[this.locale].indexOf(word);\n    }\n    split(mnemonic) {\n        mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n        return mnemonic.split(\"\");\n    }\n}\nconst langZhCn = new lang_zh_LangZh(\"cn\");\nwordlist_Wordlist.register(langZhCn);\nwordlist_Wordlist.register(langZhCn, \"zh\");\nconst langZhTw = new lang_zh_LangZh(\"tw\");\nwordlist_Wordlist.register(langZhTw);\n\n//# sourceMappingURL=lang-zh.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js\n\n\n\n\n\n\n\n\nconst wordlists = {\n    cz: langCz,\n    en: langEn,\n    es: langEs,\n    fr: langFr,\n    it: langIt,\n    ja: langJa,\n    ko: langKo,\n    zh: langZhCn,\n    zh_cn: langZhCn,\n    zh_tw: langZhTw\n};\n//# sourceMappingURL=wordlists.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/hdnode/lib.esm/_version.js\nconst hdnode_lib_esm_version_version = \"hdnode/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/hdnode/lib.esm/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst hdnode_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](hdnode_lib_esm_version_version);\nconst lib_esm_N = bignumber[\"a\" /* BigNumber */].from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = Object(utf8[\"f\" /* toUtf8Bytes */])(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return Object(lib_esm[\"h\" /* hexZeroPad */])(Object(lib_esm[\"i\" /* hexlify */])(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(Object(lib_esm[\"b\" /* concat */])([data, Object(lib_esm[\"e\" /* hexDataSlice */])(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            hdnode_lib_esm_logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst lib_esm_constructorGuard = {};\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n;\nclass lib_esm_HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        hdnode_lib_esm_logger.checkNew(new.target, lib_esm_HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== lib_esm_constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new signing_key_lib_esm[\"a\" /* SigningKey */](privateKey);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"privateKey\", signingKey.privateKey);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"privateKey\", null);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"publicKey\", Object(lib_esm[\"i\" /* hexlify */])(publicKey));\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"parentFingerprint\", parentFingerprint);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"fingerprint\", Object(lib_esm[\"e\" /* hexDataSlice */])(ripemd160(sha256(this.publicKey)), 0, 4));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", Object(transactions_lib_esm[\"computeAddress\"])(this.publicKey));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"chainCode\", chainCode);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"index\", index);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"mnemonic\", null);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"mnemonic\", null);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"mnemonic\", mnemonicOrPath);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current senitment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(Object(lib_esm[\"b\" /* concat */])([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            Object(lib_esm[\"i\" /* hexlify */])(this.depth),\n            this.parentFingerprint,\n            Object(lib_esm[\"h\" /* hexZeroPad */])(Object(lib_esm[\"i\" /* hexlify */])(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? Object(lib_esm[\"b\" /* concat */])([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new lib_esm_HDNode(lib_esm_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(Object(lib_esm[\"a\" /* arrayify */])(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(Object(lib_esm[\"a\" /* arrayify */])(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = Object(lib_esm[\"a\" /* arrayify */])(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(bignumber[\"a\" /* BigNumber */].from(IL).add(this.privateKey).mod(lib_esm_N));\n        }\n        else {\n            const ek = new signing_key_lib_esm[\"a\" /* SigningKey */](Object(lib_esm[\"i\" /* hexlify */])(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new lib_esm_HDNode(lib_esm_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = Object(lib_esm[\"a\" /* arrayify */])(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = Object(lib_esm[\"a\" /* arrayify */])(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new lib_esm_HDNode(lib_esm_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return lib_esm_HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return lib_esm_HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            hdnode_lib_esm_logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = Object(lib_esm[\"i\" /* hexlify */])(bytes.slice(5, 9));\n        const index = parseInt(Object(lib_esm[\"i\" /* hexlify */])(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = Object(lib_esm[\"i\" /* hexlify */])(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (Object(lib_esm[\"i\" /* hexlify */])(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new lib_esm_HDNode(lib_esm_constructorGuard, null, Object(lib_esm[\"i\" /* hexlify */])(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new lib_esm_HDNode(lib_esm_constructorGuard, Object(lib_esm[\"i\" /* hexlify */])(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return hdnode_lib_esm_logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nfunction mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = Object(utf8[\"f\" /* toUtf8Bytes */])(\"mnemonic\" + password, utf8[\"a\" /* UnicodeNormalizationForm */].NFKD);\n    return pbkdf2(Object(utf8[\"f\" /* toUtf8Bytes */])(mnemonic, utf8[\"a\" /* UnicodeNormalizationForm */].NFKD), salt, 2048, 64, \"sha512\");\n}\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    hdnode_lib_esm_logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = Object(lib_esm[\"a\" /* arrayify */])(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = Object(lib_esm[\"a\" /* arrayify */])(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return Object(lib_esm[\"i\" /* hexlify */])(entropy.slice(0, entropyBits / 8));\n}\nfunction entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = Object(lib_esm[\"a\" /* arrayify */])(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = Object(lib_esm[\"a\" /* arrayify */])(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nfunction isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/random/lib.esm/random.js\nvar random = __webpack_require__(\"bkUu\");\n\n// EXTERNAL MODULE: ./node_modules/aes-js/index.js\nvar aes_js = __webpack_require__(\"cke4\");\nvar aes_js_default = /*#__PURE__*/__webpack_require__.n(aes_js);\n\n// EXTERNAL MODULE: ./node_modules/scrypt-js/scrypt.js\nvar scrypt = __webpack_require__(\"n2qG\");\nvar scrypt_default = /*#__PURE__*/__webpack_require__.n(scrypt);\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/utils.js\n\n\n\nfunction looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return Object(lib_esm[\"a\" /* arrayify */])(hexString);\n}\nfunction zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nfunction getPassword(password) {\n    if (typeof (password) === 'string') {\n        return Object(utf8[\"f\" /* toUtf8Bytes */])(password, utf8[\"a\" /* UnicodeNormalizationForm */].NFKC);\n    }\n    return Object(lib_esm[\"a\" /* arrayify */])(password);\n}\nfunction searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nfunction uuidV4(randomBytes) {\n    const bytes = Object(lib_esm[\"a\" /* arrayify */])(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = Object(lib_esm[\"i\" /* hexlify */])(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/_version.js\nconst json_wallets_lib_esm_version_version = \"json-wallets/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js\n\nvar keystore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst keystore_logger = new logger_lib_esm[\"b\" /* Logger */](json_wallets_lib_esm_version_version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nclass keystore_KeystoreAccount extends properties_lib_esm[\"a\" /* Description */] {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes_js_default.a.Counter(iv);\n        const aesCtr = new aes_js_default.a.ModeOfOperation.ctr(key, counter);\n        return Object(lib_esm[\"a\" /* arrayify */])(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = Object(lib_esm[\"i\" /* hexlify */])(Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(lib_esm[\"b\" /* concat */])([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        keystore_logger.throwError(\"unsupported cipher\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = Object(transactions_lib_esm[\"computeAddress\"])(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (Object(address_lib_esm[\"a\" /* getAddress */])(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: Object(lib_esm[\"i\" /* hexlify */])(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes_js_default.a.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes_js_default.a.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = Object(lib_esm[\"a\" /* arrayify */])(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = lib_esm_HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new keystore_KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Object(lib_esm[\"a\" /* arrayify */])(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction keystore_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return keystore_logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return keystore_logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nfunction decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt_default.a.syncScrypt);\n    return _getAccount(data, key);\n}\nfunction decrypt(json, password, progressCallback) {\n    return keystore_awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, keystore_pbkdf2, scrypt_default.a.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nfunction encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (Object(address_lib_esm[\"a\" /* getAddress */])(account.address) !== Object(transactions_lib_esm[\"computeAddress\"])(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = lib_esm_HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = Object(lib_esm[\"a\" /* arrayify */])(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = Object(lib_esm[\"a\" /* arrayify */])(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = Object(lib_esm[\"a\" /* arrayify */])(options.salt);\n    }\n    else {\n        salt = Object(random[\"a\" /* randomBytes */])(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = Object(lib_esm[\"a\" /* arrayify */])(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = Object(random[\"a\" /* randomBytes */])(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = Object(lib_esm[\"a\" /* arrayify */])(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = Object(random[\"a\" /* randomBytes */])(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt_default.a.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = Object(lib_esm[\"a\" /* arrayify */])(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes_js_default.a.Counter(iv);\n        const aesCtr = new aes_js_default.a.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = Object(lib_esm[\"a\" /* arrayify */])(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(lib_esm[\"b\" /* concat */])([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: Object(lib_esm[\"i\" /* hexlify */])(iv).substring(2),\n                },\n                ciphertext: Object(lib_esm[\"i\" /* hexlify */])(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: Object(lib_esm[\"i\" /* hexlify */])(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = Object(random[\"a\" /* randomBytes */])(16);\n            const mnemonicCounter = new aes_js_default.a.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes_js_default.a.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = Object(lib_esm[\"a\" /* arrayify */])(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: Object(lib_esm[\"i\" /* hexlify */])(mnemonicIv).substring(2),\n                mnemonicCiphertext: Object(lib_esm[\"i\" /* hexlify */])(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js\n\n\n\n\n\n\n\n\n\n\nconst crowdsale_logger = new logger_lib_esm[\"b\" /* Logger */](json_wallets_lib_esm_version_version);\n\nclass crowdsale_CrowdsaleAccount extends properties_lib_esm[\"a\" /* Description */] {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nfunction crowdsale_decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = Object(address_lib_esm[\"a\" /* getAddress */])(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        crowdsale_logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = Object(lib_esm[\"a\" /* arrayify */])(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes_js_default.a.ModeOfOperation.cbc(key, iv);\n    const seed = aes_js_default.a.padding.pkcs7.strip(Object(lib_esm[\"a\" /* arrayify */])(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = Object(utf8[\"f\" /* toUtf8Bytes */])(seedHex);\n    const privateKey = Object(keccak256_lib_esm[\"a\" /* keccak256 */])(seedHexBytes);\n    return new crowdsale_CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js\n\n\nfunction isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nfunction isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nfunction getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return Object(address_lib_esm[\"a\" /* getAddress */])(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return Object(address_lib_esm[\"a\" /* getAddress */])(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/index.js\n\n\n\n\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = crowdsale_decrypt(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decrypt(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return crowdsale_decrypt(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\n\n//# sourceMappingURL=index.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wallet/lib.esm/_version.js\nconst wallet_lib_esm_version_version = \"wallet/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/wallet/lib.esm/index.js\n\nvar wallet_lib_esm_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst wallet_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](wallet_lib_esm_version_version);\nfunction isAccount(value) {\n    return (value != null && Object(lib_esm[\"l\" /* isHexString */])(value.privateKey, 32) && value.address != null);\n}\nfunction lib_esm_hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nclass lib_esm_Wallet extends lib_esm_Signer {\n    constructor(privateKey, provider) {\n        wallet_lib_esm_logger.checkNew(new.target, lib_esm_Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new signing_key_lib_esm[\"a\" /* SigningKey */](privateKey.privateKey);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_signingKey\", () => signingKey);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", Object(transactions_lib_esm[\"computeAddress\"])(this.publicKey));\n            if (this.address !== Object(address_lib_esm[\"a\" /* getAddress */])(privateKey.address)) {\n                wallet_lib_esm_logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (lib_esm_hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = lib_esm_HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (Object(transactions_lib_esm[\"computeAddress\"])(node.privateKey) !== this.address) {\n                    wallet_lib_esm_logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (signing_key_lib_esm[\"a\" /* SigningKey */].isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    wallet_lib_esm_logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new signing_key_lib_esm[\"a\" /* SigningKey */](privateKey);\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_signingKey\", () => signingKey);\n            }\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_mnemonic\", () => null);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", Object(transactions_lib_esm[\"computeAddress\"])(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !lib_esm_Provider.isProvider(provider)) {\n            wallet_lib_esm_logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new lib_esm_Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return Object(properties_lib_esm[\"f\" /* resolveProperties */])(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (Object(address_lib_esm[\"a\" /* getAddress */])(tx.from) !== this.address) {\n                    wallet_lib_esm_logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(transactions_lib_esm[\"serialize\"])(tx)));\n            return Object(transactions_lib_esm[\"serialize\"])(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return wallet_lib_esm_awaiter(this, void 0, void 0, function* () {\n            return Object(lib_esm[\"m\" /* joinSignature */])(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return wallet_lib_esm_awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield typed_data_TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    wallet_lib_esm_logger.throwError(\"cannot resolve ENS names without a provider\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return Object(lib_esm[\"m\" /* joinSignature */])(this._signingKey().signDigest(typed_data_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encrypt(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = Object(random[\"a\" /* randomBytes */])(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = Object(lib_esm[\"a\" /* arrayify */])(Object(lib_esm[\"e\" /* hexDataSlice */])(Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(lib_esm[\"b\" /* concat */])([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return lib_esm_Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new lib_esm_Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new lib_esm_Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new lib_esm_Wallet(lib_esm_HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nfunction verifyMessage(message, signature) {\n    return Object(transactions_lib_esm[\"recoverAddress\"])(hashMessage(message), signature);\n}\nfunction verifyTypedData(domain, types, value, signature) {\n    return Object(transactions_lib_esm[\"recoverAddress\"])(typed_data_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/constants/lib.esm/index.js + 1 modules\nvar constants_lib_esm = __webpack_require__(\"tGuN\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/networks/lib.esm/_version.js\nconst networks_lib_esm_version_version = \"networks/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/networks/lib.esm/index.js\n\n\n\nconst networks_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](networks_lib_esm_version_version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            // These networks are currently faulty on Alchemy as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once AlchemyAPI has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.AlchemyProvider(network, options.alchemy);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Alchemy as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n    unspecified: {\n        chainId: 0,\n        name: \"unspecified\"\n    },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: {\n        chainId: 2,\n        name: \"morden\"\n    },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: {\n        chainId: 62,\n        name: \"classicMorden\",\n    },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nfunction lib_esm_getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            networks_lib_esm_logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        networks_lib_esm_logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/constants/lib.esm/hashes.js\nvar hashes = __webpack_require__(\"SHcd\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/strings/lib.esm/idna.js\n\n\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nfunction _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nfunction _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nfunction _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nfunction nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = Object(utf8[\"g\" /* toUtf8CodePoints */])(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = Object(utf8[\"g\" /* toUtf8CodePoints */])(Object(utf8[\"e\" /* _toUtf8String */])(codes), utf8[\"a\" /* UnicodeNormalizationForm */].NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = Object(utf8[\"e\" /* _toUtf8String */])(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/namehash.js\n\n\n\n\n\nconst namehash_logger = new logger_lib_esm[\"b\" /* Logger */](hash_lib_esm_version_version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nfunction isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nfunction namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        namehash_logger.throwArgumentError(\"invalid address - \" + String(name), \"name\", name);\n    }\n    let result = Zeros;\n    while (name.length) {\n        const partition = name.match(Partition);\n        const label = Object(utf8[\"f\" /* toUtf8Bytes */])(nameprep(partition[3]));\n        result = Object(keccak256_lib_esm[\"a\" /* keccak256 */])(Object(lib_esm[\"b\" /* concat */])([result, Object(keccak256_lib_esm[\"a\" /* keccak256 */])(label)]));\n        name = partition[2] || \"\";\n    }\n    return Object(lib_esm[\"i\" /* hexlify */])(result);\n}\n//# sourceMappingURL=namehash.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/base64/lib.esm/base64.js\n\n\nfunction decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return Object(lib_esm[\"a\" /* arrayify */])(data);\n}\nfunction encode(data) {\n    data = Object(lib_esm[\"a\" /* arrayify */])(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/web/lib.esm/_version.js\nconst web_lib_esm_version_version = \"web/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/web/lib.esm/geturl.js\n\nvar geturl_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction getUrl(href, options) {\n    return geturl_awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            redirect: \"follow\",\n            referrer: \"client\", // no-referrer, *client\n        };\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: Object(lib_esm[\"a\" /* arrayify */])(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/web/lib.esm/index.js\n\nvar web_lib_esm_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst web_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](web_lib_esm_version_version);\n\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (Object(lib_esm[\"k\" /* isBytesLike */])(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return Object(utf8[\"h\" /* toUtf8String */])(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return Object(lib_esm[\"i\" /* hexlify */])(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nfunction _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    web_lib_esm_logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    web_lib_esm_logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            web_lib_esm_logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                web_lib_esm_logger.throwError(\"basic authentication requires a secure https url\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + encode(Object(utf8[\"f\" /* toUtf8Bytes */])(authorization))\n            };\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(web_lib_esm_logger.makeError(\"timeout\", logger_lib_esm[\"b\" /* Logger */].errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return web_lib_esm_awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    // Exponential back-off throttling\n                    if (response.statusCode === 429 && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = yield throttleCallback(attempt, url);\n                        }\n                        if (tryAgain) {\n                            let stall = 0;\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            }\n                            else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n                            //console.log(\"Stalling 429\");\n                            yield staller(stall);\n                            continue;\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        web_lib_esm_logger.throwError(\"missing response\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    web_lib_esm_logger.throwError(\"bad response\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        web_lib_esm_logger.throwError(\"processing response error\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it eitehr returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return web_lib_esm_logger.throwError(\"failed response\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nfunction fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(Object(utf8[\"h\" /* toUtf8String */])(value));\n            }\n            catch (error) {\n                web_lib_esm_logger.throwError(\"invalid JSON\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = Object(utf8[\"f\" /* toUtf8Bytes */])(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : Object(properties_lib_esm[\"g\" /* shallowCopy */])(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = Object(properties_lib_esm[\"g\" /* shallowCopy */])(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nfunction poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = Object(properties_lib_esm[\"g\" /* shallowCopy */])(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/bech32/index.js\nvar bech32 = __webpack_require__(\"vyt/\");\nvar bech32_default = /*#__PURE__*/__webpack_require__.n(bech32);\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/_version.js\nconst providers_lib_esm_version_version = \"providers/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/constants/lib.esm/addresses.js\nvar addresses = __webpack_require__(\"wAtr\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/formatter.js\n\n\n\n\n\n\n\n\n\nconst formatter_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\nclass formatter_Formatter {\n    constructor() {\n        formatter_logger.checkNew(new.target, formatter_Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: formatter_Formatter.allowNull(number, null),\n            accessList: formatter_Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: formatter_Formatter.allowNull(hash, null),\n            blockNumber: formatter_Formatter.allowNull(number, null),\n            transactionIndex: formatter_Formatter.allowNull(number, null),\n            confirmations: formatter_Formatter.allowNull(number, null),\n            from: address,\n            gasPrice: bigNumber,\n            gasLimit: bigNumber,\n            to: formatter_Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: formatter_Formatter.allowNull(this.uint256),\n            s: formatter_Formatter.allowNull(this.uint256),\n            v: formatter_Formatter.allowNull(number),\n            creates: formatter_Formatter.allowNull(address, null),\n            raw: formatter_Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: formatter_Formatter.allowNull(address),\n            nonce: formatter_Formatter.allowNull(number),\n            gasLimit: formatter_Formatter.allowNull(bigNumber),\n            gasPrice: formatter_Formatter.allowNull(bigNumber),\n            to: formatter_Formatter.allowNull(address),\n            value: formatter_Formatter.allowNull(bigNumber),\n            data: formatter_Formatter.allowNull(strictData),\n            type: formatter_Formatter.allowNull(number),\n            accessList: formatter_Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: formatter_Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: formatter_Formatter.allowNull(this.address, null),\n            from: formatter_Formatter.allowNull(this.address, null),\n            contractAddress: formatter_Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: formatter_Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: formatter_Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: formatter_Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: formatter_Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            status: formatter_Formatter.allowNull(number)\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: formatter_Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: formatter_Formatter.allowNull(formatter_Formatter.arrayOf(hash)),\n        };\n        formats.blockWithTransactions = Object(properties_lib_esm[\"g\" /* shallowCopy */])(formats.block);\n        formats.blockWithTransactions.transactions = formatter_Formatter.allowNull(formatter_Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: formatter_Formatter.allowNull(blockTag, undefined),\n            toBlock: formatter_Formatter.allowNull(blockTag, undefined),\n            blockHash: formatter_Formatter.allowNull(hash, undefined),\n            address: formatter_Formatter.allowNull(address, undefined),\n            topics: formatter_Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: formatter_Formatter.allowNull(number),\n            blockHash: formatter_Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: formatter_Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: formatter_Formatter.allowFalsish(data, \"0x\"),\n            topics: formatter_Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return Object(transactions_lib_esm[\"accessListify\"])(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return bignumber[\"a\" /* BigNumber */].from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return bignumber[\"a\" /* BigNumber */].from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (Object(lib_esm[\"l\" /* isHexString */])(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return formatter_logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return Object(address_lib_esm[\"a\" /* getAddress */])(value);\n    }\n    callAddress(value) {\n        if (!Object(lib_esm[\"l\" /* isHexString */])(value, 32)) {\n            return null;\n        }\n        const address = Object(address_lib_esm[\"a\" /* getAddress */])(Object(lib_esm[\"e\" /* hexDataSlice */])(value, 12));\n        return (address === addresses[\"a\" /* AddressZero */]) ? null : address;\n    }\n    contractAddress(value) {\n        return Object(address_lib_esm[\"b\" /* getContractAddress */])(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || Object(lib_esm[\"l\" /* isHexString */])(blockTag)) {\n            return Object(lib_esm[\"g\" /* hexValue */])(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (Object(lib_esm[\"d\" /* hexDataLength */])(result) !== 32) {\n            return formatter_logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = bignumber[\"a\" /* BigNumber */].from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!Object(lib_esm[\"l\" /* isHexString */])(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return Object(lib_esm[\"h\" /* hexZeroPad */])(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        return formatter_Formatter.check(format, value);\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return formatter_Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && bignumber[\"a\" /* BigNumber */].from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if (transaction.type === 1 && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = formatter_Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (Object(lib_esm[\"l\" /* isHexString */])(chainId)) {\n                chainId = bignumber[\"a\" /* BigNumber */].from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (Object(lib_esm[\"l\" /* isHexString */])(chainId)) {\n                chainId = bignumber[\"a\" /* BigNumber */].from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return Object(transactions_lib_esm[\"parse\"])(value);\n    }\n    receiptLog(value) {\n        return formatter_Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = formatter_Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = bignumber[\"a\" /* BigNumber */].from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        formatter_logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    formatter_logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                formatter_logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return formatter_Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return formatter_Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nfunction isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nfunction isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nfunction showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/base-provider.js\n\nvar base_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst base_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (Object(lib_esm[\"d\" /* hexDataLength */])(topic) !== 32) {\n        base_provider_logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction base_provider_getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (Object(lib_esm[\"d\" /* hexDataLength */])(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (lib_esm_ForkEvent.isForkEvent(eventName)) {\n        base_provider_logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nclass base_provider_Event {\n    constructor(tag, listener, once) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"tag\", tag);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"listener\", listener);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return Object(lib_esm[\"h\" /* hexZeroPad */])(bignumber[\"a\" /* BigNumber */].from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(Object(lib_esm[\"b\" /* concat */])([data, Object(lib_esm[\"e\" /* hexDataSlice */])(sha256(sha256(data)), 0, 4)]));\n}\nclass base_provider_Resolver {\n    constructor(provider, address, name) {\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", provider);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"name\", name);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"address\", provider.formatter.address(address));\n    }\n    _fetchBytes(selector, parameters) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"addr(bytes32,uint256)\")\n            const transaction = {\n                to: this.address,\n                data: Object(lib_esm[\"c\" /* hexConcat */])([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            const result = yield this.provider.call(transaction);\n            if (result === \"0x\") {\n                return null;\n            }\n            const offset = bignumber[\"a\" /* BigNumber */].from(Object(lib_esm[\"e\" /* hexDataSlice */])(result, 0, 32)).toNumber();\n            const length = bignumber[\"a\" /* BigNumber */].from(Object(lib_esm[\"e\" /* hexDataSlice */])(result, offset, offset + 32)).toNumber();\n            return Object(lib_esm[\"e\" /* hexDataSlice */])(result, offset + 32, offset + 32 + length);\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            base_provider_logger.throwError(`unsupported coin type: ${coinType}`, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = Object(lib_esm[\"a\" /* arrayify */])(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(Object(lib_esm[\"b\" /* concat */])([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(Object(lib_esm[\"b\" /* concat */])([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32_default.a.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32_default.a.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                // keccak256(\"addr(bytes32)\")\n                const transaction = {\n                    to: this.address,\n                    data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                };\n                const hexBytes = yield this.provider.call(transaction);\n                // No address\n                if (hexBytes === \"0x\" || hexBytes === hashes[\"a\" /* HashZero */]) {\n                    return null;\n                }\n                return this.provider.formatter.callAddress(hexBytes);\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                base_provider_logger.throwError(`invalid or unsupported coin data`, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getContentHash() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return base_provider_logger.throwError(`invalid or unsupported content hash data`, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = Object(utf8[\"f\" /* toUtf8Bytes */])(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = Object(lib_esm[\"b\" /* concat */])([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = Object(lib_esm[\"b\" /* concat */])([keyBytes, Object(lib_esm[\"h\" /* hexZeroPad */])(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", Object(lib_esm[\"i\" /* hexlify */])(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return Object(utf8[\"h\" /* toUtf8String */])(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nclass base_provider_BaseProvider extends lib_esm_Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        base_provider_logger.checkNew(new.target, lib_esm_Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getNetwork\")(network);\n            if (knownNetwork) {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                base_provider_logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    base_provider_logger.throwError(\"no network detected\", logger_lib_esm[\"b\" /* Logger */].errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is refelcted); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === logger_lib_esm[\"b\" /* Logger */].errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new formatter_Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return lib_esm_getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = bignumber[\"a\" /* BigNumber */].from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                base_provider_logger.warn(\"network block skew detected; skipping block events\");\n                this.emit(\"error\", base_provider_logger.makeError(\"network block skew detected\", logger_lib_esm[\"b\" /* Logger */].errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            return base_provider_logger.throwError(\"provider does not support network detection\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = base_provider_logger.makeError(\"underlying network changed\", logger_lib_esm[\"b\" /* Logger */].errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            if (confirmations == null) {\n                confirmations = 1;\n            }\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                let timer = null;\n                let done = false;\n                const handler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (timer) {\n                        clearTimeout(timer);\n                    }\n                    if (done) {\n                        return;\n                    }\n                    done = true;\n                    this.removeListener(transactionHash, handler);\n                    resolve(receipt);\n                };\n                this.on(transactionHash, handler);\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    timer = setTimeout(() => {\n                        if (done) {\n                            return;\n                        }\n                        timer = null;\n                        done = true;\n                        this.removeListener(transactionHash, handler);\n                        reject(base_provider_logger.makeError(\"timeout exceeded\", logger_lib_esm[\"b\" /* Logger */].errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return bignumber[\"a\" /* BigNumber */].from(result);\n            }\n            catch (error) {\n                return base_provider_logger.throwError(\"bad result from backend\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return bignumber[\"a\" /* BigNumber */].from(result);\n            }\n            catch (error) {\n                return base_provider_logger.throwError(\"bad result from backend\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return bignumber[\"a\" /* BigNumber */].from(result).toNumber();\n            }\n            catch (error) {\n                return base_provider_logger.throwError(\"bad result from backend\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return Object(lib_esm[\"i\" /* hexlify */])(result);\n            }\n            catch (error) {\n                return base_provider_logger.throwError(\"bad result from backend\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => Object(lib_esm[\"g\" /* hexValue */])(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return Object(lib_esm[\"i\" /* hexlify */])(result);\n            }\n            catch (error) {\n                return base_provider_logger.throwError(\"bad result from backend\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash) {\n        if (hash != null && Object(lib_esm[\"d\" /* hexDataLength */])(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            base_provider_logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", logger_lib_esm[\"b\" /* Logger */].errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        // @TODO: (confirmations? number, timeout? number)\n        result.wait = (confirmations) => base_provider_awaiter(this, void 0, void 0, function* () {\n            // We know this transaction *must* exist (whether it gets mined is\n            // another story), so setting an emitted value forces us to\n            // wait even if the node returns null for the receipt\n            if (confirmations !== 0) {\n                this._emitted[\"t:\" + tx.hash] = \"pending\";\n            }\n            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n            if (receipt == null && confirmations === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                base_provider_logger.throwError(\"transaction failed\", logger_lib_esm[\"b\" /* Logger */].errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => Object(lib_esm[\"i\" /* hexlify */])(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? bignumber[\"a\" /* BigNumber */].from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? Object(lib_esm[\"i\" /* hexlify */])(v) : null));\n            });\n            return this.formatter.transactionRequest(yield Object(properties_lib_esm[\"f\" /* resolveProperties */])(tx));\n        });\n    }\n    _getFilter(filter) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield Object(properties_lib_esm[\"f\" /* resolveProperties */])(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return Object(lib_esm[\"i\" /* hexlify */])(result);\n            }\n            catch (error) {\n                return base_provider_logger.throwError(\"bad result from backend\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return bignumber[\"a\" /* BigNumber */].from(result);\n            }\n            catch (error) {\n                return base_provider_logger.throwError(\"bad result from backend\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                base_provider_logger.throwError(\"ENS name not configured\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (Object(lib_esm[\"l\" /* isHexString */])(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));\n                    if (Object(lib_esm[\"l\" /* isHexString */])(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    base_provider_logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => base_provider_awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    return this.formatter.blockWithTransactions(block);\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => base_provider_awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => base_provider_awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield Object(properties_lib_esm[\"f\" /* resolveProperties */])({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return formatter_Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    base_provider_logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            const address = yield this._getResolver(name);\n            if (address == null) {\n                return null;\n            }\n            return new base_provider_Resolver(this, address, name);\n        });\n    }\n    _getResolver(name) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                base_provider_logger.throwError(\"network does not support ENS\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            return this.formatter.callAddress(yield this.call(transaction));\n        });\n    }\n    resolveName(name) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (Object(lib_esm[\"l\" /* isHexString */])(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                base_provider_logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return base_provider_awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = Object(lib_esm[\"a\" /* arrayify */])(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !bignumber[\"a\" /* BigNumber */].from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = bignumber[\"a\" /* BigNumber */].from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = Object(utf8[\"h\" /* toUtf8String */])(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    perform(method, params) {\n        return base_provider_logger.throwError(method + \" not implemented\", logger_lib_esm[\"b\" /* Logger */].errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new base_provider_Event(base_provider_getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = base_provider_getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = base_provider_getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = base_provider_getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = base_provider_getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = base_provider_getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js\n\nvar json_rpc_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\nconst json_rpc_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && Object(lib_esm[\"l\" /* isHexString */])(e.data)) {\n            return e.data;\n        }\n    }\n    let message = error.message;\n    if (error.code === logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds/)) {\n        json_rpc_provider_logger.throwError(\"insufficient funds for intrinsic transaction cost\", logger_lib_esm[\"b\" /* Logger */].errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        json_rpc_provider_logger.throwError(\"nonce has already been used\", logger_lib_esm[\"b\" /* Logger */].errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        json_rpc_provider_logger.throwError(\"replacement fee too low\", logger_lib_esm[\"b\" /* Logger */].errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        json_rpc_provider_logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_lib_esm[\"b\" /* Logger */].errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction json_rpc_provider_timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst json_rpc_provider_constructorGuard = {};\nclass json_rpc_provider_JsonRpcSigner extends lib_esm_Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        json_rpc_provider_logger.checkNew(new.target, json_rpc_provider_JsonRpcSigner);\n        super();\n        if (constructorGuard !== json_rpc_provider_constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_index\", addressOrIndex);\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_address\", null);\n        }\n        else {\n            json_rpc_provider_logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return json_rpc_provider_logger.throwError(\"cannot alter JSON-RPC Signer connection\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(json_rpc_provider_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                json_rpc_provider_logger.throwError(\"unknown account #\" + this._index, logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = Object(properties_lib_esm[\"g\" /* shallowCopy */])(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = Object(properties_lib_esm[\"g\" /* shallowCopy */])(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        return Object(properties_lib_esm[\"f\" /* resolveProperties */])({\n            tx: Object(properties_lib_esm[\"f\" /* resolveProperties */])(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    json_rpc_provider_logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return json_rpc_provider_logger.throwError(\"signing transactions is unsupported\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return poll(() => {\n                return this.provider.getTransaction(hash).then((tx) => {\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash);\n                });\n            }, { onceBlock: this.provider }).catch((error) => {\n                error.transactionHash = hash;\n                throw error;\n            });\n        });\n    }\n    signMessage(message) {\n        return json_rpc_provider_awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? Object(utf8[\"f\" /* toUtf8Bytes */])(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), Object(lib_esm[\"i\" /* hexlify */])(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return json_rpc_provider_awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield typed_data_TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(typed_data_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return json_rpc_provider_awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends json_rpc_provider_JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst json_rpc_provider_allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true\n};\nclass json_rpc_provider_JsonRpcProvider extends base_provider_BaseProvider {\n    constructor(url, network) {\n        json_rpc_provider_logger.checkNew(new.target, json_rpc_provider_JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"connection\", Object.freeze(Object(properties_lib_esm[\"g\" /* shallowCopy */])(url)));\n        }\n        this._nextId = 42;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        return json_rpc_provider_awaiter(this, void 0, void 0, function* () {\n            yield json_rpc_provider_timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(bignumber[\"a\" /* BigNumber */].from(chainId).toNumber());\n                }\n                catch (error) {\n                    return json_rpc_provider_logger.throwError(\"could not detect network\", logger_lib_esm[\"b\" /* Logger */].errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return json_rpc_provider_logger.throwError(\"could not detect network\", logger_lib_esm[\"b\" /* Logger */].errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new json_rpc_provider_JsonRpcSigner(json_rpc_provider_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: Object(properties_lib_esm[\"c\" /* deepCopy */])(request),\n            provider: this\n        });\n        return fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = Object(properties_lib_esm[\"e\" /* getStatic */])(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return json_rpc_provider_awaiter(this, void 0, void 0, function* () {\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                json_rpc_provider_logger.throwError(method + \" not implemented\", logger_lib_esm[\"b\" /* Logger */].errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return json_rpc_provider_timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = Object(properties_lib_esm[\"g\" /* shallowCopy */])(json_rpc_provider_allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        Object(properties_lib_esm[\"b\" /* checkProperties */])(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = Object(lib_esm[\"g\" /* hexValue */])(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = Object(lib_esm[\"i\" /* hexlify */])(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = Object(transactions_lib_esm[\"accessListify\"])(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/ws.js\n\n\n\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\n\n//# sourceMappingURL=ws.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js\n\nvar websocket_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst websocket_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicats\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nclass websocket_provider_WebSocketProvider extends json_rpc_provider_JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            websocket_provider_logger.throwError(\"WebSocketProvider does not support 'any' network yet\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_websocket\", new WS(this.connection.url));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_requests\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_subs\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_subIds\", {});\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(error, \"code\", result.error.code || null);\n                        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        websocket_provider_logger.throwError(\"cannot reset events block on WebSocketProvider\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        websocket_provider_logger.throwError(\"cannot set polling interval on WebSocketProvider\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return websocket_provider_awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        websocket_provider_logger.throwError(\"cannot set polling on WebSocketProvider\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return websocket_provider_awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = bignumber[\"a\" /* BigNumber */].from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return websocket_provider_awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WS.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js\n\nvar url_json_rpc_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nconst url_json_rpc_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nclass url_json_rpc_provider_StaticJsonRpcProvider extends json_rpc_provider_JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return url_json_rpc_provider_awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    url_json_rpc_provider_logger.throwError(\"no network detected\", logger_lib_esm[\"b\" /* Logger */].errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nclass url_json_rpc_provider_UrlJsonRpcProvider extends url_json_rpc_provider_StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        url_json_rpc_provider_logger.checkAbstract(new.target, url_json_rpc_provider_UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getNetwork\")(network);\n        apiKey = Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getApiKey\")(apiKey);\n        const connection = Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        url_json_rpc_provider_logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return url_json_rpc_provider_logger.throwError(\"API provider does not support signing\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return url_json_rpc_provider_logger.throwError(\"not implemented; sub-classes must override getUrl\", logger_lib_esm[\"b\" /* Logger */].errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js\n\n\n\n\n\n\nconst alchemy_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nclass alchemy_provider_AlchemyWebSocketProvider extends websocket_provider_WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new alchemy_provider_AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nclass alchemy_provider_AlchemyProvider extends url_json_rpc_provider_UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new alchemy_provider_AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            alchemy_provider_logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            default:\n                alchemy_provider_logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js\n\nvar cloudflare_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nconst cloudflare_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\nclass cloudflare_provider_CloudflareProvider extends url_json_rpc_provider_UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            cloudflare_provider_logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                cloudflare_provider_logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return cloudflare_provider_awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js\n\nvar etherscan_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst etherscan_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, nonce: true, value: true }[key]) {\n            value = Object(lib_esm[\"g\" /* hexValue */])(Object(lib_esm[\"i\" /* hexlify */])(value));\n        }\n        else if (key === \"accessList\") {\n            value = value;\n        }\n        else {\n            value = Object(lib_esm[\"i\" /* hexlify */])(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction etherscan_provider_getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst etherscan_provider_defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction etherscan_provider_checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && Object(lib_esm[\"l\" /* isHexString */])(e.data)) {\n            return e.data;\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        etherscan_provider_logger.throwError(\"insufficient funds for intrinsic transaction cost\", logger_lib_esm[\"b\" /* Logger */].errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low/)) {\n        etherscan_provider_logger.throwError(\"nonce has already been used\", logger_lib_esm[\"b\" /* Logger */].errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        etherscan_provider_logger.throwError(\"replacement fee too low\", logger_lib_esm[\"b\" /* Logger */].errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception/)) {\n        etherscan_provider_logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", logger_lib_esm[\"b\" /* Logger */].errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nclass etherscan_provider_EtherscanProvider extends base_provider_BaseProvider {\n    constructor(network, apiKey) {\n        etherscan_provider_logger.checkNew(new.target, etherscan_provider_EtherscanProvider);\n        super(network);\n        let name = \"invalid\";\n        if (this.network) {\n            name = this.network.name;\n        }\n        let baseUrl = null;\n        switch (name) {\n            case \"homestead\":\n                baseUrl = \"https://api.etherscan.io\";\n                break;\n            case \"ropsten\":\n                baseUrl = \"https://api-ropsten.etherscan.io\";\n                break;\n            case \"rinkeby\":\n                baseUrl = \"https://api-rinkeby.etherscan.io\";\n                break;\n            case \"kovan\":\n                baseUrl = \"https://api-kovan.etherscan.io\";\n                break;\n            case \"goerli\":\n                baseUrl = \"https://api-goerli.etherscan.io\";\n                break;\n            default:\n                throw new Error(\"unsupported network\");\n        }\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"baseUrl\", baseUrl);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"apiKey\", apiKey || etherscan_provider_defaultApiKey);\n    }\n    detectNetwork() {\n        return etherscan_provider_awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return etherscan_provider_awaiter(this, void 0, void 0, function* () {\n            let url = this.baseUrl + \"/api\";\n            let apiKey = \"\";\n            if (this.apiKey) {\n                apiKey += \"&apikey=\" + this.apiKey;\n            }\n            const get = (url, payload, procFunc) => etherscan_provider_awaiter(this, void 0, void 0, function* () {\n                this.emit(\"debug\", {\n                    action: \"request\",\n                    request: url,\n                    provider: this\n                });\n                const connection = {\n                    url: url,\n                    throttleSlotInterval: 1000,\n                    throttleCallback: (attempt, url) => {\n                        if (this.isCommunityResource()) {\n                            showThrottleMessage();\n                        }\n                        return Promise.resolve(true);\n                    }\n                };\n                let payloadStr = null;\n                if (payload) {\n                    connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                    payloadStr = Object.keys(payload).map((key) => {\n                        return `${key}=${payload[key]}`;\n                    }).join(\"&\");\n                }\n                const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    request: url,\n                    response: Object(properties_lib_esm[\"c\" /* deepCopy */])(result),\n                    provider: this\n                });\n                return result;\n            });\n            switch (method) {\n                case \"getBlockNumber\":\n                    url += \"?module=proxy&action=eth_blockNumber\" + apiKey;\n                    return get(url, null);\n                case \"getGasPrice\":\n                    url += \"?module=proxy&action=eth_gasPrice\" + apiKey;\n                    return get(url, null);\n                case \"getBalance\":\n                    // Returns base-10 result\n                    url += \"?module=account&action=balance&address=\" + params.address;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null, etherscan_provider_getResult);\n                case \"getTransactionCount\":\n                    url += \"?module=proxy&action=eth_getTransactionCount&address=\" + params.address;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null);\n                case \"getCode\":\n                    url += \"?module=proxy&action=eth_getCode&address=\" + params.address;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null);\n                case \"getStorageAt\":\n                    url += \"?module=proxy&action=eth_getStorageAt&address=\" + params.address;\n                    url += \"&position=\" + params.position;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null);\n                case \"sendTransaction\":\n                    return get(url, {\n                        module: \"proxy\",\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction,\n                        apikey: this.apiKey\n                    }).catch((error) => {\n                        return etherscan_provider_checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        url += \"?module=proxy&action=eth_getBlockByNumber&tag=\" + params.blockTag;\n                        if (params.includeTransactions) {\n                            url += \"&boolean=true\";\n                        }\n                        else {\n                            url += \"&boolean=false\";\n                        }\n                        url += apiKey;\n                        return get(url, null);\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    url += \"?module=proxy&action=eth_getTransactionByHash&txhash=\" + params.transactionHash;\n                    url += apiKey;\n                    return get(url, null);\n                case \"getTransactionReceipt\":\n                    url += \"?module=proxy&action=eth_getTransactionReceipt&txhash=\" + params.transactionHash;\n                    url += apiKey;\n                    return get(url, null);\n                case \"call\": {\n                    if (params.transaction.type != null) {\n                        etherscan_provider_logger.throwError(\"Etherscan does not currently support Berlin\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                            operation: \"call\",\n                            transaction: params.transaction\n                        });\n                    }\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    postData.apikey = this.apiKey;\n                    try {\n                        return yield get(url, postData);\n                    }\n                    catch (error) {\n                        return etherscan_provider_checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    if (params.transaction.type != null) {\n                        etherscan_provider_logger.throwError(\"Etherscan does not currently support Berlin\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                            operation: \"estimateGas\",\n                            transaction: params.transaction\n                        });\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    postData.apikey = this.apiKey;\n                    try {\n                        return yield get(url, postData);\n                    }\n                    catch (error) {\n                        return etherscan_provider_checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    url += \"?module=logs&action=getLogs\";\n                    if (params.filter.fromBlock) {\n                        url += \"&fromBlock=\" + checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        url += \"&toBlock=\" + checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        url += \"&address=\" + params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            etherscan_provider_logger.throwError(\"unsupported topic count\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                etherscan_provider_logger.throwError(\"unsupported topic format\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            url += \"&topic0=\" + topic0;\n                        }\n                    }\n                    url += apiKey;\n                    const logs = yield get(url, null, etherscan_provider_getResult);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    url += \"?module=stats&action=ethprice\";\n                    url += apiKey;\n                    return parseFloat((yield get(url, null, etherscan_provider_getResult)).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // @TODO: Allow startBlock and endBlock to be Promises\n    getHistory(addressOrName, startBlock, endBlock) {\n        let url = this.baseUrl;\n        let apiKey = \"\";\n        if (this.apiKey) {\n            apiKey += \"&apikey=\" + this.apiKey;\n        }\n        if (startBlock == null) {\n            startBlock = 0;\n        }\n        if (endBlock == null) {\n            endBlock = 99999999;\n        }\n        return this.resolveName(addressOrName).then((address) => {\n            url += \"/api?module=account&action=txlist&address=\" + address;\n            url += \"&startblock=\" + startBlock;\n            url += \"&endblock=\" + endBlock;\n            url += \"&sort=asc\" + apiKey;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.apiKey === etherscan_provider_defaultApiKey) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            return fetchJson(connection, null, etherscan_provider_getResult).then((result) => {\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    request: url,\n                    response: Object(properties_lib_esm[\"c\" /* deepCopy */])(result),\n                    provider: this\n                });\n                let output = [];\n                result.forEach((tx) => {\n                    [\"contractAddress\", \"to\"].forEach(function (key) {\n                        if (tx[key] == \"\") {\n                            delete tx[key];\n                        }\n                    });\n                    if (tx.creates == null && tx.contractAddress != null) {\n                        tx.creates = tx.contractAddress;\n                    }\n                    let item = this.formatter.transactionResponse(tx);\n                    if (tx.timeStamp) {\n                        item.timestamp = parseInt(tx.timeStamp);\n                    }\n                    output.push(item);\n                });\n                return output;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === etherscan_provider_defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/random/lib.esm/shuffle.js\n\nfunction shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js\n\nvar fallback_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\nconst fallback_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\nfunction fallback_provider_now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                fallback_provider_logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (bignumber[\"a\" /* BigNumber */].isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction fallback_provider_stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    logger_lib_esm[\"b\" /* Logger */].errors.CALL_EXCEPTION,\n    logger_lib_esm[\"b\" /* Logger */].errors.INSUFFICIENT_FUNDS,\n    logger_lib_esm[\"b\" /* Logger */].errors.NONCE_EXPIRED,\n    logger_lib_esm[\"b\" /* Logger */].errors.REPLACEMENT_UNDERPRICED,\n    logger_lib_esm[\"b\" /* Logger */].errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = Object(properties_lib_esm[\"g\" /* shallowCopy */])(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = Object(properties_lib_esm[\"g\" /* shallowCopy */])(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = Object(properties_lib_esm[\"g\" /* shallowCopy */])(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return fallback_provider_awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return fallback_provider_awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && Object(lib_esm[\"l\" /* isHexString */])(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && Object(lib_esm[\"l\" /* isHexString */])(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && Object(lib_esm[\"l\" /* isHexString */])(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && Object(lib_esm[\"l\" /* isHexString */])(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && Object(lib_esm[\"l\" /* isHexString */])(filter.fromBlock)) || (filter.toBlock && Object(lib_esm[\"l\" /* isHexString */])(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return fallback_provider_logger.throwError(\"unknown method error\", logger_lib_esm[\"b\" /* Logger */].errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nclass fallback_provider_FallbackProvider extends base_provider_BaseProvider {\n    constructor(providers, quorum) {\n        fallback_provider_logger.checkNew(new.target, fallback_provider_FallbackProvider);\n        if (providers.length === 0) {\n            fallback_provider_logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (lib_esm_Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = Object(properties_lib_esm[\"g\" /* shallowCopy */])(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                fallback_provider_logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            fallback_provider_logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return fallback_provider_awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return fallback_provider_awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(properties_lib_esm[\"g\" /* shallowCopy */]));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = fallback_provider_now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = fallback_provider_now();\n                    config.staller = fallback_provider_stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, fallback_provider_now()),\n                                request: { method: method, params: Object(properties_lib_esm[\"c\" /* deepCopy */])(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, fallback_provider_now()),\n                                request: { method: method, params: Object(properties_lib_esm[\"c\" /* deepCopy */])(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: Object(properties_lib_esm[\"c\" /* deepCopy */])(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield fallback_provider_stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    fallback_provider_logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return fallback_provider_logger.throwError(\"failed to meet quorum\", logger_lib_esm[\"b\" /* Logger */].errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js\n\nconst IpcProvider = null;\n\n//# sourceMappingURL=ipc-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/infura-provider.js\n\n\n\n\n\n\nconst infura_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nclass infura_provider_InfuraWebSocketProvider extends websocket_provider_WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new infura_provider_InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            infura_provider_logger.throwError(\"INFURA WebSocket project secrets unsupported\", logger_lib_esm[\"b\" /* Logger */].errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"apiKey\", provider.projectId);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"projectId\", provider.projectId);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nclass infura_provider_InfuraProvider extends url_json_rpc_provider_UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new infura_provider_InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            infura_provider_logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            infura_provider_logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            default:\n                infura_provider_logger.throwError(\"unsupported network\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js\n/* istanbul ignore file */\n\n\n\n\nconst nodesmith_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n// Special API key provided by Nodesmith for ethers.js\nconst nodesmith_provider_defaultApiKey = \"ETHERS_JS_SHARED\";\nclass nodesmith_provider_NodesmithProvider extends url_json_rpc_provider_UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            nodesmith_provider_logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || nodesmith_provider_defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        nodesmith_provider_logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                nodesmith_provider_logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js\n\n\n\n\nconst pocket_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\n// These are load-balancer-based applicatoin IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nclass pocket_provider_PocketProvider extends url_json_rpc_provider_UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = Object(properties_lib_esm[\"e\" /* getStatic */])((new.target), \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                pocket_provider_logger.throwError(\"unsupported network\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            pocket_provider_logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            pocket_provider_logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            pocket_provider_logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            pocket_provider_logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            pocket_provider_logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                pocket_provider_logger.throwError(\"unsupported network\", logger_lib_esm[\"b\" /* Logger */].errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/web3-provider.js\n\n\n\n\nconst web3_provider_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    return function (method, params) {\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            sendFunc(request, function (error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                if (result.error) {\n                    const error = new Error(result.error.message);\n                    error.code = result.error.code;\n                    error.data = result.error.data;\n                    return reject(error);\n                }\n                resolve(result.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        return provider.request({ method, params });\n    };\n}\nclass web3_provider_Web3Provider extends json_rpc_provider_JsonRpcProvider {\n    constructor(provider, network) {\n        web3_provider_logger.checkNew(new.target, web3_provider_Web3Provider);\n        if (provider == null) {\n            web3_provider_logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                web3_provider_logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        Object(properties_lib_esm[\"d\" /* defineReadOnly */])(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst providers_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](providers_lib_esm_version_version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new json_rpc_provider_JsonRpcProvider(network);\n                case \"ws\":\n                    return new websocket_provider_WebSocketProvider(network);\n                default:\n                    providers_lib_esm_logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = lib_esm_getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        providers_lib_esm_logger.throwError(\"unsupported getDefaultProvider network\", logger_lib_esm[\"b\" /* Logger */].errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider: fallback_provider_FallbackProvider,\n        AlchemyProvider: alchemy_provider_AlchemyProvider,\n        CloudflareProvider: cloudflare_provider_CloudflareProvider,\n        EtherscanProvider: etherscan_provider_EtherscanProvider,\n        InfuraProvider: infura_provider_InfuraProvider,\n        JsonRpcProvider: json_rpc_provider_JsonRpcProvider,\n        NodesmithProvider: nodesmith_provider_NodesmithProvider,\n        PocketProvider: pocket_provider_PocketProvider,\n        Web3Provider: web3_provider_Web3Provider,\n        IpcProvider: IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\n\n//# sourceMappingURL=index.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/base64/lib.esm/index.js\n\n\n//# sourceMappingURL=index.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/solidity/lib.esm/index.js\n\n\n\n\n\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst lib_esm_Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return Object(lib_esm[\"p\" /* zeroPad */])(value, 32);\n            }\n            return Object(lib_esm[\"a\" /* arrayify */])(value);\n        case \"string\":\n            return Object(utf8[\"f\" /* toUtf8Bytes */])(value);\n        case \"bytes\":\n            return Object(lib_esm[\"a\" /* arrayify */])(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return Object(lib_esm[\"p\" /* zeroPad */])(value, 32);\n            }\n            return Object(lib_esm[\"a\" /* arrayify */])(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            throw new Error(\"invalid number type - \" + type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = bignumber[\"a\" /* BigNumber */].from(value).toTwos(size);\n        return Object(lib_esm[\"p\" /* zeroPad */])(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            throw new Error(\"invalid bytes type - \" + type);\n        }\n        if (Object(lib_esm[\"a\" /* arrayify */])(value).byteLength !== size) {\n            throw new Error(\"invalid value for \" + type);\n        }\n        if (isArray) {\n            return Object(lib_esm[\"a\" /* arrayify */])((value + lib_esm_Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            throw new Error(\"invalid value for \" + type);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return Object(lib_esm[\"b\" /* concat */])(result);\n    }\n    throw new Error(\"invalid type - \" + type);\n}\n// @TODO: Array Enum\nfunction lib_esm_pack(types, values) {\n    if (types.length != values.length) {\n        throw new Error(\"type/value count mismatch\");\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return Object(lib_esm[\"i\" /* hexlify */])(Object(lib_esm[\"b\" /* concat */])(tight));\n}\nfunction keccak256(types, values) {\n    return Object(keccak256_lib_esm[\"a\" /* keccak256 */])(lib_esm_pack(types, values));\n}\nfunction lib_esm_sha256(types, values) {\n    return sha256(lib_esm_pack(types, values));\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@ethersproject/rlp/lib.esm/index.js + 1 modules\nvar rlp_lib_esm = __webpack_require__(\"4WVH\");\n\n// CONCATENATED MODULE: ./node_modules/@ethersproject/strings/lib.esm/bytes32.js\n\n\n\n\nfunction formatBytes32String(text) {\n    // Get the bytes\n    const bytes = Object(utf8[\"f\" /* toUtf8Bytes */])(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return Object(lib_esm[\"i\" /* hexlify */])(Object(lib_esm[\"b\" /* concat */])([bytes, hashes[\"a\" /* HashZero */]]).slice(0, 32));\n}\nfunction parseBytes32String(bytes) {\n    const data = Object(lib_esm[\"a\" /* arrayify */])(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return Object(utf8[\"h\" /* toUtf8String */])(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/units/lib.esm/_version.js\nconst units_lib_esm_version_version = \"units/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/@ethersproject/units/lib.esm/index.js\n\n\n\n\nconst units_lib_esm_logger = new logger_lib_esm[\"b\" /* Logger */](units_lib_esm_version_version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nfunction commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        units_lib_esm_logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nfunction formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nfunction parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        units_lib_esm_logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nfunction formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nfunction parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map\n// CONCATENATED MODULE: ./node_modules/ethers/lib.esm/utils.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n////////////////////////\n// Enums\n\n\n////////////////////////\n// Exports\n\n//# sourceMappingURL=utils.js.map\n// CONCATENATED MODULE: ./node_modules/ethers/lib.esm/_version.js\nconst ethers_lib_esm_version_version = \"ethers/5.1.0\";\n//# sourceMappingURL=_version.js.map\n// CONCATENATED MODULE: ./node_modules/ethers/lib.esm/ethers.js\n\n\n\n\n\n\n\n\n\n\n\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\n\nconst ethers_logger = new logger_lib_esm[\"b\" /* Logger */](ethers_lib_esm_version_version);\n////////////////////////\n// Exports\n\n//# sourceMappingURL=ethers.js.map\n// CONCATENATED MODULE: ./node_modules/ethers/lib.esm/index.js\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers_namespaceObject;\n    }\n}\ncatch (error) { }\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/random/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/ripemd.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/sha/1.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/hmac.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/utils.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/constants/lib.esm/hashes.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/sha/384.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/common.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/sha/256.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/random/lib.esm/random.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/aes-js/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/sha/224.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/sha.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/sha/512.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/constants/lib.esm/strings.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/constants/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/sha/common.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/bech32/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/constants/lib.esm/addresses.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/address.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/array.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/null.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/number.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/string.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/fragments.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/abi-coder.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abi/lib.esm/interface.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abstract-provider/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/abstract-signer/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/contracts/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/contracts/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/hash/lib.esm/message.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/hash/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/hash/lib.esm/typed-data.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/basex/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/lib.esm/types.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/sha2/lib.esm/sha2.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-cz.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-es.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-fr.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-ja.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-ko.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-it.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/lang-zh.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/hdnode/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/hdnode/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/json-wallets/lib.esm/utils.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/json-wallets/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/json-wallets/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wallet/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/wallet/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/networks/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/networks/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/strings/lib.esm/idna.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/hash/lib.esm/namehash.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/base64/lib.esm/base64.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/web/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/web/lib.esm/geturl.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/web/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/formatter.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/base-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/ws.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/random/lib.esm/shuffle.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/infura-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/web3-provider.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/providers/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/base64/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/solidity/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/strings/lib.esm/bytes32.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/units/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/@ethersproject/units/lib.esm/index.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/ethers/lib.esm/utils.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/ethers/lib.esm/_version.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/ethers/lib.esm/ethers.js","/home/paulo/Desktop/Private_Blockchain/Web/WebApp/node_modules/ethers/lib.esm/index.js"],"names":[],"mappings":"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AC,MAAqB;AAC1C,eAAe,mBAAO,CAAC,MAAU;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA,GAAG;AACH,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AC5PA;AAAO;AACP,kC;;;;;;;;ACDa;;AAEb,YAAY,mBAAO,CAAC,MAAU;;AAE9B,aAAa,mBAAO,CAAC,MAAO;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClCa;;AAEb,YAAY,mBAAO,CAAC,MAAS;AAC7B,aAAa,mBAAO,CAAC,MAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;;AAEA;AACA;;;;;;;;;AC3Fa;;AAEb,YAAY,mBAAO,CAAC,MAAU;AAC9B,aAAa,mBAAO,CAAC,MAAW;AAChC,gBAAgB,mBAAO,CAAC,MAAU;AAClC,aAAa,mBAAO,CAAC,MAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,QAAQ,cAAc;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAAa;AACmC;AACD;AACV;AACrC,mBAAmB,oEAAM,CAAC,wDAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,oEAAM;AAChF;AACA,aAAa;AACb;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAQ;AACnB;AACA;AACA,kC;;;;;;;;;AC3Ca;;AAEb;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,cAAc;;AAEvD,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,aAAa;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;;AAEA;AACA,aAAa;AACb,+BAA+B,cAAc;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,YAAY;AACnC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA,uBAAuB,YAAY;AACnC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA,uBAAuB,YAAY;AACnC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;;AAEA,2BAA2B,QAAQ;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA,2BAA2B,iBAAiB;;AAE5C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA,2BAA2B,sBAAsB;AACjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;;AAEA,2BAA2B,sBAAsB;AACjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,kBAAkB;;AAEpE;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,0CAA0C;;AAEzE;AACA,0BAA0B,qDAAqD;;AAE/E;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,QAAQ,IAA8B;AACtC;;AAEA;AACA;AACA;AACA,KAAK,MAAM,EAYN;;;AAGL,CAAC;;;;;;;;;AC7xBY;;AAEb,YAAY,mBAAO,CAAC,MAAU;AAC9B,aAAa,mBAAO,CAAC,MAAO;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;;AAEA,aAAa,mBAAO,CAAC,MAAc;AACnC,cAAc,mBAAO,CAAC,MAAe;AACrC,WAAW,mBAAO,CAAC,MAAY;AAC/B,cAAc,mBAAO,CAAC,MAAe;AACrC,YAAY,mBAAO,CAAC,MAAa;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACda;;AAEb,eAAe,mBAAO,CAAC,MAAS;AAChC,iBAAiB,mBAAO,CAAC,MAAW;AACpC,iBAAiB,mBAAO,CAAC,MAAW;AACpC,iBAAiB,mBAAO,CAAC,MAAW;AACpC,iBAAiB,mBAAO,CAAC,MAAW;;;;;;;;;ACNvB;;AAEb,YAAY,mBAAO,CAAC,MAAU;AAC9B,aAAa,mBAAO,CAAC,MAAW;AAChC,aAAa,mBAAO,CAAC,MAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA,QAAQ,cAAc;AACtB,8CAA8C;AAC9C;AACA,0BAA0B;AAC1B;AACA,gDAAgD;AAChD;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzUA;AACO,6BAA6B;AACpC,mC;;ACFa;AAC6B;AAC0C;AAChD;AACI;AACxC,iC;;;;;;;;ACLa;;AAEb,YAAY,mBAAO,CAAC,MAAU;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;AChDY;AACZ;;AAEA;AACA;AACA,eAAe,qBAAqB;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrLA;AAAO;AACP,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDO,MAAM,gBAAO;AACpB,oC;;ACDa;AAC+D;AACvB;AACM;AACZ;AACT;AACtC,MAAM,qBAAM,OAAO,gCAAM,CAAC,gBAAO;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAM;AACd;AACA;AACO,MAAM,qBAAM;AACnB;AACA,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAS;AACxB;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAM;AACrC;AACA,sBAAsB;AACtB;AACA,oBAAoB,mCAAQ;AAC5B;AACA;AACA,oBAAoB,iCAAM;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,mCAAQ,CAAC,8BAAS;AACtC;AACA,YAAY,qBAAM,mCAAmC,gCAAM;AAC3D;AACA;AACA,aAAa;AACb;AACA;AACA,oBAAoB,iCAAM;AAC1B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,qBAAM;AACnB;AACA,QAAQ,oDAAc,gBAAgB,mCAAQ;AAC9C,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA,gBAAgB,QAAQ,kCAAO,aAAa;AAC5C,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAM,kCAAkC,gCAAM;AAC9D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAS;AACxB;AACA;AACA,0C;;;;;;;;;;;AClJa;AACuC;AACF;AACT;AAClC,MAAM,oBAAY,SAAS,KAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAU,CAAC,qCAAU;AACpC;AACA;AACA,mC;;ACxBa;AAC4B;AACzC;AACO,MAAM,wBAAc,SAAS,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;AClBa;AACkC;AACT;AACtC,MAAM,YAAM,OAAO,gCAAM,CAAC,gBAAO;AACgB;AACJ;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAM,qEAAqE,gCAAM;AACjG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB,YAAM,uEAAuE,gCAAM;AACnG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,YAAM;AACd;AACA;AACA,QAAQ,YAAM;AACd;AACA,2BAA2B,qBAAM;AACjC,4BAA4B,qBAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mCAAmC,2BAA2B,EAAE;AAChE;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,aAAa;AACb;AACA;AACA;AACA;AACO,MAAM,gBAAU,SAAS,KAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAM;AACd;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC,4BAA4B,wBAAc;AAC1C;AACA;AACA;AACA;AACA,iC;;ACnMa;AAC4B;AAClC,MAAM,oBAAY,SAAS,KAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;AChBa;AAC4C;AAChB;AAClC,MAAM,uBAAiB,SAAS,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mCAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,gBAAU,SAAS,uBAAiB;AACjD;AACA;AACA;AACA;AACA,wCAAwC,kCAAO;AAC/C;AACA;AACA,iC;;AC5Ba;AAC4C;AAChB;AACzC;AACO,MAAM,2BAAe,SAAS,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kCAAO;AAC/C;AACA;AACA,uC;;ACxBa;AAC4B;AAClC,MAAM,cAAS,SAAS,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;ACpBa;AACwC;AACyB;AACrC;AAClC,MAAM,kBAAW,SAAS,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8BAAS;AACzB;AACA,2BAA2B,gCAAU;AACrC;AACA;AACA,gDAAgD,yBAAG,MAAM,iCAAW;AACpE;AACA;AACA;AACA,sBAAsB,0BAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;ACzCa;AACsD;AACvB;AACrC,MAAM,kBAAW,SAAS,uBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mCAAW;AAC/C;AACA;AACA,eAAe,oCAAY;AAC3B;AACA;AACA,kC;;ACjBa;AAC4B;AACF;AAChC,MAAM,gBAAU,SAAS,KAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA,wCAAwC,MAAM;AAC9C;AACA;AACA,iC;;ACxDa;AACwC;AACM;AACZ;AACV;AACrC,MAAM,gBAAM,OAAO,gCAAM,CAAC,gBAAO;AACjC;AACA;AACA,sBAAsB;AACtB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gBAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gBAAM,wDAAwD,EAAE;AACxE;AACA;AACA;AACA,oBAAoB,6CAA6C,kBAAkB;AACnF;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B,kBAAkB;AACjE;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAkD,kBAAkB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gBAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAc;AACtB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACO,MAAM,mBAAS;AACtB;AACA;AACA,YAAY,gBAAM,8BAA8B,gCAAM;AACtD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAS;AACxC;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAS;AAC5B;AACA,eAAe,mBAAS;AACxB;AACA;AACA,YAAY,mBAAS;AACrB;AACA;AACA,mBAAmB,mBAAS;AAC5B;AACA;AACA;AACA,iEAAiE,mBAAS;AAC1E,SAAS;AACT;AACA;AACA;AACA,mBAAmB,mBAAS;AAC5B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mBAAS;AACvD;AACO,MAAM,kBAAQ;AACrB;AACA;AACA,YAAY,gBAAM,wCAAwC,gCAAM;AAChE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAQ;AACpB;AACA;AACA;AACA,mBAAmB,kBAAQ;AAC3B;AACA,eAAe,kBAAQ;AACvB;AACA;AACA,YAAY,kBAAQ;AACpB;AACA;AACA;AACA;AACA,uBAAuB,0BAAgB;AACvC;AACA;AACA;AACA,uBAAuB,6BAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAAgB;AACnC;AACA;AACA,mBAAmB,6BAAmB;AACtC;AACA,eAAe,gBAAM;AACrB;AACA;AACA;AACA;AACA;AACO,4BAA4B,kBAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA,qDAAqD,mBAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAM;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA,YAAY,gBAAM;AAClB;AACA,qBAAqB,8BAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gBAAM;AACd;AACA;AACA;AACO,MAAM,6BAAmB,SAAS,kBAAQ;AACjD;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,gBAAM,uDAAuD,gCAAM;AAC/E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAAmB;AACtC;AACA,eAAe,6BAAmB;AAClC;AACA;AACA,YAAY,6BAAmB;AAC/B;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA,qDAAqD,mBAAS;AAC9D;AACA;AACA,8BAA8B,8BAAS;AACvC;AACA,mBAAmB,6BAAmB;AACtC;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA,eAAe,6BAAmB;AAClC;AACA;AACA;AACA;AACA;AACO,MAAM,0BAAgB,SAAS,6BAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAAgB;AACnC;AACA,eAAe,0BAAgB;AAC/B;AACA;AACA,YAAY,0BAAgB;AAC5B;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mBAAS;AAC9D,wDAAwD,mBAAS;AACjE;AACA;AACA,8BAA8B,8BAAS;AACvC;AACA,mBAAmB,0BAAgB;AACnC;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gBAAM,2CAA2C,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;AChxBa;AACb;AACgD;AACW;AACZ;AACV;AACrC,MAAM,gBAAM,OAAO,gCAAM,CAAC,gBAAO;AACwB;AACT;AACJ;AACI;AACJ;AACW;AACb;AACI;AACA;AACF;AACJ;AACxC;AACA;AACO,MAAM,kBAAQ;AACrB;AACA,QAAQ,gBAAM,sBAAsB,kBAAQ;AAC5C,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA,2BAA2B,oBAAY;AACvC;AACA,2BAA2B,oBAAY;AACvC;AACA,2BAA2B,kBAAW;AACtC;AACA,2BAA2B,gBAAU;AACrC;AACA,2BAA2B,gBAAU;AACrC;AACA,2BAA2B,gBAAU;AACrC;AACA,iBAAiB;AACjB;AACA,2BAA2B,cAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA,uBAAuB,kBAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA,uBAAuB,2BAAe;AACtC;AACA,eAAe,gBAAM;AACrB;AACA,oBAAoB,WAAW;AAC/B;AACA,mBAAmB,qBAAM;AACzB;AACA;AACA,mBAAmB,qBAAM;AACzB;AACA;AACA,0DAA0D,mBAAS;AACnE,0BAA0B,gBAAU;AACpC;AACA;AACA;AACA;AACA,YAAY,gBAAM,4CAA4C,gCAAM;AACpE,wBAAwB,6CAA6C;AACrE,wBAAwB;AACxB,aAAa;AACb;AACA,0DAA0D,mBAAS;AACnE,2BAA2B,gBAAU;AACrC;AACA;AACA;AACA;AACA;AACA,0DAA0D,mBAAS;AACnE,0BAA0B,gBAAU;AACpC,4CAA4C,mCAAQ;AACpD;AACA;AACO,4BAA4B,kBAAQ;AAC3C,qC;;AChGa;AACuC;AACC;AACmD;AAC/D;AACY;AAC8B;AACrC;AACc;AACyD;AACtE;AACV;AACrC,MAAM,gBAAM,OAAO,gCAAM,CAAC,gBAAO;AACJ;AACtB,MAAM,wBAAc,SAAS,yCAAW;AAC/C;AACO,MAAM,gCAAsB,SAAS,yCAAW;AACvD;AACO,MAAM,iBAAO,SAAS,yCAAW;AACxC;AACA;AACA;AACA;AACA;AACA,qFAAqF,SAAS;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO,aAAa,6BAA6B,MAAM,0BAA0B;AACxI;AACA;AACA;AACA;AACA,KAAK,IAAI,4BAA4B,EAAE,EAAE;AACzC;AACA;AACO,MAAM,mBAAS;AACtB;AACA,QAAQ,gBAAM,sBAAsB,mBAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAc;AACtB,mBAAmB,kBAAQ;AAC3B,SAAS;AACT,QAAQ,oDAAc,oBAAoB,+CAAS;AACnD,QAAQ,oDAAc,sBAAsB;AAC5C,QAAQ,oDAAc,mBAAmB;AACzC,QAAQ,oDAAc,mBAAmB;AACzC,QAAQ,oDAAc,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAM;AAC9B;AACA;AACA;AACA,oBAAoB,oDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,oDAAc,iBAAiB,6BAAmB;AAC9D;AACA;AACA,aAAa;AACb;AACA,QAAQ,oDAAc;AACtB;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA,uBAAuB,WAAW;AAClC,YAAY,gBAAM;AAClB;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA,eAAe,6CAAU;AACzB;AACA;AACA,eAAe,uCAAY,CAAC,gCAAE;AAC9B;AACA;AACA,eAAe,gCAAE;AACjB;AACA;AACA;AACA,YAAY,sCAAW;AACvB;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA;AACA,sCAAsC,0BAAgB;AACtD;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAQ;AAC9B,YAAY,kCAAO;AACnB,YAAY,gBAAM,8DAA8D,sBAAsB,YAAY,kCAAO;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAO,CAAC,iCAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mCAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,oBAAoB,kCAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAM,qCAAqC,gCAAM;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM,gEAAgE,gCAAM;AACxF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAE;AACzB;AACA;AACA,uBAAuB,8CAAS,CAAC,kCAAO;AACxC;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAU,CAAC,kCAAO;AACrC;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAM,0DAA0D;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAM;AAClB;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAE;AAClC;AACA;AACA,gCAAgC,8CAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sCAAW;AAC5B,gBAAgB,gBAAM,uCAAuC,gCAAM,2BAA2B,+DAA+D;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAS,aAAa,oCAAoC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8EAA8E,iCAAM;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAO,EAAE,+BAA+B;AAChF;AACA;AACA,wCAAwC,iBAAO,EAAE,wDAAwD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mCAAmC,2BAA2B,UAAU;AAC5G,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,gCAAgC,gCAAgC,EAAE,UAAU;AAC5E,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAAS;AAC5B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,mBAAmB,wBAAc;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;AC9eO,MAAM,uBAAO;AACpB,oC;;ACDa;AACsC;AACqB;AACzB;AACV;AACrC,MAAM,cAAM,OAAO,gCAAM,CAAC,uBAAO;AACjC;AACA;AACA;AACA;AACA;AACO,MAAM,iBAAS,SAAS,yCAAW;AAC1C;AACA;AACA;AACA;AACO,MAAM,sBAAc,SAAS,iBAAS;AAC7C;AACA,aAAa,sCAAW;AACxB,YAAY,cAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO,MAAM,4BAAoB,SAAS,iBAAS;AACnD;AACA,aAAa,sCAAW;AACxB,YAAY,cAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO,MAAM,iCAAyB,SAAS,iBAAS;AACxD;AACA,aAAa,sCAAW;AACxB,YAAY,cAAM;AAClB;AACA,aAAa,sCAAW;AACxB,YAAY,cAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,MAAM,gBAAQ;AACrB;AACA,QAAQ,cAAM,2BAA2B,gBAAQ;AACjD,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;AC9EO,MAAM,uCAAO;AACpB,oC;;ACDa;AACb,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC2F;AAC5C;AACV;AACrC,MAAM,8BAAM,OAAO,gCAAM,CAAC,uCAAO;AACjC;AACA;AACA;AACA;AACA,IAAI,gCAAM;AACV,IAAI,gCAAM;AACV,IAAI,gCAAM;AACV;AACA;AACA;AACO,MAAM,cAAM;AACnB;AACA;AACA;AACA,QAAQ,8BAAM,2BAA2B,cAAM;AAC/C,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA6B,uDAAiB;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA6B,uDAAiB;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8BAAM;AACtB;AACA;AACA,mBAAmB,iDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAAM;AAC1B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uDAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAAM;AAC9B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAAM,iCAAiC,wDAAwD,gCAAM;AAChI;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAAM;AAC9B;AACA;AACA,iBAAiB;AACjB;AACA,yBAAyB,uDAAiB;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,8BAAM,gCAAgC,gCAAM;AACxD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,kBAAU,SAAS,cAAM;AACtC;AACA,QAAQ,8BAAM,sBAAsB,kBAAU;AAC9C;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAAM,qBAAqB,gCAAM,gCAAgC,uBAAuB;AACpG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAU;AAC7B;AACA;AACA,iC;;;;;ACxNO,MAAM,iCAAO;AACpB,oC;;ACDa;AACb,IAAI,eAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC2E;AACf;AACQ;AACI;AACnB;AACkC;AACyB;AACpD;AACb;AACV;AACrC,MAAM,wBAAM,OAAO,gCAAM,CAAC,iCAAO;AACjC;AACA;AACA;AACA,MAAM,8BAAsB;AAC5B;AACA;AACA;AACA,SAAS,mBAAW;AACpB,WAAW,eAAS;AACpB;AACA;AACA;AACA,mBAAmB,6CAAU;AAC7B;AACA,uBAAuB;AACvB;AACA,YAAY,wBAAM,mEAAmE,gCAAM;AAC3F;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY,wBAAM;AAClB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,eAAS;AACpB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yBAAyB,mBAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,eAAS;AACpB;AACA;AACA;AACA,wBAAwB,iDAAW;AACnC;AACA;AACA,QAAQ,wBAAM;AACd;AACA;AACA;AACA;AACA;AACA,iCAAiC,uDAAiB;AAClD,8BAA8B,mBAAW;AACzC;AACA,iBAAiB,kBAAkB,eAAS;AAC5C,wBAAwB,6CAAU;AAClC,wBAAwB,wBAAM,2DAA2D,gCAAM;AAC/F;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAW;AACxC,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAiB;AAChD;AACA;AACA,wBAAwB,uDAAiB,iBAAiB;AAC1D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAAS;AAChC;AACA;AACA,0BAA0B,8BAAS;AACnC;AACA;AACA,0BAA0B,8BAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6CAAa;AACzC;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,0BAA0B,mCAAQ;AAClC,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,0BAA0B,8BAAS;AACnC;AACA;AACA;AACA,4BAA4B,8BAAS;AACrC;AACA,gBAAgB,wBAAM,wDAAwD,gCAAM;AACpF;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAM,+BAA+B,kDAAkD,GAAG,gCAAM;AAC5G;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAS;AACxB;AACA,gBAAgB,wBAAM,qDAAqD,gCAAM;AACjF;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,eAAS;AACxB;AACA;AACA;AACA,kCAAkC,iDAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,eAAS;AACxB;AACA,gBAAgB,wBAAM,uDAAuD,gCAAM;AACnF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8CAAQ;AAC5C;AACA;AACA;AACA;AACA,mCAAmC;AACnC,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,0BAA0B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM,oBAAY;AAClB;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAAoB,SAAS,oBAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAAoB,SAAS,oBAAY;AAC/C;AACA,oBAAoB,mBAAmB;AACvC,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,oBAAY;AACzB;AACA,QAAQ,wBAAM;AACd;AACA;AACA,QAAQ,oDAAc,oBAAoB,+CAAS;AACnD;AACA,YAAY,oDAAc;AAC1B,YAAY,oDAAc;AAC1B;AACA,iBAAiB,cAAM;AACvB,YAAY,oDAAc;AAC1B,YAAY,oDAAc;AAC1B;AACA,iBAAiB,gBAAQ;AACzB,YAAY,oDAAc;AAC1B,YAAY,oDAAc;AAC1B;AACA;AACA,YAAY,wBAAM;AAClB;AACA,QAAQ,oDAAc,uBAAuB;AAC7C,QAAQ,oDAAc,wBAAwB;AAC9C,QAAQ,oDAAc,sBAAsB;AAC5C,QAAQ,oDAAc,gCAAgC;AACtD,QAAQ,oDAAc,oBAAoB;AAC1C;AACA;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB,oDAAc;AAClC;AACA;AACA,oBAAoB,wBAAM,iCAAiC,KAAK,IAAI,mBAAmB;AACvF;AACA,aAAa;AACb;AACA,QAAQ,oDAAc,2BAA2B;AACjD,QAAQ,oDAAc,0BAA0B;AAChD;AACA,YAAY,wBAAM;AAClB;AACA,QAAQ,oDAAc;AACtB;AACA,YAAY,oDAAc,0BAA0B,mBAAW;AAC/D;AACA;AACA;AACA,gBAAgB,oDAAc,0CAA0C,6CAAU;AAClF;AACA;AACA;AACA,gBAAgB,wBAAM,wEAAwE,gCAAM;AACpG;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,gBAAgB,wBAAM,iCAAiC,qBAAqB;AAC5E;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAc;AAClC;AACA;AACA,uBAAuB;AACvB;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA,SAAS;AACT;AACA;AACA,eAAe,qDAAkB;AACjC;AACA;AACA,YAAY,mBAAS;AACrB;AACA;AACA,mBAAmB,mBAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAM,qCAAqC,gCAAM;AACzE;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAM,uDAAuD,gCAAM,gCAAgC,yCAAyC;AACxJ;AACA,mBAAmB,iDAAW,gBAAgB;AAC9C;AACA;AACA;AACA;AACA,YAAY,wBAAM,sCAAsC,gCAAM,gCAAgC,iBAAiB;AAC/G,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mCAAmC,kBAAU;AAC7C;AACA;AACA;AACA,YAAY,oDAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAO;AACtB;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oBAAY;AACnE;AACA;AACA;AACA,uDAAuD,4BAAoB;AAC3E;AACA;AACA;AACA,mDAAmD,4BAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,uDAAuD,4BAAoB;AAC3E;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAY;AAC/D;AACA,+CAA+C,4BAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E,sCAAsC,0DAA0D;AAChG,6CAA6C,iEAAiE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAM,qEAAqE,gCAAM,gCAAgC,oBAAoB;AACjJ;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iDAAW;AAClC,0DAA0D,sCAAW;AACrE;AACA,gBAAgB,wBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,uBAAuB,oBAAY;AAC1C;AACO,MAAM,uBAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB,kCAAO;AACxB,0BAA0B,kCAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAW;AACxB,YAAY,wBAAM;AAClB;AACA;AACA,uBAAuB,cAAM;AAC7B,YAAY,wBAAM;AAClB;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc,oBAAoB,+CAAS;AACnD,QAAQ,oDAAc;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB,iDAAW;AAC5B;AACA,qBAAqB,8BAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAM,sCAAsC,gCAAM,gCAAgC,iBAAiB;AAC/G,SAAS;AACT;AACA,QAAQ,wBAAM;AACd;AACA,kBAAkB,kCAAO,CAAC,iCAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAS;AACrC,6BAA6B,+CAAS;AACtC,YAAY,oDAAc;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAM,uCAAuC,gCAAM,2BAA2B,6BAA6B;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAkB;AACjC;AACA;AACA;AACA;AACA;AACA,iC;;;;;ACz9Ba;AACwD;AACtB;AACV;AACrC,MAAM,kBAAM,OAAO,gCAAM,CAAC,2BAAO;AACuB;AACxD,MAAM,4BAAiB;AACvB,aAAa,8BAAS;AACtB,oBAAoB,8BAAS;AAC7B;AACA,oBAAoB;AACpB;AACA;AACA;AACA,WAAW,kBAAM,qBAAqB,gCAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAAS;AAChC;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,WAAW,kBAAM;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,YAAY,8BAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAM;AACd;AACA;AACA,eAAe,8BAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAM;AACd;AACA;AACA;AACA;AACA,QAAQ,kBAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAAS;AAChC,0BAA0B,8BAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,uBAAW;AACxB;AACA,iCAAiC,4BAAiB;AAClD,YAAY,kBAAM,gDAAgD,wBAAwB,gCAAM;AAChG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uBAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAM;AAClB;AACA;AACA,YAAY,kBAAM;AAClB;AACA,mBAAmB,uBAAW,CAAC,4BAAiB;AAChD;AACA;AACO,MAAM,uBAAW;AACxB;AACA,QAAQ,kBAAM,sBAAsB,uBAAW;AAC/C,iCAAiC,4BAAiB;AAClD,YAAY,kBAAM,gDAAgD,wBAAwB,gCAAM;AAChG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAM,yCAAyC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAW;AAC1B;AACA;AACA;AACA,qBAAqB,uBAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAM;AAClB;AACA;AACA;AACA;AACA,uBAAuB,uBAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAM;AAClB;AACA,oBAAoB,8BAAS;AAC7B,eAAe,qCAAU;AACzB;AACA,qBAAqB,oCAAoC;AACzD;AACA,eAAe,uBAAW;AAC1B;AACA;AACA;AACA,mDAAmD,2CAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAW,0CAA0C,uBAAW;AAC/E;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qCAAU;AAC5B;AACA;AACA,mBAAmB,uBAAW,CAAC,4BAAiB;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAW;AACvC,YAAY,mCAAQ;AACpB;AACA;AACA,sBAAsB,8BAAS;AAC/B;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAW,CAAC,4BAAiB;AAChD;AACA;AACA;AACA,mBAAmB,uBAAW;AAC9B;AACA,YAAY,kCAAO;AACnB,mBAAmB,uBAAW;AAC9B;AACA;AACA,mBAAmB,uBAAW;AAC9B;AACA;AACA;AACA,+BAA+B,gCAAM;AACrC;AACA;AACA;AACA,eAAe,kBAAM;AACrB;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAW;AACvB,aAAa,uBAAW;AACxB,uC;;AClV8C;AACO;AACA;AAC9C;AACA;AACP;AACA,kBAAkB,mCAAW;AAC7B;AACA,WAAW,8CAAS,CAAC,iCAAM;AAC3B,QAAQ,mCAAW;AACnB,QAAQ,mCAAW;AACnB;AACA;AACA;AACA,mC;;ACdO,MAAM,4BAAO;AACpB,oC;;ACDA,IAAI,kBAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACoD;AACC;AACwC;AACxC;AAC6B;AACnC;AACV;AACrC,MAAM,iBAAM,OAAO,gCAAM,CAAC,4BAAO;AACP;AAC1B;AACA;AACA,MAAM,sBAAW,GAAG,8BAAS;AAC7B,MAAM,eAAI,GAAG,8BAAS;AACtB,YAAY,8BAAS;AACrB,mBAAmB,8BAAS;AAC5B;AACA,kBAAkB,mCAAQ;AAC1B;AACA;AACA,eAAe,oCAAS;AACxB;AACA,WAAW,kCAAO;AAClB;AACA,gBAAgB,qCAAU;AAC1B,iBAAiB,qCAAU,CAAC,eAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAM,gDAAgD,oBAAoB,aAAa,IAAI;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAAS;AAC5B;AACA,uBAAuB;AACvB,eAAe,iBAAM;AACrB,KAAK;AACL;AACA;AACA,mBAAmB,6CAAU;AAC7B;AACA,uBAAuB;AACvB,eAAe,iBAAM;AACrB,KAAK;AACL;AACA;AACA,0BAA0B,mCAAQ;AAClC;AACA;AACA;AACA,mBAAmB,kCAAO;AAC1B;AACA,uBAAuB;AACvB,eAAe,iBAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAM;AACtB;AACA;AACA,kEAAkE,sBAAW,IAAI,eAAI;AACrF;AACA,0BAA0B,8BAAS;AACnC;AACA,oBAAoB,iBAAM,+CAA+C,KAAK;AAC9E;AACA,uBAAuB,qCAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAM;AACtB;AACA;AACA,8BAA8B,mCAAQ;AACtC;AACA,oBAAoB,iBAAM,0CAA0C,KAAK;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAU,CAAC,6CAAU;AACxC;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAS;AAC5B;AACA;AACA,mBAAmB,gCAAE;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK,GAAG,aAAa,aAAa,oCAAoC;AACpF;AACO,MAAM,2BAAgB;AAC7B;AACA,QAAQ,oDAAc,8BAA8B,8CAAQ;AAC5D,QAAQ,oDAAc,0BAA0B;AAChD,QAAQ,oDAAc,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAM,+CAA+C,2BAA2B,MAAM,qBAAqB;AAC/H;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAM,kDAAkD,yBAAyB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAM,oCAAoC,yBAAyB;AACvF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,iBAAM;AAClB;AACA;AACA,YAAY,iBAAM,gEAAgE,wDAAwD;AAC1I;AACA,QAAQ,oDAAc;AACtB;AACA;AACA;AACA,gBAAgB,iBAAM,kDAAkD,qBAAqB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAM,2CAA2C,mBAAmB,cAAc;AACtG;AACA;AACA;AACA,wCAAwC,sCAAS;AACjD;AACA,uBAAuB,8CAAS,CAAC,oCAAS;AAC1C;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAE;AAClC;AACA,4CAA4C,aAAa;AACzD;AACA;AACA,+BAA+B,8CAAS;AACxC;AACA;AACA,iBAAiB;AACjB;AACA,uBAAuB,oCAAS;AAChC;AACA;AACA,eAAe,iBAAM,qCAAqC,KAAK;AAC/D;AACA;AACA;AACA;AACA,YAAY,iBAAM,qCAAqC,qBAAqB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8CAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAM,2CAA2C,mBAAmB,cAAc;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA,aAAa,IAAI;AACjB;AACA,eAAe,iBAAM,qCAAqC,KAAK;AAC/D;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAAgB;AACnC;AACA;AACA,eAAe,2BAAgB;AAC/B;AACA;AACA,eAAe,2BAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAM,sDAAsD,qBAAqB;AACjG;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA,SAAS;AACT,eAAe,2BAAgB,6BAA6B,6BAA6B;AACzF;AACA;AACA,eAAe,oCAAS;AACxB;AACA,YAAY,2BAAgB;AAC5B,YAAY,2BAAgB;AAC5B;AACA;AACA;AACA,eAAe,8CAAS,CAAC,2BAAgB;AACzC;AACA;AACA;AACA,eAAe,kBAAS;AACxB;AACA,qBAAqB,iDAAW;AAChC;AACA;AACA;AACA,6CAA6C,sCAAW;AACxD;AACA;AACA;AACA,4BAA4B,2BAAgB;AAC5C;AACA;AACA,2CAA2C,sCAAW;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA,QAAQ,2BAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE,SAAS;AACT,wBAAwB,2BAAgB;AACxC,gCAAgC,iDAAW;AAC3C;AACA,YAAY,iBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAO,CAAC,mCAAQ;AAC3C;AACA;AACA;AACA,2BAA2B,8BAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAM;AAClC;AACA;AACA;AACA,uBAAuB,iBAAM;AAC7B,aAAa;AACb;AACA;AACA;AACA,sC;;ACxbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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C3C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAM;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,cAAM;AACrB;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA,YAAY,qBAAM;AAClB;AACA;AACA,kCAAkC,kCAAO;AACzC,+BAA+B,kCAAO;AACtC,0BAA0B,kCAAO;AACjC;AACA,gBAAgB,kCAAO;AACvB;AACA;AACA;AACA,2BAA2B,cAAM,CAAC,wBAAiB,QAAQ,kCAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAM,CAAC,wBAAiB,EAAE,kCAAO;AAC5D;AACA,eAAe,qBAAM;AACrB;AACA;AACO;AACP;AACA;AACA;AACA,iBAAiB,mCAAW,wBAAwB,wCAAwB;AAC5E,WAAW,MAAM,CAAC,mCAAW,WAAW,wCAAwB;AAChE;AACO;AACP;AACA,IAAI,qBAAM;AACV;AACA;AACA;AACA;AACA,oBAAoB,mCAAQ;AAC5B;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mCAAQ,CAAC,MAAM;AACpC;AACA;AACA;AACA,WAAW,kCAAO;AAClB;AACO;AACP;AACA,cAAc,mCAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mCAAQ,CAAC,MAAM;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,iC;;;;;;;;;;;;;ACpUa;AAC4C;AACsB;AACxE;AACP;AACA;AACA;AACA,WAAW,mCAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,mCAAW,WAAW,wCAAwB;AAC7D;AACA,WAAW,mCAAQ;AACnB;AACO;AACP;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,mCAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kCAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;AC9DO,MAAM,oCAAO;AACpB,oC;;ACDa;AACb,IAAI,gBAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACyB;AACM;AACqB;AACa;AACiC;AAC7C;AACK;AACN;AACI;AACK;AACkB;AAChC;AACV;AACrC,MAAM,eAAM,OAAO,gCAAM,CAAC,oCAAO;AACjC;AACA;AACA;AACA;AACO,MAAM,wBAAe,SAAS,yCAAW;AAChD;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA,mBAAmB,aAAa,CAAC,UAAU;AAC3C,4BAA4B,gBAAG;AAC/B,2BAA2B,gBAAG;AAC9B,eAAe,mCAAQ;AACvB;AACA;AACA;AACA;AACA,uBAAuB,aAAa,CAAC,UAAU;AAC/C,wBAAwB,kCAAO,CAAC,8CAAS,CAAC,iCAAM;AAChD,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA,QAAQ,eAAM,kCAAkC,gCAAM;AACtD;AACA,SAAS;AACT;AACA;AACA,oBAAoB,8CAAc;AAClC;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAO;AAC3B;AACA;AACA,QAAQ,UAAU;AAClB,mCAAmC,aAAa,CAAC,UAAU;AAC3D,2BAA2B,aAAa,CAAC,UAAU;AACnD,oCAAoC,gBAAG;AACvC,mCAAmC,gBAAG;AACtC,qBAAqB,UAAU,2BAA2B,WAAW;AACrE,uBAAuB,UAAU;AACjC,wBAAwB,mCAAQ;AAChC;AACA,6BAA6B,iBAAiB;AAC9C,yBAAyB,cAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gCAAM;AACrC;AACA;AACA;AACA;AACA,eAAe,wBAAe;AAC9B;AACA;AACA,WAAW,mCAAQ,CAAC,MAAO;AAC3B;AACA,SAAS,eAAM;AACf;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,gBAAgB,UAAU;AAC1B;AACA;AACA,mBAAmB,eAAM;AACzB;AACA;AACA,yBAAyB,aAAa,CAAC,UAAU;AACjD,+BAA+B,UAAU;AACzC,+BAA+B,UAAU;AACzC,+BAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa,CAAC,UAAU;AACjD;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAM;AACjB;AACO;AACP;AACA,2DAA2D,gBAAM;AACjE;AACA;AACO;AACP,WAAW,gBAAS;AACpB;AACA,yDAAyD,eAAM,EAAE,gBAAM;AACvE;AACA,KAAK;AACL;AACO;AACP;AACA;AACA,YAAY,6CAAU,sBAAsB,8CAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAM,kFAAkF,WAAW;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAQ;AAC/B,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,kBAAkB,mCAAQ,CAAC,iBAAiB;AAC5C,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAQ;AACvB;AACA;AACA,eAAe,qCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA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C;AACA;AACA;AACA;AACA,sBAAsB,mCAAQ,CAAC,uCAAY,CAAC,8CAAS,CAAC,iCAAM;AAC5D;AACA,yBAAyB,iBAAiB;AAC1C,eAAe,cAAM;AACrB;AACA;AACA,eAAe,iBAAiB;AAChC,uBAAuB,cAAM;AAC7B,SAAS;AACT;AACA;AACA,mBAAmB,cAAM,CAAC,qBAAqB;AAC/C;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA,mBAAmB,cAAM,CAAC,cAAM;AAChC;AACA;AACO;AACP,WAAW,8CAAc,CAAC,WAAW;AACrC;AACO;AACP,WAAW,8CAAc,CAAC,2BAAiB;AAC3C;AACA,iC;;;;;AChLO,MAAM,gCAAO;AACpB,oC;;ACDa;AACkC;AACV;AACrC,MAAM,uBAAM,OAAO,gCAAM,CAAC,gCAAO;AACjkBAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,YAAY,uBAAM;AAClB;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,QAAQ,uBAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;ACpOa;AACsE;AACnF;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,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jG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC+D;AACH;AACJ;AACW;AACpB;AACV;AACrC,MAAM,kBAAM,OAAO,gCAAM,CAAC,2BAAO;AACC;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sCAAW;AACnB,mEAAmE;AACnE;AACA,uBAAuB,oCAAY;AACnC;AACA,2BAA2B;AAC3B;AACA;AACA,eAAe,kCAAO;AACtB;AACA;AACA;AACA,wCAAwC;AACxC;AACA,qDAAqD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA,IAAI,kBAAM;AACV;AACA;AACA,IAAI,kBAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAM,gEAAgE,gCAAM,2BAA2B,2EAA2E;AAClM;AACA;AACA;AACA;AACA,kCAAkC,MAAY,CAAC,mCAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAM,sBAAsB,gCAAM;AAC7D;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA,eAAe,mBAAS;AACxB,iCAAiC,wBAAwB;AACzD;AACA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAM,gCAAgC,gCAAM;AACpE;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAM,4BAA4B,gCAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAM,yCAAyC,gCAAM;AAC7E;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAM,+BAA+B,gCAAM;AAC9D;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oCAAoC,oCAAY;AAChD;AACA;AACA,gBAAgB,kBAAM,4BAA4B,gCAAM;AACxD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAW;AAC1B;AACA,+DAA+D,kBAAkB,IAAI,iDAAW;AAChG;AACA;AACA;AACA,kCAAkC,iDAAW;AAC7C;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc,iDAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,iC;;;;;;ACnWO,MAAM,iCAAO;AACpB,oC;;;;;ACDa;AAC2D;AACnB;AACiD;AAC/C;AACC;AAC+B;AACxC;AACV;AACrC,MAAM,gBAAM,OAAO,gCAAM,CAAC,iCAAO;AAC1B,MAAM,mBAAS;AACtB;AACA,QAAQ,gBAAM,sBAAsB,mBAAS;AAC7C;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA,kBAAkB,mBAAS;AAC3B,wBAAwB,mBAAS;AACjC,uBAAuB,mBAAS;AAChC,yBAAyB,mBAAS;AAClC,8BAA8B,mBAAS;AACvC,2BAA2B,mBAAS;AACpC;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB;AACA;AACA;AACA,eAAe,mBAAS;AACxB,eAAe,mBAAS;AACxB,eAAe,mBAAS;AACxB,qBAAqB,mBAAS;AAC9B,iBAAiB,mBAAS;AAC1B;AACA;AACA,kBAAkB,mBAAS;AAC3B,mBAAmB,mBAAS;AAC5B,sBAAsB,mBAAS;AAC/B,sBAAsB,mBAAS;AAC/B,gBAAgB,mBAAS;AACzB,mBAAmB,mBAAS;AAC5B,kBAAkB,mBAAS;AAC3B,kBAAkB,mBAAS;AAC3B,wBAAwB,mBAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB,kBAAkB,mBAAS;AAC3B,6BAA6B,mBAAS;AACtC;AACA;AACA,kBAAkB,mBAAS;AAC3B;AACA,uBAAuB,mBAAS;AAChC;AACA;AACA,kBAAkB,mBAAS;AAC3B;AACA,2BAA2B,mBAAS;AACpC;AACA,oBAAoB,mBAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAS,WAAW,mBAAS;AACvD;AACA,wCAAwC,iDAAW;AACnD,qDAAqD,mBAAS,WAAW,mBAAS;AAClF;AACA,uBAAuB,mBAAS;AAChC,qBAAqB,mBAAS;AAC9B,uBAAuB,mBAAS;AAChC,qBAAqB,mBAAS;AAC9B,oBAAoB,mBAAS;AAC7B;AACA;AACA,yBAAyB,mBAAS;AAClC,uBAAuB,mBAAS;AAChC;AACA,qBAAqB,mBAAS;AAC9B;AACA,kBAAkB,mBAAS;AAC3B,oBAAoB,mBAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAa;AAC5B;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAS;AACxB;AACA;AACA;AACA,eAAe,8BAAS;AACxB;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAW;AAC3B;AACA;AACA;AACA,eAAe,gBAAM;AACrB;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAU;AACzB;AACA;AACA,aAAa,sCAAW;AACxB;AACA;AACA,wBAAwB,6CAAU,CAAC,uCAAY;AAC/C,4BAA4B,gCAAW;AACvC;AACA;AACA,eAAe,qDAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sCAAW;AACzD,mBAAmB,mCAAQ;AAC3B;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,YAAY,wCAAa;AACzB,mBAAmB,gBAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAAS;AAC3B;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,aAAa,sCAAW;AACxB;AACA;AACA,eAAe,qCAAU;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,8BAA8B,8BAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAS;AAChC;AACA;AACA,gBAAgB,sCAAW;AAC3B,0BAA0B,8BAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAW;AAC3B,0BAA0B,8BAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAgB;AAC/B;AACA;AACA,eAAe,mBAAS;AACxB;AACA;AACA,uBAAuB,mBAAS;AAChC;AACA;AACA;AACA;AACA,8BAA8B,8BAAS;AACvC;AACA;AACA;AACA,wBAAwB,gBAAM,iEAAiE,2CAA2C;AAC1I;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAM;AAC1B;AACA;AACA;AACA;AACA,gBAAgB,gBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAS;AACxB;AACA;AACA,eAAe,mBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;ACtaa;AACb,IAAI,qBAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACuE;AACzB;AACO;AACuF;AACxF;AACL;AACM;AACoC;AAC5C;AACsB;AACzB;AACd;AACmB;AACV;AACrC,MAAM,oBAAM,OAAO,gCAAM,CAAC,iCAAO;AACO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wCAAa;AACrB,QAAQ,oBAAM;AACd;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,SAAS,yBAAW;AACpB;AACA;AACA,YAAY,wCAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAS;AACtB,QAAQ,oBAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAK;AAClB;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uDAAuD;AACjE,UAAU,wDAAwD;AAClE,UAAU,0CAA0C;AACpD,WAAW,4BAA4B;AACvC,WAAW,4BAA4B;AACvC,YAAY,6BAA6B;AACzC;AACA;AACA,WAAW,qCAAU,CAAC,8BAAS;AAC/B;AACA;AACA;AACA,WAAW,MAAM,QAAQ,iCAAM,QAAQ,uCAAY,CAAC,MAAM,CAAC,MAAM;AACjE;AACO,MAAM,sBAAQ;AACrB;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA,sBAAsB,oCAAS,YAAY,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAAS,MAAM,uCAAY;AACtD,2BAA2B,8BAAS,MAAM,uCAAY;AACtD,mBAAmB,uCAAY;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,oBAAM,sCAAsC,SAAS,GAAG,gCAAM;AAC1E,yCAAyC,SAAS;AAClD,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB,mCAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iCAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iCAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAM;AACpC;AACA,uBAAuB,gBAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA,sDAAsD,0BAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAM,gDAAgD,gCAAM;AAC5E,6CAA6C,SAAS;AACtD;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAM,wDAAwD,gCAAM;AACvF;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,2BAA2B,mCAAW;AACtC;AACA;AACA,uBAAuB,iCAAM;AAC7B;AACA;AACA,2BAA2B,iCAAM,YAAY,qCAAU;AACvD;AACA,kEAAkE,kCAAO;AACzE;AACA;AACA;AACA,mBAAmB,oCAAY;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACO,MAAM,0BAAY,SAAS,gBAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oBAAM,sBAAsB,gBAAQ;AAC5C;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,sCAAsC,EAAE;AACxC;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,iCAAiC,+CAAS;AAC1C;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA;AACA,gBAAgB,oBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,oBAAoB,oBAAM,mCAAmC,gCAAM,yBAAyB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAc;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC;AAChC;AACA,eAAe,IAAI;AACnB;AACA;AACA,aAAa;AACb;AACA,mCAAmC,gCAAM;AACzC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,mCAAmC,mBAAS;AAC5C;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAU;AACzB;AACA;AACA;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uDAAiB;AAC9D,8DAA8D;AAC9D;AACA,aAAa,SAAS,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAAS;AACvC;AACA;AACA;AACA;AACA,sDAAsD;AACtD,wBAAwB;AACxB,aAAa;AACb;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAM,mCAAmC;AACzD,mCAAmC,oBAAM,0CAA0C,gCAAM;AACzF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qDAAqD,kBAAkB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oBAAoB,2BAA2B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB,oBAAoB,2BAA2B,EAAE;AAC1E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa,oBAAoB,2BAA2B,EAAE;AAC9D;AACA,SAAS;AACT;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAS;AACxB,mBAAmB,oBAAM,2DAA2D,gCAAM;AAC1F;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAM,yCAAyC,gCAAM;AACnF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS,cAAc,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAM,+BAA+B,gCAAM,kBAAkB,mBAAmB;AAC/G,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,+DAA+D;AAC/D;AACA,uBAAuB,8BAAS;AAChC;AACA;AACA,uBAAuB,oBAAM,uCAAuC,gCAAM;AAC1E;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,iCAAiC,uDAAiB;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,8BAAS;AAChC;AACA;AACA,uBAAuB,oBAAM,uCAAuC,gCAAM;AAC1E;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,iCAAiC,uDAAiB;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,8BAAS;AAChC;AACA;AACA,uBAAuB,oBAAM,uCAAuC,gCAAM;AAC1E;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,iCAAiC,uDAAiB;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,kCAAO;AAC9B;AACA;AACA,uBAAuB,oBAAM,uCAAuC,gCAAM;AAC1E;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,iCAAiC,uDAAiB;AAClD;AACA;AACA,gEAAgE,mCAAQ;AACxE,aAAa;AACb;AACA;AACA,uBAAuB,kCAAO;AAC9B;AACA;AACA,uBAAuB,oBAAM,uCAAuC,gCAAM;AAC1E;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,wCAAa;AACzC;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAM,wEAAwE,gCAAM,wBAAwB,4CAA4C;AACpK;AACA;AACA,yCAAyC,qBAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAM,kCAAkC,gCAAM;AAC9D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,qBAAS;AACxB;AACA,6EAA6E,kCAAO;AACpF;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,wEAAwE,8BAAS;AACjF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,kCAAO;AAC/E,aAAa;AACb,2DAA2D,uDAAiB;AAC5E,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,+CAA+C,uDAAiB;AAChE,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,iCAAiC,uDAAiB;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,kCAAO;AAC9B;AACA;AACA,uBAAuB,oBAAM,uCAAuC,gCAAM;AAC1E;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,iCAAiC,uDAAiB;AAClD;AACA,aAAa;AACb;AACA;AACA,uBAAuB,8BAAS;AAChC;AACA;AACA,uBAAuB,oBAAM,uCAAuC,gCAAM;AAC1E;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA,gBAAgB,oBAAM,uCAAuC,gCAAM;AACnE,8CAA8C,8BAA8B;AAC5E,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,wBAAwB,sCAAW;AACnC;AACA;AACA;AACA;AACA,oBAAoB,oBAAM;AAC1B;AACA;AACA,mBAAmB,IAAI,OAAO,qBAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,iBAAiB;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA,4BAA4B;AAC5B,mBAAmB,IAAI,OAAO,qBAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,iBAAiB;AAClC,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA,4BAA4B;AAC5B,mBAAmB,IAAI,OAAO,qBAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,iBAAiB;AAClC,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,iCAAiC,uDAAiB,EAAE,kCAAkC;AACtF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mBAAmB,mBAAS;AAC5B,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA,mDAAmD;AACnD,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA,oBAAoB,oBAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA,uBAAuB,sBAAQ;AAC/B,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA,gBAAgB,oBAAM,4CAA4C,gCAAM,gCAAgC,0CAA0C;AAClJ;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sCAAW;AAC/B;AACA;AACA;AACA;AACA,gBAAgB,oBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,qBAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAQ;AAChC;AACA,sCAAsC,QAAQ;AAC9C,aAAa;AACb;AACA,sCAAsC,8BAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAAS;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB,oCAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,oBAAM,yCAAyC,gCAAM,0BAA0B,oBAAoB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAK,CAAC,yBAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,wBAAwB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAW;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,wBAAwB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,oCAAoC,wBAAwB,EAAE;AAC9D;AACA;AACA;AACA,yC;;ACz4Ca;AACb,IAAI,yBAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACwD;AACH;AACiB;AACd;AACyE;AAC5E;AACO;AACP;AACN;AACV;AACrC,MAAM,wBAAM,OAAO,gCAAM,CAAC,iCAAO;AACc;AAC/C;AACA;AACA;AACA,uBAAuB;AACvB,4CAA4C,gCAAM;AAClD;AACA,gDAAgD,sCAAW;AAC3D;AACA;AACA;AACA;AACA,uBAAuB,gCAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wBAAM,iEAAiE,gCAAM;AACrF;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,wBAAM,2CAA2C,gCAAM;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,wBAAM,uCAAuC,gCAAM;AAC3D;AACA,SAAS;AACT;AACA;AACA,QAAQ,wBAAM,iCAAiC,wDAAwD,gCAAM;AAC7G;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,uBAAK;AACd;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kCAAiB;AAChB,MAAM,+BAAa,SAAS,cAAM;AACzC;AACA,QAAQ,wBAAM,sBAAsB,+BAAa;AACjD;AACA,iCAAiC,kCAAiB;AAClD,gFAAgF;AAChF;AACA,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA,YAAY,oDAAc;AAC1B,YAAY,oDAAc;AAC1B;AACA;AACA,YAAY,oDAAc;AAC1B,YAAY,oDAAc;AAC1B;AACA;AACA,YAAY,wBAAM;AAClB;AACA;AACA;AACA,eAAe,wBAAM,uDAAuD,gCAAM;AAClF;AACA,SAAS;AACT;AACA;AACA,0CAA0C,kCAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAM,+CAA+C,gCAAM;AAC3E;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,sBAAsB,iDAAW;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+DAA+D;AAC/D;AACA;AACA;AACA,6BAA6B,iDAAW;AACxC;AACA;AACA;AACA,eAAe,uDAAiB;AAChC,gBAAgB,uDAAiB;AACjC;AACA,SAAS,SAAS,aAAa;AAC/B;AACA;AACA,oBAAoB,wBAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,wBAAM,mDAAmD,gCAAM;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,GAAG,2BAA2B;AAC3C;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,yBAAS;AACxB,4DAA4D,mCAAW;AACvE;AACA;AACA,gFAAgF,kCAAO;AACvF,SAAS;AACT;AACA;AACA,eAAe,yBAAS;AACxB;AACA,oCAAoC,2BAAiB;AACrD;AACA,aAAa;AACb;AACA;AACA;AACA,+BAA+B,2BAAiB;AAChD;AACA,SAAS;AACT;AACA;AACA,eAAe,yBAAS;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC,+BAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8DAA8D;AACxG;AACA,SAAS;AACT;AACA;AACA,MAAM,wCAAsB;AAC5B;AACA;AACA;AACO,MAAM,iCAAe,SAAS,0BAAY;AACjD;AACA,QAAQ,wBAAM,sBAAsB,iCAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB,+CAAS;AAC3B;AACA;AACA,YAAY,oDAAc;AAC1B;AACA,aAAa;AACb;AACA;AACA,YAAY,oDAAc,mCAAmC,iDAAW;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAS;AACxB,kBAAkB,uBAAK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,mCAAmC,+CAAS;AAC5C;AACA,sCAAsC,8BAAS;AAC/C;AACA;AACA,2BAA2B,wBAAM,wCAAwC,gCAAM;AAC/E;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,mBAAmB,wBAAM,wCAAwC,gCAAM;AACvE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB,+BAAa,CAAC,kCAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAQ;AAC7B;AACA,SAAS;AACT,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+CAAS;AACpD,6EAA6E,aAAa;AAC1F;AACA;AACA,2CAA2C,+CAAS;AACpD,oFAAoF,aAAa;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAS;AACxB;AACA;AACA,gBAAgB,wBAAM,yCAAyC,gCAAM,0BAA0B,oBAAoB;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA,+BAA+B,uBAAK;AACpC,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,4CAA4C,QAAQ,EAAE;AACtD;AACA,iBAAiB,oBAAoB,EAAE;AACvC;AACA;AACA;AACA,SAAS,oBAAoB,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAW,CAAC,wCAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qDAAe;AACvB;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,0BAA0B,mCAAQ;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0BAA0B,kCAAO;AACjC,SAAS;AACT;AACA,mCAAmC,6CAAa;AAChD;AACA;AACA;AACA;AACA,6C;;ACxfa;AACkC;AACV;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAM,CAAC,iCAAO;AACrC;AACA,0EAA0E,gCAAM;AAChF;AACA,SAAS;AACT;AACA;AACA;AACA;AAC2B;AAC3B,8B;;ACrBa;AACb,IAAI,0BAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACqD;AACM;AACL;AACrB;AACc;AACV;AACrC,MAAM,yBAAM,OAAO,gCAAM,CAAC,iCAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,oCAAiB,SAAS,iCAAe;AACtD;AACA,4CAA4C;AAC5C;AACA,YAAY,yBAAM,oEAAoE,gCAAM;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,QAAQ,oDAAc,yBAAyB,EAAS;AACxD,QAAQ,oDAAc,sBAAsB;AAC5C,QAAQ,oDAAc,kBAAkB;AACxC,QAAQ,oDAAc,oBAAoB;AAC1C,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAc;AACtC,wBAAwB,oDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAM,8DAA8D,gCAAM;AAClF;AACA,SAAS;AACT;AACA;AACA,QAAQ,yBAAM,gEAAgE,gCAAM;AACpF;AACA,SAAS;AACT;AACA;AACA,eAAe,0BAAS;AACxB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAM,uDAAuD,gCAAM;AAC3E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,2CAA2C;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,0BAAS;AACxB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iCAAiC;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wCAAwC,8BAAS;AACjD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,0BAAS;AACxB;AACA,+CAA+C,EAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8C;;AC7Ra;AACb,IAAI,6BAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACsE;AACvB;AACV;AACrC,MAAM,4BAAM,OAAO,gCAAM,CAAC,iCAAO;AACqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,2CAAqB,SAAS,iCAAe;AAC1D;AACA;AACA,4BAA4B;AAC5B,SAAS;AACT,eAAe,6BAAS;AACxB;AACA;AACA;AACA;AACA,oBAAoB,4BAAM,mCAAmC,gCAAM,yBAAyB;AAC5F;AACA;AACA;AACA;AACA,oBAAoB,oDAAc;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO,MAAM,wCAAkB,SAAS,2CAAqB;AAC7D;AACA,QAAQ,4BAAM,2BAA2B,wCAAkB;AAC3D;AACA,kBAAkB,+CAAS;AAC3B,iBAAiB,+CAAS;AAC1B,2BAA2B,+CAAS;AACpC;AACA;AACA,YAAY,oDAAc;AAC1B;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B,aAAa;AACb;AACA;AACA;AACA,QAAQ,4BAAM;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,4BAAM,qDAAqD,gCAAM,gCAAgC,yBAAyB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAAM,6BAA6B,oCAAoC,gCAAM;AAC5F;AACA,SAAS;AACT;AACA;AACA,iD;;AC3Fa;AAC8C;AACT;AACO;AACV;AACV;AACrC,MAAM,uBAAM,OAAO,gCAAM,CAAC,iCAAO;AAC4B;AAC7D;AACA;AACA;AACA;AACA;AACO,MAAM,yCAAwB,SAAS,oCAAiB;AAC/D;AACA,6BAA6B,gCAAe;AAC5C;AACA;AACA;AACA,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACO,MAAM,gCAAe,SAAS,wCAAkB;AACvD;AACA,mBAAmB,yCAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;AC1Ea;AACb,IAAI,2BAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC6D;AACd;AACV;AACrC,MAAM,0BAAM,OAAO,gCAAM,CAAC,iCAAO;AAC1B,MAAM,sCAAkB,SAAS,wCAAkB;AAC1D;AACA;AACA,YAAY,0BAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAAM;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,SAAS;AACT,eAAe,2BAAS;AACxB;AACA;AACA;AACA,2EAA2E,qBAAqB;AAChG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+C;;AC/Ca;AACb,IAAI,0BAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACsE;AACD;AACtB;AACG;AACH;AACV;AACrC,MAAM,yBAAM,OAAO,gCAAM,CAAC,iCAAO;AACc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uEAAuE;AACpF,oBAAoB,mCAAQ,CAAC,kCAAO;AACpC;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS,4BAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAa;AACnB,SAAS,6BAAU;AACnB;AACA,uBAAuB;AACvB,4CAA4C,gCAAM;AAClD;AACA,gDAAgD,sCAAW;AAC3D;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAM,iEAAiE,gCAAM;AACrF;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,yBAAM,2CAA2C,gCAAM;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,yBAAM,uCAAuC,gCAAM;AAC3D;AACA,SAAS;AACT;AACA;AACA,QAAQ,yBAAM,iCAAiC,wDAAwD,gCAAM;AAC7G;AACA,SAAS;AACT;AACA;AACA;AACO,MAAM,oCAAiB,SAAS,0BAAY;AACnD;AACA,QAAQ,yBAAM,sBAAsB,oCAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc,2BAA2B,gCAAa;AAC9D;AACA;AACA,eAAe,0BAAS;AACxB;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB;AACtB,SAAS;AACT,eAAe,0BAAS;AACxB;AACA;AACA;AACA;AACA;AACA,oDAAoD,0BAAS;AAC7D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oDAAoD;AAC9F;AACA,kCAAkC,IAAI,GAAG,aAAa;AACtD,qBAAqB;AACrB;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA,8BAA8B,8CAAQ;AACtC;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4BAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,6BAAU;AACzC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAM,2DAA2D,gCAAM;AAC/F;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAAU;AACzC;AACA;AACA;AACA;AACA,wBAAwB,yBAAM,2DAA2D,gCAAM;AAC/F;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAM,uCAAuC,gCAAM,gCAAgC,+BAA+B;AAC9I;AACA;AACA;AACA;AACA,gCAAgC,yBAAM,wCAAwC,gCAAM,gCAAgC,iBAAiB;AACrI;AACA;AACA;AACA;AACA;AACA,sDAAsD,4BAAS;AAC/D;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4BAAS;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,wCAAwC,gCAAa;AACrD,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA,mBAAmB,SAAS,mBAAmB,4BAAS;AACxD;AACA;AACA;AACA,8BAA8B,8CAAQ;AACtC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gCAAgC,gCAAa;AAC7C;AACA;AACA,8C;;AClba;AACN;AACP;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;ACXa;AACb,IAAI,yBAAS,IAAI,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC4D;AACP;AACF;AAC+B;AACjC;AACP;AACK;AACG;AACH;AACV;AACrC,MAAM,wBAAM,OAAO,gCAAM,CAAC,iCAAO;AACjC,SAAS,qBAAG,IAAI,+BAA+B;AAC/C;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8BAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,IAAI,gCAAM;AACV,IAAI,gCAAM;AACV,IAAI,gCAAM;AACV,IAAI,gCAAM;AACV,IAAI,gCAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6BAA6B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAW;AACvC;AACA,6BAA6B,iDAAW;AACxC;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAS;AACpB;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS,GAAG,qBAAqB;AACjC,KAAK;AACL;AACA;AACA,WAAW,yBAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sCAAW;AAClD;AACA;AACA;AACA;AACA,uCAAuC,sCAAW;AAClD;AACA;AACA;AACA;AACA,uCAAuC,sCAAW;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,sCAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sCAAW,0CAA0C,sCAAW;AACzG;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAM,oCAAoC,gCAAM;AAC/D;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO,MAAM,kCAAgB,SAAS,0BAAY;AAClD;AACA,QAAQ,wBAAM,sBAAsB,kCAAgB;AACpD;AACA,YAAY,wBAAM;AAClB;AACA;AACA,gBAAgB,gBAAQ;AACxB,qCAAqC,mBAAmB;AACxD;AACA,sCAAsC,gEAAgE;AACtG;AACA,2BAA2B,iDAAW;AACtC;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAM,oCAAoC,4CAA4C,MAAM;AAC5G;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAM,6CAA6C;AAC/D;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA,eAAe,yBAAS;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,yBAAS;AACxB,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA,4BAA4B,QAAQ,0BAA0B,yCAAW;AACzE;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qBAAG;AACtC,qCAAqC,uBAAK;AAC1C,+CAA+C,uBAAuB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,qBAAG;AACtE,0CAA0C,yBAAyB,8CAAQ,UAAU;AACrF;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,qBAAG;AACtE,0CAA0C,yBAAyB,8CAAQ,UAAU;AACrF;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB,8CAAQ,UAAU;AACjF;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,8BAA8B,uBAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,wBAAM;AAC1B,iBAAiB;AACjB,sDAAsD;AACtD;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mBAAmB,wBAAM,qCAAqC,gCAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,6C;;ACrkBa;AACb;AACuB;AACvB,wC;;ACHa;AAC8C;AACF;AACP;AACH;AACV;AACrC,MAAM,sBAAM,OAAO,gCAAM,CAAC,iCAAO;AAC4B;AAC7D;AACO,MAAM,uCAAuB,SAAS,oCAAiB;AAC9D;AACA,6BAA6B,8BAAc;AAC3C;AACA;AACA,YAAY,sBAAM,4DAA4D,gCAAM;AACpF;AACA,aAAa;AACb;AACA;AACA;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACO,MAAM,8BAAc,SAAS,wCAAkB;AACtD;AACA,mBAAmB,uCAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAM;AAClB,YAAY,sBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAM,mCAAmC,gCAAM;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;ACpGA;AACa;AACgD;AACd;AACV;AACrC,MAAM,yBAAM,OAAO,gCAAM,CAAC,iCAAO;AACjC;AACA,MAAM,gCAAa;AACZ,MAAM,oCAAiB,SAAS,wCAAkB;AACzD;AACA;AACA,YAAY,yBAAM;AAClB;AACA,yBAAyB,gCAAa;AACtC;AACA;AACA,QAAQ,yBAAM,oDAAoD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAM;AACtB;AACA;AACA;AACA;AACA,8C;;ACxCa;AACyC;AACP;AACV;AACrC,MAAM,sBAAM,OAAO,gCAAM,CAAC,iCAAO;AAC4B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,8BAAc,SAAS,wCAAkB;AACtD;AACA;AACA;AACA;AACA,sBAAsB,+CAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAM,mCAAmC,gCAAM;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAM;AAClB,YAAY,sBAAM;AAClB;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAM;AAClB;AACA;AACA;AACA;AACA,YAAY,sBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAM,mCAAmC,gCAAM;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,8BAA8B,KAAK,SAAS,qBAAqB;AACjE;AACA;AACA,8BAA8B,KAAK,MAAM,qBAAqB;AAC9D;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;ACjHa;AAC8C;AACZ;AACV;AACrC,MAAM,oBAAM,OAAO,gCAAM,CAAC,iCAAO;AACqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACO,MAAM,0BAAY,SAAS,iCAAe;AACjD;AACA,QAAQ,oBAAM,sBAAsB,0BAAY;AAChD;AACA,YAAY,oBAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAc;AACtB,QAAQ,oDAAc;AACtB;AACA;AACA;AACA;AACA;AACA,yC;;ACjGa;AAC+C;AACP;AACI;AACsB;AACpB;AACF;AACF;AACV;AAC+B;AACP;AACZ;AACN;AACiC;AACrC;AACU;AACiD;AAC3D;AACV;AACrC,MAAM,wBAAM,OAAO,gCAAM,CAAC,iCAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAe;AAC9C;AACA,+BAA+B,oCAAiB;AAChD;AACA,oBAAoB,wBAAM;AAC1B;AACA;AACA;AACA,cAAc,kBAAU;AACxB;AACA,QAAQ,wBAAM,sDAAsD,gCAAM;AAC1E;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,oDAAgB;AACxB,QAAQ,iDAAe;AACvB,QAAQ,0DAAkB;AAC1B,QAAQ,uDAAiB;AACzB,QAAQ,8CAAc;AACtB,QAAQ,kDAAe;AACvB,QAAQ,uDAAiB;AACzB,QAAQ,8CAAc;AACtB,QAAQ,wCAAY;AACpB,QAAQ,wBAAW;AACnB,KAAK;AACL;AACA;AACA;AAeY;AACZ,iC;;AC/Ea;AAC6B;AAC1C,iC;;ACFa;AACwC;AACqB;AACJ;AACX;AACN;AACrD;AACA;AACA;AACA,MAAM,aAAK;AACX;AACA;AACA;AACA;AACA,uBAAuB,kCAAO;AAC9B;AACA,mBAAmB,mCAAQ;AAC3B;AACA,mBAAmB,mCAAW;AAC9B;AACA,mBAAmB,mCAAQ;AAC3B;AACA;AACA;AACA,uBAAuB,kCAAO;AAC9B;AACA,mBAAmB,mCAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8BAAS;AACzB,eAAe,kCAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAQ;AACpB;AACA;AACA;AACA,mBAAmB,mCAAQ,UAAU,aAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,iCAAM;AACrB;AACA;AACA;AACA;AACO,SAAS,YAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,WAAW,kCAAO,CAAC,iCAAM;AACzB;AACO;AACP,WAAW,8CAAa,CAAC,YAAI;AAC7B;AACO,SAAS,cAAM;AACtB,WAAW,MAAU,CAAC,YAAI;AAC1B;AACA,iC;;;;;ACvFa;AACuC;AACa;AACd;AAC5C;AACP;AACA,kBAAkB,mCAAW;AAC7B;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAO,CAAC,iCAAM,SAAS,0BAAQ;AAC1C;AACO;AACP,iBAAiB,mCAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAY;AACvB;AACA,mC;;AC/BO,MAAM,6BAAO;AACpB,oC;;ACDa;AACsD;AACpB;AACV;AACrC,MAAM,oBAAM,OAAO,gCAAM,CAAC,6BAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,QAAQ,oBAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACO;AACP;AACA,QAAQ,oBAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACO;AACP;AACA;AACO;AACP;AACA;AACA,iC;;ACnFa;AACoM;AAC3F;AACtE;AACQ;AAC6K;AACrI;AACmC;AAChE;AACd;AACN;AAC8B;AAC4C;AAC3D;AACmE;AACvF;AACkD;AACkF;AACpB;AACzD;AAC1B;AACN;AACjE;AACA;AACyD;AAC0B;AACnF;AACA;AAIyE;AACzE,iC;;AChCO,MAAM,8BAAO;AACpB,oC;;ACDa;AACsE;AACjB;AACE;AACrB;AACO;AACA;AACQ;AACC;AAC9B;AACmC;AACpE;AACA;AACA;AACqC;AACrC,MAAM,aAAM,OAAO,gCAAM,CAAC,8BAAO;AACjC;AACA;AAIoB;AACpB,kC;;ACtBa;AACb;AACmC;AACnC;AACA;AACA;AACA,4BAA4B,sBAAM;AAClC;AACA;AACA,eAAe;AACG;AAIkB;AACpC,iC","file":"x","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","export const version = \"random/5.1.0\";\n//# sourceMappingURL=_version.js.map","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1)) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","\"use strict\";\nexport { AddressZero } from \"./addresses\";\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256 } from \"./bignumbers\";\nexport { HashZero } from \"./hashes\";\nexport { EtherSymbol } from \"./strings\";\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","export const version = \"abi/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readble with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, addres bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class ErrorFragment extends Fragment {\n//}\n//export class StructFragment extends Fragment {\n//}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\nconst regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic((new.target), \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(functionFragment) {\n        return hexDataSlice(id(functionFragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(functionFragment) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return getStatic(this.constructor, \"getSighash\")(functionFragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4:\n                if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n                    errorSignature = \"Error(string)\";\n                    reason = this._abiCoder.decode([\"string\"], bytes.slice(4))[0];\n                }\n                break;\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorSignature: errorSignature,\n            errorArgs: [reason],\n            reason: reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TOOD\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe jsut a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"abstract-provider/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-signer/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transation\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transation\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        this._checkProvider(\"sendTransaction\");\n        return this.populateTransaction(transaction).then((tx) => {\n            return this.signTransaction(tx).then((signedTx) => {\n                return this.provider.sendTransaction(signedTx);\n            });\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n            }\n            if (tx.gasPrice == null) {\n                tx.gasPrice = this.getGasPrice();\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"contracts/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(new Error(\"invalid value for array\"));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Conmpute the intrinisic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        // Remvoe the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is minded\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tw.wait so the receipt has extra properties\n            const wait = tx.wait.bind(tx);\n            tx.wait = (confirmations) => {\n                return wait(confirmations).then((receipt) => {\n                    receipt.events = receipt.logs.map((log) => {\n                        let event = deepCopy(log);\n                        let parsed = null;\n                        try {\n                            parsed = contract.interface.parseLog(log);\n                        }\n                        catch (e) { }\n                        // Successfully parsed the event log; include it\n                        if (parsed) {\n                            event.args = parsed.args;\n                            event.decode = (data, topics) => {\n                                return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                            };\n                            event.event = parsed.name;\n                            event.eventSignature = parsed.signature;\n                        }\n                        // Useful operations\n                        event.removeListener = () => { return contract.provider; };\n                        event.getBlock = () => {\n                            return contract.provider.getBlock(receipt.blockHash);\n                        };\n                        event.getTransaction = () => {\n                            return contract.provider.getTransaction(receipt.transactionHash);\n                        };\n                        event.getTransactionReceipt = () => {\n                            return Promise.resolve(receipt);\n                        };\n                        return event;\n                    });\n                    return receipt;\n                });\n            };\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additioanlly dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic((new.target), \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(name)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[name]) {\n                    uniqueNames[name] = [];\n                }\n                uniqueNames[name].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic((new.target), \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populteTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    value = whole + \".\" + fraction;\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    if (multiplier.length - 1 === 0) {\n        return BigNumber.from(value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Prevent underflow\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else if (value != null) {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        let comps = this.toString().split(\".\");\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE);\n        }\n        return result;\n    }\n    ceiling() {\n        let comps = this.toString().split(\".\");\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE);\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        let comps = this.toString().split(\".\");\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals));\n        return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","export const version = \"hash/5.1.0\";\n//# sourceMappingURL=_version.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","export const version = \"sha2/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const version = \"wordlists/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangCz extends Wordlist {\n    constructor() {\n        super(\"cz\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langCz = new LangCz();\nWordlist.register(langCz);\nexport { langCz };\n//# sourceMappingURL=lang-cz.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { logger, Wordlist } from \"./wordlist\";\nconst words = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\nconst lookup = {};\nlet wordlist = null;\nfunction dropDiacritic(word) {\n    logger.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    const output = [];\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // n-tilde\n        }\n        else if (c === 126) {\n            output.push(110);\n            output.push(204);\n            output.push(131);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return toUtf8String(output);\n}\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    wordlist.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n    }\n}\nclass LangEs extends Wordlist {\n    constructor() {\n        super(\"es\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\nconst langEs = new LangEs();\nWordlist.register(langEs);\nexport { langEs };\n//# sourceMappingURL=lang-es.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { logger, Wordlist } from \"./wordlist\";\nconst words = \"\";\nlet wordlist = null;\nconst lookup = {};\nfunction dropDiacritic(word) {\n    logger.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    const output = [];\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // Grave accent\n        }\n        else if (c === 45) {\n            output.push(204);\n            output.push(128);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return toUtf8String(output);\n}\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    wordlist.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n    }\n}\nclass LangFr extends Wordlist {\n    constructor() {\n        super(\"fr\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\nconst langFr = new LangFr();\nWordlist.register(langFr);\nexport { langFr };\n//# sourceMappingURL=lang-fr.js.map","\"use strict\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { logger, Wordlist } from \"./wordlist\";\nconst data = [\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet wordlist = null;\nfunction hex(word) {\n    return hexlify(toUtf8Bytes(word));\n}\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\nfunction loadWords(lang) {\n    if (wordlist !== null) {\n        return;\n    }\n    wordlist = [];\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform = {};\n    // Delete the diacritic marks\n    transform[toUtf8String([227, 130, 154])] = false;\n    transform[toUtf8String([227, 130, 153])] = false;\n    // Some simple transforms that sort out most of the order\n    transform[toUtf8String([227, 130, 133])] = toUtf8String([227, 130, 134]);\n    transform[toUtf8String([227, 129, 163])] = toUtf8String([227, 129, 164]);\n    transform[toUtf8String([227, 130, 131])] = toUtf8String([227, 130, 132]);\n    transform[toUtf8String([227, 130, 135])] = toUtf8String([227, 130, 136]);\n    // Normalize words using the transform\n    function normalize(word) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) {\n                continue;\n            }\n            if (target) {\n                kana = target;\n            }\n            result += kana;\n        }\n        return result;\n    }\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a, b) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word = [];\n            for (let i = 0; i < length; i++) {\n                const k = mapping.indexOf(d[offset + i]);\n                word.push(227);\n                word.push((k & 0x40) ? 130 : 129);\n                word.push((k & 0x3f) + 128);\n            }\n            wordlist.push(toUtf8String(word));\n        }\n    }\n    wordlist.sort(sortJapanese);\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n    // This should ignore \"if\", but that doesn't work here??\n    /* istanbul ignore next */\n    if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n        const tmp = wordlist[442];\n        wordlist[442] = wordlist[443];\n        wordlist[443] = tmp;\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n}\nclass LangJa extends Wordlist {\n    constructor() {\n        super(\"ja\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n    split(mnemonic) {\n        logger.checkNormalize();\n        return mnemonic.split(/(?:\\u3000| )+/g);\n    }\n    join(words) {\n        return words.join(\"\\u3000\");\n    }\n}\nconst langJa = new LangJa();\nWordlist.register(langJa);\nexport { langJa };\n//# sourceMappingURL=lang-ja.js.map","\"use strict\";\nimport { toUtf8String } from \"@ethersproject/strings\";\nimport { Wordlist } from \"./wordlist\";\nconst data = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n];\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\nfunction getHangul(code) {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    }\n    else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n    return toUtf8String([225, (code >> 6) + 132, (code & 0x3f) + 128]);\n}\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = [];\n    data.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist.push(word);\n        }\n    });\n    wordlist.sort();\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n}\nclass LangKo extends Wordlist {\n    constructor() {\n        super(\"ko\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langKo = new LangKo();\nWordlist.register(langKo);\nexport { langKo };\n//# sourceMappingURL=lang-ko.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n    }\n}\nclass LangIt extends Wordlist {\n    constructor() {\n        super(\"it\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langIt = new LangIt();\nWordlist.register(langIt);\nexport { langIt };\n//# sourceMappingURL=lang-it.js.map","\"use strict\";\nimport { toUtf8String } from \"@ethersproject/strings\";\nimport { Wordlist } from \"./wordlist\";\nconst data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n// @TODO: Load lazily\nconst wordlist = {\n    zh_cn: null,\n    zh_tw: null\n};\nconst Checks = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\nfunction loadWords(lang) {\n    if (wordlist[lang.locale] !== null) {\n        return;\n    }\n    wordlist[lang.locale] = [];\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(data[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2]),\n        ];\n        if (lang.locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = codes.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228 : 128);\n            }\n        }\n        wordlist[lang.locale].push(toUtf8String(bytes));\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== Checks[lang.locale]) {\n        wordlist[lang.locale] = null;\n        throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n    }\n}\nclass LangZh extends Wordlist {\n    constructor(country) {\n        super(\"zh_\" + country);\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[this.locale][index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist[this.locale].indexOf(word);\n    }\n    split(mnemonic) {\n        mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n        return mnemonic.split(\"\");\n    }\n}\nconst langZhCn = new LangZh(\"cn\");\nWordlist.register(langZhCn);\nWordlist.register(langZhCn, \"zh\");\nconst langZhTw = new LangZh(\"tw\");\nWordlist.register(langZhTw);\nexport { langZhCn, langZhTw };\n//# sourceMappingURL=lang-zh.js.map","import { langCz as cz } from \"./lang-cz\";\nimport { langEn as en } from \"./lang-en\";\nimport { langEs as es } from \"./lang-es\";\nimport { langFr as fr } from \"./lang-fr\";\nimport { langJa as ja } from \"./lang-ja\";\nimport { langKo as ko } from \"./lang-ko\";\nimport { langIt as it } from \"./lang-it\";\nimport { langZhCn as zh_cn, langZhTw as zh_tw } from \"./lang-zh\";\nexport const wordlists = {\n    cz: cz,\n    en: en,\n    es: es,\n    fr: fr,\n    it: it,\n    ja: ja,\n    ko: ko,\n    zh: zh_cn,\n    zh_cn: zh_cn,\n    zh_tw: zh_tw\n};\n//# sourceMappingURL=wordlists.js.map","export const version = \"hdnode/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current senitment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"json-wallets/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            // These networks are currently faulty on Alchemy as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once AlchemyAPI has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.AlchemyProvider(network, options.alchemy);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Alchemy as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n    unspecified: {\n        chainId: 0,\n        name: \"unspecified\"\n    },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: {\n        chainId: 2,\n        name: \"morden\"\n    },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: {\n        chainId: 62,\n        name: \"classicMorden\",\n    },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address - \" + String(name), \"name\", name);\n    }\n    let result = Zeros;\n    while (name.length) {\n        const partition = name.match(Partition);\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        name = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","export const version = \"web/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            redirect: \"follow\",\n            referrer: \"client\", // no-referrer, *client\n        };\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    // Exponential back-off throttling\n                    if (response.statusCode === 429 && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = yield throttleCallback(attempt, url);\n                        }\n                        if (tryAgain) {\n                            let stall = 0;\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            }\n                            else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n                            //console.log(\"Stalling 429\");\n                            yield staller(stall);\n                            continue;\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it eitehr returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","export const version = \"providers/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: Formatter.allowNull(number, null),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            gasPrice: bigNumber,\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            status: Formatter.allowNull(number)\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        return Formatter.check(format, value);\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if (transaction.type === 1 && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nexport class Resolver {\n    constructor(provider, address, name) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"addr(bytes32,uint256)\")\n            const transaction = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            const result = yield this.provider.call(transaction);\n            if (result === \"0x\") {\n                return null;\n            }\n            const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n            const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n            return hexDataSlice(result, offset + 32, offset + 32 + length);\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                // keccak256(\"addr(bytes32)\")\n                const transaction = {\n                    to: this.address,\n                    data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                };\n                const hexBytes = yield this.provider.call(transaction);\n                // No address\n                if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                    return null;\n                }\n                return this.provider.formatter.callAddress(hexBytes);\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic((new.target), \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is refelcted); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(\"network block skew detected; skipping block events\");\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (confirmations == null) {\n                confirmations = 1;\n            }\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                let timer = null;\n                let done = false;\n                const handler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (timer) {\n                        clearTimeout(timer);\n                    }\n                    if (done) {\n                        return;\n                    }\n                    done = true;\n                    this.removeListener(transactionHash, handler);\n                    resolve(receipt);\n                };\n                this.on(transactionHash, handler);\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    timer = setTimeout(() => {\n                        if (done) {\n                            return;\n                        }\n                        timer = null;\n                        done = true;\n                        this.removeListener(transactionHash, handler);\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        // @TODO: (confirmations? number, timeout? number)\n        result.wait = (confirmations) => __awaiter(this, void 0, void 0, function* () {\n            // We know this transaction *must* exist (whether it gets mined is\n            // another story), so setting an emitted value forces us to\n            // wait even if the node returns null for the receipt\n            if (confirmations !== 0) {\n                this._emitted[\"t:\" + tx.hash] = \"pending\";\n            }\n            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n            if (receipt == null && confirmations === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    return this.formatter.blockWithTransactions(block);\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = yield this._getResolver(name);\n            if (address == null) {\n                return null;\n            }\n            return new Resolver(this, address, name);\n        });\n    }\n    _getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            return this.formatter.callAddress(yield this.call(transaction));\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return poll(() => {\n                return this.provider.getTransaction(hash).then((tx) => {\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash);\n                });\n            }, { onceBlock: this.provider }).catch((error) => {\n                error.transactionHash = hash;\n                throw error;\n            });\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicats\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic((new.target), \"getNetwork\")(network);\n        apiKey = getStatic((new.target), \"getApiKey\")(apiKey);\n        const connection = getStatic((new.target), \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = value;\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        let name = \"invalid\";\n        if (this.network) {\n            name = this.network.name;\n        }\n        let baseUrl = null;\n        switch (name) {\n            case \"homestead\":\n                baseUrl = \"https://api.etherscan.io\";\n                break;\n            case \"ropsten\":\n                baseUrl = \"https://api-ropsten.etherscan.io\";\n                break;\n            case \"rinkeby\":\n                baseUrl = \"https://api-rinkeby.etherscan.io\";\n                break;\n            case \"kovan\":\n                baseUrl = \"https://api-kovan.etherscan.io\";\n                break;\n            case \"goerli\":\n                baseUrl = \"https://api-goerli.etherscan.io\";\n                break;\n            default:\n                throw new Error(\"unsupported network\");\n        }\n        defineReadOnly(this, \"baseUrl\", baseUrl);\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = this.baseUrl + \"/api\";\n            let apiKey = \"\";\n            if (this.apiKey) {\n                apiKey += \"&apikey=\" + this.apiKey;\n            }\n            const get = (url, payload, procFunc) => __awaiter(this, void 0, void 0, function* () {\n                this.emit(\"debug\", {\n                    action: \"request\",\n                    request: url,\n                    provider: this\n                });\n                const connection = {\n                    url: url,\n                    throttleSlotInterval: 1000,\n                    throttleCallback: (attempt, url) => {\n                        if (this.isCommunityResource()) {\n                            showThrottleMessage();\n                        }\n                        return Promise.resolve(true);\n                    }\n                };\n                let payloadStr = null;\n                if (payload) {\n                    connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                    payloadStr = Object.keys(payload).map((key) => {\n                        return `${key}=${payload[key]}`;\n                    }).join(\"&\");\n                }\n                const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    request: url,\n                    response: deepCopy(result),\n                    provider: this\n                });\n                return result;\n            });\n            switch (method) {\n                case \"getBlockNumber\":\n                    url += \"?module=proxy&action=eth_blockNumber\" + apiKey;\n                    return get(url, null);\n                case \"getGasPrice\":\n                    url += \"?module=proxy&action=eth_gasPrice\" + apiKey;\n                    return get(url, null);\n                case \"getBalance\":\n                    // Returns base-10 result\n                    url += \"?module=account&action=balance&address=\" + params.address;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null, getResult);\n                case \"getTransactionCount\":\n                    url += \"?module=proxy&action=eth_getTransactionCount&address=\" + params.address;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null);\n                case \"getCode\":\n                    url += \"?module=proxy&action=eth_getCode&address=\" + params.address;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null);\n                case \"getStorageAt\":\n                    url += \"?module=proxy&action=eth_getStorageAt&address=\" + params.address;\n                    url += \"&position=\" + params.position;\n                    url += \"&tag=\" + params.blockTag + apiKey;\n                    return get(url, null);\n                case \"sendTransaction\":\n                    return get(url, {\n                        module: \"proxy\",\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction,\n                        apikey: this.apiKey\n                    }).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        url += \"?module=proxy&action=eth_getBlockByNumber&tag=\" + params.blockTag;\n                        if (params.includeTransactions) {\n                            url += \"&boolean=true\";\n                        }\n                        else {\n                            url += \"&boolean=false\";\n                        }\n                        url += apiKey;\n                        return get(url, null);\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    url += \"?module=proxy&action=eth_getTransactionByHash&txhash=\" + params.transactionHash;\n                    url += apiKey;\n                    return get(url, null);\n                case \"getTransactionReceipt\":\n                    url += \"?module=proxy&action=eth_getTransactionReceipt&txhash=\" + params.transactionHash;\n                    url += apiKey;\n                    return get(url, null);\n                case \"call\": {\n                    if (params.transaction.type != null) {\n                        logger.throwError(\"Etherscan does not currently support Berlin\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"call\",\n                            transaction: params.transaction\n                        });\n                    }\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    postData.apikey = this.apiKey;\n                    try {\n                        return yield get(url, postData);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    if (params.transaction.type != null) {\n                        logger.throwError(\"Etherscan does not currently support Berlin\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"estimateGas\",\n                            transaction: params.transaction\n                        });\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    postData.apikey = this.apiKey;\n                    try {\n                        return yield get(url, postData);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    url += \"?module=logs&action=getLogs\";\n                    if (params.filter.fromBlock) {\n                        url += \"&fromBlock=\" + checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        url += \"&toBlock=\" + checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        url += \"&address=\" + params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            url += \"&topic0=\" + topic0;\n                        }\n                    }\n                    url += apiKey;\n                    const logs = yield get(url, null, getResult);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    url += \"?module=stats&action=ethprice\";\n                    url += apiKey;\n                    return parseFloat((yield get(url, null, getResult)).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // @TODO: Allow startBlock and endBlock to be Promises\n    getHistory(addressOrName, startBlock, endBlock) {\n        let url = this.baseUrl;\n        let apiKey = \"\";\n        if (this.apiKey) {\n            apiKey += \"&apikey=\" + this.apiKey;\n        }\n        if (startBlock == null) {\n            startBlock = 0;\n        }\n        if (endBlock == null) {\n            endBlock = 99999999;\n        }\n        return this.resolveName(addressOrName).then((address) => {\n            url += \"/api?module=account&action=txlist&address=\" + address;\n            url += \"&startblock=\" + startBlock;\n            url += \"&endblock=\" + endBlock;\n            url += \"&sort=asc\" + apiKey;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.apiKey === defaultApiKey) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            return fetchJson(connection, null, getResult).then((result) => {\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    request: url,\n                    response: deepCopy(result),\n                    provider: this\n                });\n                let output = [];\n                result.forEach((tx) => {\n                    [\"contractAddress\", \"to\"].forEach(function (key) {\n                        if (tx[key] == \"\") {\n                            delete tx[key];\n                        }\n                    });\n                    if (tx.creates == null && tx.contractAddress != null) {\n                        tx.creates = tx.contractAddress;\n                    }\n                    let item = this.formatter.transactionResponse(tx);\n                    if (tx.timeStamp) {\n                        item.timestamp = parseInt(tx.timeStamp);\n                    }\n                    output.push(item);\n                });\n                return output;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based applicatoin IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic((new.target), \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    return function (method, params) {\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            sendFunc(request, function (error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                if (result.error) {\n                    const error = new Error(result.error.message);\n                    error.code = result.error.code;\n                    error.data = result.error.data;\n                    return reject(error);\n                }\n                resolve(result.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        return provider.request({ method, params });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concreate Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","\"use strict\";\nexport { decode, encode } from \"./base64\";\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            throw new Error(\"invalid number type - \" + type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            throw new Error(\"invalid bytes type - \" + type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            throw new Error(\"invalid value for \" + type);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            throw new Error(\"invalid value for \" + type);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    throw new Error(\"invalid type - \" + type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        throw new Error(\"type/value count mismatch\");\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","export const version = \"units/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { AbiCoder, checkResultErrors, defaultAbiCoder, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, TransactionDescription } from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n////////////////////////\n// Enums\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\n////////////////////////\n// Exports\nexport { AbiCoder, defaultAbiCoder, Fragment, EventFragment, FunctionFragment, ParamType, FormatTypes, checkResultErrors, Logger, RLP, _fetchData, fetchJson, poll, checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy, arrayify, concat, stripZeros, zeroPad, isBytes, isBytesLike, defaultPath, HDNode, SigningKey, Interface, LogDescription, TransactionDescription, base58, base64, hexlify, isHexString, hexConcat, hexStripZeros, hexValue, hexZeroPad, hexDataLength, hexDataSlice, nameprep, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs, formatBytes32String, parseBytes32String, hashMessage, namehash, isValidName, id, _TypedDataEncoder, getAddress, getIcapAddress, getContractAddress, getCreate2Address, isAddress, formatEther, parseEther, formatUnits, parseUnits, commify, computeHmac, keccak256, ripemd160, sha256, sha512, randomBytes, shuffled, solidityPack, solidityKeccak256, soliditySha256, splitSignature, joinSignature, accessListify, parseTransaction, serializeTransaction, getJsonWalletAddress, computeAddress, recoverAddress, computePublicKey, recoverPublicKey, verifyMessage, verifyTypedData, mnemonicToEntropy, entropyToMnemonic, isValidMnemonic, mnemonicToSeed, \n////////////////////////\n// Enums\nSupportedAlgorithm, UnicodeNormalizationForm, Utf8ErrorReason, Indexed };\n//# sourceMappingURL=utils.js.map","export const version = \"ethers/5.1.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map"]}}